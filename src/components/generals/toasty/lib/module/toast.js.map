{"version":3,"sources":["toast.tsx"],"names":["React","useEffect","useRef","useState","ActivityIndicator","Animated","StyleSheet","Text","TouchableWithoutFeedback","View","Toast","props","id","onClose","icon","type","message","duration","style","textStyle","successIcon","dangerIcon","warningIcon","loadingIcon","successColor","dangerColor","warningColor","placement","onPress","refCtnr","animation","Value","_icon","timing","toValue","useNativeDriver","start","closeTimeout","global","setTimeout","clearTimeout","undefined","animationStyle","opacity","transform","translateY","interpolate","inputRange","outputRange","backgroundColor","renderToast","styles","container","iconContainer","isValidElement","create","paddingHorizontal","paddingVertical","borderRadius","marginVertical","flexDirection","alignItems","color","fontWeight","marginRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  StyleProp,\r\n  StyleSheet,\r\n  Text,\r\n  TextStyle,\r\n  TouchableWithoutFeedback,\r\n  View,\r\n  ViewStyle\r\n} from \"react-native\";\r\n\r\nexport interface ToastOptions {\r\n  icon?: JSX.Element;\r\n  type?: \"normal\" | \"success\" | \"danger\" | \"warning\" | \"loading\";\r\n  duration?: number;\r\n  style?: StyleProp<ViewStyle>;\r\n  textStyle?: StyleProp<TextStyle>;\r\n\r\n  successIcon?: JSX.Element;\r\n  dangerIcon?: JSX.Element;\r\n  warningIcon?: JSX.Element;\r\n  loadingIcon?: JSX.Element;\r\n\r\n  successColor?: string;\r\n  dangerColor?: string;\r\n  warningColor?: string;\r\n\r\n  onPress?(id: string): void;\r\n}\r\n\r\nexport interface ToastProps extends ToastOptions {\r\n  id: string;\r\n  onClose(): void;\r\n  message: string | JSX.Element;\r\n  placement?: \"top\" | \"bottom\";\r\n}\r\n\r\nexport function Toast(props: ToastProps) {\r\n  const {\r\n    id,\r\n    onClose,\r\n    icon,\r\n    type = \"normal\",\r\n    message,\r\n    duration = 3000,\r\n    style,\r\n    textStyle,\r\n\r\n    successIcon,\r\n    dangerIcon,\r\n    warningIcon,\r\n    loadingIcon = <ActivityIndicator size=\"small\" color=\"white\" />,\r\n\r\n    successColor,\r\n    dangerColor,\r\n    warningColor,\r\n\r\n    placement,\r\n\r\n    onPress,\r\n  } = props;\r\n  const refCtnr = useRef<View>(null);\r\n  const [animation] = useState(new Animated.Value(0));\r\n\r\n  let _icon: JSX.Element;\r\n\r\n  useEffect(() => {\r\n    Animated.timing(animation, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n      duration: 250,\r\n    }).start();\r\n\r\n    let closeTimeout: NodeJS.Timeout | null = null;\r\n\r\n    if (duration !== 0 && typeof duration === \"number\") {\r\n      closeTimeout = global.setTimeout(() => {\r\n        Animated.timing(animation, {\r\n          toValue: 0,\r\n          useNativeDriver: true,\r\n          duration: 250,\r\n        }).start(() => onClose());\r\n      }, duration);\r\n    }\r\n\r\n    return () => {\r\n      closeTimeout && global.clearTimeout(closeTimeout);\r\n    };\r\n  }, []);\r\n\r\n  if (icon === undefined) {\r\n    switch (type) {\r\n      case \"success\": {\r\n        !!successIcon && (_icon = successIcon);\r\n        break;\r\n      }\r\n\r\n      case \"danger\": {\r\n        !!dangerIcon && (_icon = dangerIcon);\r\n        break;\r\n      }\r\n      case \"warning\": {\r\n        !!warningIcon && (_icon = warningIcon);\r\n        break;\r\n      }\r\n      case \"loading\": {\r\n        !!loadingIcon && (_icon = loadingIcon);\r\n      }\r\n    }\r\n  } else _icon = icon;\r\n\r\n  const animationStyle = {\r\n    opacity: animation,\r\n    transform: [\r\n      {\r\n        translateY: animation.interpolate({\r\n          inputRange: [0, 1],\r\n          outputRange: placement === \"bottom\" ? [20, 0] : [0, 20], // 0 : 150, 0.5 : 75, 1 : 0\r\n        }),\r\n      },\r\n    ],\r\n  };\r\n\r\n  let backgroundColor = \"#333\";\r\n  switch (type) {\r\n    case \"success\":\r\n      backgroundColor = successColor || \"#00C851\";\r\n      break;\r\n    case \"danger\":\r\n      backgroundColor = dangerColor || \"#ff4444\";\r\n      break;\r\n    case \"warning\":\r\n      backgroundColor = warningColor || \"#ffbb33\";\r\n    default:\r\n      backgroundColor = \"#333\";\r\n  }\r\n\r\n  const renderToast = () => (\r\n    <Animated.View\r\n      ref={refCtnr}\r\n      style={[styles.container, animationStyle, { backgroundColor }, style]}\r\n    >\r\n      {_icon ? <View style={styles.iconContainer}>{_icon}</View> : null}\r\n      {React.isValidElement(message) ? (\r\n        message\r\n      ) : (\r\n        <Text style={[styles.message, textStyle]}>{message}</Text>\r\n      )}\r\n    </Animated.View>\r\n  );\r\n\r\n  return onPress ? (\r\n    <TouchableWithoutFeedback onPress={() => onPress(id)}>\r\n      {renderToast()}\r\n    </TouchableWithoutFeedback>\r\n  ) : (\r\n    renderToast()\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 12,\r\n    borderRadius: 5,\r\n    marginVertical: 5,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  message: {\r\n    color: \"#fff\",\r\n    fontWeight: \"500\",\r\n  },\r\n  iconContainer: {\r\n    marginRight: 5,\r\n  },\r\n});\r\n\r\n// export default Toast;\r\n"]}