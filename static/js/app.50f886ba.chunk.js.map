{"version":3,"sources":["src/engines/hooks/useSheets.ts","src/screens/gallery-screen/GalleryScreen.tsx","src/components/generals/buttoon/Buttoon.tsx","src/components/generals/sstyled/sstyled.tsx","src/components/generals/toasty/src/Toasty.tsx","src/components/generals/toasty/src/hook/context.ts","src/components/generals/touchable-web/touchie.tsx","src/components/generals/touchable-web/TouchableWeb.tsx","src/components/generals/txt/Txt.tsx","src/components/generals/ima/Ima.tsx","src/components/decks/SwipeDeck.tsx","src/screens/home-screen/s-contact.tsx","src/screens/home-screen/s-experimental-grid.tsx","src/screens/home-screen/s-intro.tsx","src/screens/home-screen/s-portfolio-grid.tsx","src/screens/home-screen/HomeScreen.tsx","src/assets/images/index.js","src/assets/icons/index.js","src/assets/icons/oooh-icon.tsx","src/utils/helpers/device.helpers.ts","src/utils/helpers/scaling.helpers.ts","src/utils/typings/index.js","src/utils/typings/utils-typings.ts","src/utils/typings/photos-typings.ts","src/engines/functions/js-functions/core.ts","src/engines/functions/js-functions/table-manipulation.ts","src/engines/functions/js-functions/array-manipulation.ts","src/engines/functions/web-functions/Linking.ts","src/engines/functions/index.js","src/utils/styles/eva-dark-v1.ts","src/utils/styles/eva-light-v1.ts","src/utils/styles/color.ts","src/utils/styles/eva-config.ts","src/utils/styles/spacing.ts","src/utils/i18n/i18n.ts","src/utils/i18n/translate.ts","src/components/generals/toasty/src/toast.tsx","src/screens/project-screen/ProjectScreen.tsx","src/screens/project-screen/s-sockdart-hi-3d.tsx","src/screens/project-screen/c-content-card.tsx","src/screens/project-screen/s-koiwave-3d.tsx","src/screens/project-screen/s-ringading-deck.tsx","src/screens/project-screen/s-lucc-concept-3d.tsx","src/screens/project-screen/s-lucc-jacket-3d.tsx","src/screens/about-screen/AboutScreen.tsx","src/assets/images/x-icon.png","src/assets/images/khoi.jpg","src/assets/images/khoi-shades.jpg","src/assets/images/shades.png","src/assets/images/waving_hand_sign_512.gif","src/assets/images/sparkles_512.gif","src/assets/images/nguyenkhoi.gif","src/utils/index.js","src/screens/index.js","App.tsx","webpack:///E:/_WebApp-HUB/khooi-io/index.js?764c","src/engines/providers/app-provider.tsx","src/screens/_navigation/navigation-utils.tsx","src/screens/_navigation/primary.navigator.tsx","src/screens/_navigation/root.navigator.tsx","src/assets/index.js"],"names":["useSheets","sheetName","_key","key","React","_fields","setFields","_data","setData","Tabletop","wanted","simpleSheet","a","async","R","googleData","console","data","fields","GalleryScreen","props","imageUrls","imageIndex","C","useAppContext","index","useNativeDriver","backgroundColor","Buttoon","icon","compact","appearance","disabled","onPress","progress","_loading","setLoading","_accessory","accessoryRight","color","p","preset","name","size","accessoryLeft","Keyboard","style","alignSelf","borderRadius","scale","borderWidth","width","height","margin","sstyled","dim","useDimension","finalStyle","isFunction","customStyle","externalProps","dims","Dimensions","Toasty","id","Math","onClose","requestAnimationFrame","toasts","t","message","toast","this","placement","offset","bottom","top","justifyContent","flexDirection","behavior","Platform","styles","pointerEvents","ref","_ref","p_","Component","defaultProps","StyleSheet","container","flex","position","maxWidth","alignItems","zIndex","left","right","TouchableWithoutFeedback","value","activeOpacity","hitSlop","useDefaultHitSlop","TouchableWeb","touchableProps","outlineWidth","H1","fontSize","fontWeight","H2","H3","H4","H5","H6","S1","S2","P1","letterSpacing","P2","C1","C2","$Title","paddingLeft","spacing","Txt","imageOpacity","Animated","thumbnailOpacity","state","toValue","duration","resizeMode","source","opacity","onLoad","blurRadius","image","SwipeDeck","containerStyle","cardStyle","_currentIndex","setCurrentIndex","WIDTH","HEIGHT","_containerStyle","Number","_cardStyle","_swipeDistance","_position","_rotateAndTranslate","transform","rotate","inputRange","outputRange","extrapolate","_likeOpacity","_dislikeOpacity","_nextCardOpacity","_currentCardOpacity","_nextCardScale","DeckPanResponder","PanResponder","onStartShouldSetPanResponder","onPanResponderMove","x","gestureState","y","onPanResponderRelease","friction","i","item","uri","YupTxt","padding","NahTxt","SS","Ctnr","moderateScale","paddingHorizontal","CtnrContact","Animatable","Avatar","TxtLink","fontStyle","GridCtnr","type","_borderWidth","setBorderWidth","onMouseEnter","onMouseLeave","SSS","overflow","borderColor","Animation","CtnrFilter","marginVertical","borderBottomWidth","GRID_CTNR","marginTop","marginHorizontal","ITEM_CTNR","itemName","itemCode","NiAvatar","img","NiStar","$_FlagRing","setI18N","animated","starColor","starSize","shieldSize","flagColor","tension","LANG","solid","CtnrIntro","paddingRight","S","CTNR_FLAG","marginLeft","FLAG_BCKGRD","CTNR_SHADES","CtnrGrid","useLinkTo","$_PortfolioGrid","refList","_workLayout","setWorkLayout","setExpLayout","scrollToSection","section","scrollToWork","scrollToExp","onLayout","ogData","refGrid","selectedIndex","setSelectedIndex","linkTo","use18","horizontal","onSelect","title","Set","cat","animation","itemDimension","renderItem","delay","Navigation","project","$_ExperimentalGrid","keyExtractor","$_Intro","dark","setTheme","_color","setColor","_underline","setUnderline","THEME","adjustsFontSizeToFit","textDecorationLine","$_Contact","visible","setVisible","textAlign","fn","require","khoi","khoiShades","shades","wavingHand","sparkles","nguyenkhoi","iconOptions","admin","arrow_left","arrow_right","arrow_down","award","bars","ban","bell","flag","calendar","chat_bubble","chevron_right","check","compass","content_share","cog","contacts","dot","dots_horizontal","dots_vertical","email","eye","eye_slash","exclamation_circle","folder","hand_peace","heart","home","install","linkedin","list","lock","medal","minus","notification","pen","plus","placeholder","profile","rocket","refresh","share","sms","tools","send","star","trash","tv","videocam","people","unlock","discover","jcb","mastercard","visa","IconOooh","presets","_iconStyle","BrandedIcon","getType","default","safe","header","circular","isIphoneX","dimen","getBottomSpace","useWindowDimensions","guidelineBaseWidth","guidelineBaseHeight","shortDimension","longDimension","s","vs","ms","factor","mvs","ID","isDateZero","date","formatTime","showSeconds","capitalize","filterByValues","o","joinByType","collection","vLookup","getValue","hLookup","xLookup","ARR","lookupKey","RES","arrayMergeNoDup","filterKey","smartMerging","LinkURL","window","RNLinking","js","web","evaDark","evaLight","themeLight","hichPurple","maturePurple","grey900","grey600","grey500","pitchWhite","transparent","primary","primaryDarker","accent","accentDarker","background","background01","surface","surface01","line","text","text01","errorRed","hazardYellow","infoBlue","awakenVolt","storybookDarkBg","storybookTextColor","themeDark","colors","direction","_height","_width","rate","sheetData","Promise","i18nCodes","i18nEns","i18nVis","en","vi","i18n","resolve","code","lang","keyword","Toast","textStyle","successIcon","dangerIcon","warningIcon","loadingIcon","successColor","dangerColor","warningColor","refCtnr","useRef","useState","useEffect","closeTimeout","global","_icon","animationStyle","translateY","renderToast","paddingVertical","iconContainer","marginRight","route","screenShown","showScreen","projectColor","headline","_contents","setContents","_imgContents","setImgContents","dbContents","newContents","content","imgContents","url","contentContainerStyle","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","removeClippedSubviews","columns","evenColumnStyle","oddColumnStyle","onImagePress","imgIndex","images","$_LuccMain","$_LuccJacket","$_Koiwave","$_Sockdart","$_RingadingDeck","Sctnr","paddingTop","CtnrImg","CtnrLabel","CtnrLoading","Headline","marginBottom","Label","IMG_CTNR","S_SockdartHi","src","frameborder","allow","mozallowfullscreen","webkitallowfullscreen","C_ContentCard","imageWidth","imageProp","chieuRong","S_Koiwave","S_RingadingDeck","setDeckData","deckData","alignContent","category","Linking","S_LuccMain","S_LuccJacket","AboutScreen","iterationCount","module","exports","navigationRef","setRootNavigation","useBackButtonHandler","useNavigationPersistence","initialNavigationState","onNavigationStateChange","initialState","onStateChange","registerRootComponent","App","AppProvider","children","_isReady","shouldReady","_theme","_colors","setColors","_dark","setDark","setLang","fetchi18n","r","_vi","_en","I18n","AppContext","isReady","theme","useContext","linking","prefixes","config","screens","Primary","Home","About","Project","path","navigate","goBack","resetRoot","getRootState","method","getActiveRouteName","canExitRef","onBackPress","navigation","routeName","BackHandler","isRestoringNavigationState","setIsRestoringNavigationState","routeNameRef","restoreState","currentRouteName","exitRoutes","canExit","presetNavConfig","durationSpec","noHeader","headerShown","headerTitle","param","noTitle","headerTitleStyle","screenProps","component","options","headerTransparent","Gallery","__PRIMARY","PrimaryStack","Stack","createStackNavigator","TransitionPresets","gestureEnabled","cardOverlayEnabled","animationEnabled","headerStyle","elevation","headerBackImage","initialRouteName","headerMode","mode","screenOptions","__ROOT","RootStack","transitionSpec","open","close","headerTitleAlign","AppNavigator"],"mappings":"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","file":"static/js/app.50f886ba.chunk.js","sourcesContent":["import * as R from \"ramda\";\r\nimport * as React from \"react\";\r\nimport Tabletop from \"tabletop\";\r\n\r\n/**\r\n * Hook that use Tabletop to fetch data from google Sheets\r\n * @version 0.10.4\r\n * @see https://medium.com/@ryan.mcnierney/using-react-google-sheets-as-your-cms-294c02561d59\r\n *\r\n */\r\nexport function useSheets(\r\n  /** 0 for default Sheets file */\r\n  key: 0 | string,\r\n  sheetName: \"Work\" | \"Exp\" | \"About\" | \"Ringading_Exp\" = \"Work\"\r\n) {\r\n  const _key = key == 0 ? \"1QkECelCYiVVxopwsZD2UsLYZdmd1vFzFc0-pLb71rX8\" : key;\r\n  const [_fields, setFields] = React.useState<dFields>([]);\r\n  const [_data, setData] = React.useState<rSheets[] | null>([]);\r\n  React.useEffect(function fetchData() {\r\n    Tabletop.init({\r\n      key: _key,\r\n      /** set `wanted` with specific `sheetName` to get data only from that sheet */\r\n      wanted: [sheetName],\r\n      simpleSheet: true,\r\n    }).then(async (googleData: null | rSheets[]) => {\r\n      try {\r\n        !!googleData && setData(googleData) && setFields(R.keys(googleData[0]));\r\n      } catch (error) {\r\n        console.warn(\"err useSheets: \", error);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return { data: _data, fields: _fields };\r\n}\r\n\r\ntype dFields = (string | number | symbol)[];\r\nexport type rSheets = {\r\n  _id: string;\r\n  title: string;\r\n  thumbnail: string;\r\n  color: string;\r\n  label: string;\r\n  headline: string;\r\n  body: string;\r\n  body00?: string;\r\n  body01?: string;\r\n  body02?: string;\r\n  body03?: string;\r\n  body04?: string;\r\n  body05?: string;\r\n  body06?: string;\r\n  body07?: string;\r\n  body08?: string;\r\n  body09?: string;\r\n  body10?: string;\r\n  image00?: string;\r\n  image01?: string;\r\n  image02?: string;\r\n  image03?: string;\r\n  image04?: string;\r\n  image05?: string;\r\n  image06?: string;\r\n  image07?: string;\r\n  image08?: string;\r\n  image09?: string;\r\n  image10?: string;\r\n};\r\n","import { useAppContext } from \"engines\";\r\nimport React from \"react\";\r\n// import { ScrollView } from \"react-native-gesture-handler\";\r\nimport ImageViewer from \"react-native-image-zoom-viewer\";\r\n\r\nexport function GalleryScreen(props) {\r\n  const imageUrls = React.useMemo(() => props.route.params.images, [\r\n    props.route.params,\r\n  ]);\r\n  const imageIndex = React.useMemo(() => props.route.params.imgIndex, [\r\n    props.route.params,\r\n  ]);\r\n  const { C } = useAppContext();\r\n\r\n  return (\r\n    <ImageViewer\r\n      imageUrls={imageUrls}\r\n      index={imageIndex}\r\n      useNativeDriver={true}\r\n      backgroundColor={C.background01}\r\n    />\r\n  );\r\n}\r\n\r\n// const images = [\r\n//   {\r\n//     url: \"https://avatars2.githubusercontent.com/u/7970947?v=3&s=460\",\r\n//   },\r\n//   {\r\n//     url: \"https://avatars2.githubusercontent.com/u/7970947?v=3&s=460\",\r\n//   },\r\n//   {\r\n//     url: \"https://avatars2.githubusercontent.com/u/7970947?v=3&s=460\",\r\n//   },\r\n//   {\r\n//     url: \"https://avatars2.githubusercontent.com/u/7970947?v=3&s=460\",\r\n//   },\r\n// ];\r\n","import { Button, ButtonProps } from \"@ui-kitten/components\";\r\nimport { dIconOooh, IconOooh } from \"assets\";\r\nimport { dAccessory } from \"components\";\r\nimport * as React from \"react\";\r\nimport { ActivityIndicator, Keyboard } from \"react-native\";\r\nimport { scale } from \"utils\";\r\n\r\n/**\r\n * ### This is button component\r\n * ---\r\n * @example\r\n *  <Buttoon\r\n      onPress={() => {}}\r\n      appearance=\"ghost\"\r\n      icon={{ name: \"chevron_right\"}}\r\n      status=\"basic\"\r\n      \r\n    >\r\n      Nine-nine!\r\n    </Buttoon>\r\n *\r\n * @version 0.11.25\r\n * -  *fix _accessory to return null if !accessoryLeft/Right*\r\n */\r\nexport function Buttoon(props: P) {\r\n  const {\r\n    icon,\r\n    compact = false,\r\n    appearance,\r\n    disabled,\r\n    onPress,\r\n    progress,\r\n  } = props;\r\n  const [_loading, setLoading] = React.useState(false);\r\n\r\n  /**\r\n   * Internal onPress(),\r\n   * handling progress loading state\r\n   */\r\n  function _onPress() {\r\n    !!progress && setLoading(progress);\r\n    Keyboard.dismiss();\r\n    //@ts-ignore\r\n    onPress && onPress(() => setLoading(false));\r\n  }\r\n  /**\r\n   * Setup Button's accessory prop to be\r\n   * either `accessoryLeft` or `accessoryRight`,\r\n   * depending on `!!icon.right`\r\n   */\r\n  const _accessory = !!!icon\r\n    ? null\r\n    : !!icon?.right\r\n    ? {\r\n        accessoryRight: (p: dAccessory) => {\r\n          return _loading ? (\r\n            <ActivityIndicator color={p.style.tintColor} />\r\n          ) : (\r\n            // <></>\r\n            <IconOooh\r\n              preset={\"default\"}\r\n              name={`arrow_left`}\r\n              size={p.style.width * 0.8}\r\n              color={p.style.tintColor}\r\n              {...icon}\r\n            />\r\n          );\r\n        },\r\n      }\r\n    : {\r\n        accessoryLeft: (p: dAccessory) => {\r\n          return _loading ? (\r\n            <ActivityIndicator color={p.style.tintColor} />\r\n          ) : (\r\n            // <></>\r\n            <IconOooh\r\n              preset={\"default\"}\r\n              name={`arrow_left`}\r\n              size={p.style.width * 0.8}\r\n              color={p.style.tintColor}\r\n              {...icon}\r\n            />\r\n          );\r\n        },\r\n      };\r\n  return (\r\n    //@ts-ignore as _accessory's expected Image, but i can use any <_>\r\n    <Button\r\n      {...props}\r\n      onPress={_onPress}\r\n      style={[\r\n        props.style,\r\n        // { margin: spacing(1) },\r\n        compact && { alignSelf: \"center\" },\r\n        disabled && appearance == \"ghost\" && { backgroundColor: \"transparent\" },\r\n        appearance == \"icon\" && {\r\n          borderRadius: scale(100),\r\n          borderWidth: 0,\r\n          width: scale(20),\r\n          height: scale(20),\r\n          margin: scale(3),\r\n        },\r\n      ]}\r\n      {..._accessory}\r\n    />\r\n  );\r\n}\r\n\r\n// const Confirmation = (props: P) => {\r\n//   const [_label, setLabel] = React.useState(props.children);\r\n//   return <Buttoon {...props} />;\r\n// };\r\n\r\ninterface P extends ButtonProps {\r\n  icon?: dIconOooh & {\r\n    /** Is icon on the right? */\r\n    right?: boolean;\r\n  };\r\n\r\n  /**\r\n   * Should button be wrapped around its children (\"compact\")?\r\n   */\r\n  compact?: boolean;\r\n\r\n  progress?: boolean;\r\n}\r\n","// import { useAppContext } from \"engines\";\r\nimport { useAppContext } from \"engines\";\r\nimport { isFunction } from \"lodash\";\r\nimport React, { ReactNode } from \"react\";\r\nimport { dColors, dDime, useDimension } from \"utils\";\r\n\r\n/**\r\n * ### \"Super\" styled component. \r\n * -  Mimicking `styled-components`, \r\n * with RN props (and Typescript),\r\n * now including dynamic dimension for rn-web\r\n * ---\r\n * \r\n * @example\r\n * ```\r\n * const RoundedButton = sstyled(Button)((p)=> {\r\n    borderRadius: p.ms(10),\r\n    backgroundColor: p.C.primary,\r\n    });\r\n  ```\r\n * ---\r\n * @description Under the hood is the scoped functions,\r\n * -  Get externalProps, pass it to customStyle to use if needed\r\n * -  Pass theme's colors and dim to make customStyle dynamic af\r\n * ```\r\n * <Comp1 {\"external_props\"} /> = sstyled(Comp0)(({\"external_props_is_here_too\", ...dim, C})=> ({\"custom_style\"}))\r\n * ```\r\n * @version 1.12.8\r\n * - *Fix typed error*\r\n * - *Clean up*\r\n * @author nguyenkhooi\r\n */\r\nexport function sstyled<C extends React.ElementType>(GivenComp: C) {\r\n  /**\r\n   * Props of GivenComp (externalProps) are combined with customStyle\r\n   * to create finalStyle\r\n   */\r\n  return (\r\n    customStyle: dCustomStyle<C, dDime & { C: dColors }>\r\n  ): React.FC<React.ComponentProps<C>> => {\r\n    return (externalProps) => {\r\n      //*----Dimension & Colors-------\r\n      const dim = useDimension();\r\n      const { C } = useAppContext();\r\n\r\n      let finalStyle = {\r\n        ...(isFunction(customStyle)\r\n          ? /**\r\n             * If customeStyle is function:\r\n             * customStyle(_) will TAKE external props, dim, and C;\r\n             * return a dynamic `finalStyle`\r\n             * ...\r\n             */\r\n            customStyle({\r\n              ...externalProps,\r\n              ...dim,\r\n              C,\r\n            })\r\n          : /**\r\n             * ...else, just return customStyle {}\r\n             */\r\n            customStyle),\r\n\r\n        ...externalProps.style, //* In case u defines style in externalProps\r\n      };\r\n      return React.createElement(GivenComp, {\r\n        ...externalProps,\r\n        style: finalStyle,\r\n      });\r\n    };\r\n  };\r\n}\r\n\r\ntype dCustomStyle<C extends React.ElementType, ExtraProps> =\r\n  | (React.ComponentProps<C> & ExtraProps)\r\n  | React.ComponentProps<C>[\"style\"]\r\n  | ((\r\n      props: React.ComponentProps<C> & ExtraProps\r\n    ) => React.ComponentProps<C>[\"style\"]);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Dimensions,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  StyleSheet,\r\n  ViewStyle\r\n} from \"react-native\";\r\nimport { Toast, ToastOptions, ToastProps } from \"./toast\";\r\n\r\nconst dims = Dimensions.get(\"window\");\r\n\r\nexport interface Props extends ToastOptions {\r\n  offset?: number;\r\n  placement: \"top\" | \"bottom\";\r\n}\r\n\r\ninterface State {\r\n  toasts: Array<ToastProps>;\r\n}\r\n\r\n/**\r\n * A Toast component for react-native, supports Android, IOS, Web, Windows\r\n *\r\n * ---\r\n * @example\r\n *\r\n * ```\r\n * <Text onPress={()=> Toasty.show(\"Hello mf\", { type: \"success\" })}>Toast!</Text>\r\n * ```\r\n * - In `App.tsx`, add: `<Toasty ref={(ref) => Toasty.setRef(ref)} />`\r\n * ---\r\n * @version 0.10.23\r\n * - *(Preset icon)*\r\n * - *(Add `update()`)*\r\n * - *(Build this up)*\r\n *\r\n * @author nguyenkhooi\r\n * @see https://github.com/arnnis/react-native-fast-toast\r\n */\r\nexport default class Toasty extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      toasts: [],\r\n    };\r\n  }\r\n\r\n  static defaultProps = {\r\n    placement: \"bottom\",\r\n    offset: 60,\r\n  };\r\n  refToast = React.createRef<Toasty>();\r\n\r\n  static _ref: null | Toasty = null;\r\n\r\n  /**\r\n   * In `App.tsx`, add: `<Toasty ref={(ref) => Toasty.setRef(ref)} />`\r\n   */\r\n  static setRef(ref: null | Toasty = null) {\r\n    this._ref = ref;\r\n  }\r\n\r\n  static getRef() {\r\n    return this._ref;\r\n  }\r\n\r\n  static clearRef() {\r\n    this._ref = null;\r\n  }\r\n\r\n  /**\r\n   * Show toasty with message and option\r\n   *\r\n   * ---\r\n   * @example\r\n   * <Text onPress={()=> Toasty.show(\"Hello mf\", { type: \"success\" })}>Toast!</Text>\r\n   */\r\n  static show(message: string, p_: ToastOptions) {\r\n    let id = this._ref?._show(message, p_);\r\n    return id;\r\n  }\r\n\r\n  /**\r\n   * Update current toasty with new message and option\r\n   *\r\n   * ---\r\n   * @example\r\n   * const __toast = Toasty.show(\"...\", { type: \"loading\" });\r\n\r\n    !!__toast &&\r\n      Toasty.update(__toast, \"Done!\", { type: \"success\" });\r\n   */\r\n  static update(id: string, message: string, p_: ToastOptions) {\r\n    this._ref?._update(id, message, p_);\r\n  }\r\n\r\n  /**\r\n   * Hide the current toasty\r\n   *\r\n   * ---\r\n   *  @example\r\n   * const __toast = Toasty.show(\"Sup dude\", { type: \"success\" });\r\n\r\n    !!__toast && Toasty.hide(__toast);\r\n   */\r\n  static hide(id: string) {\r\n    this._ref?._hide(id);\r\n  }\r\n\r\n  private _show = (\r\n    message: string | JSX.Element,\r\n    toastOptions?: ToastOptions\r\n  ) => {\r\n    let id = Math.random().toString();\r\n    const onClose = () => this._hide(id);\r\n\r\n    requestAnimationFrame(() => {\r\n      this.setState({ toasts: this.state.toasts.filter((t) => t.id !== id) });\r\n      this.setState({\r\n        toasts: [\r\n          {\r\n            id,\r\n            onClose,\r\n            message,\r\n            ...toastOptions,\r\n          },\r\n          ...this.state.toasts,\r\n        ],\r\n      });\r\n    });\r\n\r\n    return id;\r\n  };\r\n\r\n  private _update = (\r\n    id: string,\r\n    message: string | JSX.Element,\r\n    toastOptions?: ToastOptions\r\n  ) => {\r\n    this.setState({\r\n      toasts: this.state.toasts.map((toast) =>\r\n        toast.id === id ? { ...toast, message, ...toastOptions } : toast\r\n      ),\r\n    });\r\n  };\r\n\r\n  private _hide = (id: string) => {\r\n    this.setState({ toasts: this.state.toasts.filter((t) => t.id !== id) });\r\n  };\r\n\r\n  render() {\r\n    const { toasts } = this.state;\r\n    let { placement, offset } = this.props;\r\n\r\n    let style: ViewStyle = {\r\n      bottom: placement === \"bottom\" ? offset : undefined,\r\n      top: placement === \"top\" ? offset : undefined,\r\n      justifyContent: placement === \"bottom\" ? \"flex-end\" : \"flex-start\",\r\n      flexDirection: placement === \"bottom\" ? \"column\" : \"column-reverse\",\r\n    };\r\n\r\n    return (\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === \"ios\" ? \"position\" : undefined}\r\n        style={[styles.container, style]}\r\n        pointerEvents=\"box-none\"\r\n      >\r\n        {toasts.map((toast) => (\r\n          <Toast key={toast.id} {...this.props} {...toast} />\r\n        ))}\r\n      </KeyboardAvoidingView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 0,\r\n    position: \"absolute\",\r\n    maxWidth: dims.width * 10 * 9,\r\n    bottom: 100,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    borderRadius: 5,\r\n    zIndex: 999,\r\n    left: \"10%\",\r\n    right: \"10%\",\r\n  },\r\n  message: {\r\n    color: \"#333\",\r\n  },\r\n});\r\n\r\n// export default Toasty;\r\n","import React from \"react\";\r\nimport Toasty from \"../Toasty\";\r\n\r\ntype Toast = React.RefObject<Toasty>[\"current\"];\r\n\r\nexport const ToastyContext = React.createContext(null as Toast);\r\n\r\n// export default ToastyContext;\r\n","/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {\r\n    Insets,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    TouchableOpacityProps,\r\n    ViewStyle\r\n} from \"react-native\";\r\n\r\nexport interface TouchableWithoutFeedbackProps extends TouchableOpacityProps {\r\n  useDefaultHitSlop?: boolean;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nexport type TouchableWithoutFeedbackElement = React.ReactElement<\r\n  TouchableWithoutFeedbackProps\r\n>;\r\n\r\n/**\r\n * Helper component for the Touchable component with no opacity feedback.\r\n *\r\n * Applies recommended hitSlop by default.\r\n * @see https://reactnative.dev/docs/view#hitslop\r\n *\r\n * Allows passing ReactNode as children whereas original TouchableWithoutFeedback not.\r\n */\r\nexport class TouchableWithoutFeedback extends React.Component<\r\n  TouchableWithoutFeedbackProps\r\n> {\r\n  private createHitSlopInsets = (): Insets => {\r\n    const flatStyle: ViewStyle = StyleSheet.flatten(this.props.style || {});\r\n\r\n    // @ts-ignore: `width` is restricted to be a number\r\n    const value: number = 40 - flatStyle.height || 0;\r\n\r\n    return {\r\n      left: value,\r\n      top: value,\r\n      right: value,\r\n      bottom: value,\r\n    };\r\n  };\r\n\r\n  public render(): React.ReactElement {\r\n    return (\r\n      <TouchableOpacity\r\n        activeOpacity={1.0}\r\n        hitSlop={this.props.useDefaultHitSlop && this.createHitSlopInsets()}\r\n        {...this.props}\r\n      />\r\n    );\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {\r\n    NativeSyntheticEvent,\r\n    Platform,\r\n    StyleSheet,\r\n    TargetedEvent\r\n} from \"react-native\";\r\nimport {\r\n    TouchableWithoutFeedback,\r\n    TouchableWithoutFeedbackProps\r\n} from \"./touchie\";\r\n\r\nexport interface TouchableWebProps extends TouchableWithoutFeedbackProps {\r\n  onMouseEnter?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\r\n  onMouseLeave?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\r\n  onFocus?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\r\n  onBlur?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\r\n}\r\n\r\nexport type TouchableWebElement = React.ReactElement<TouchableWebProps>;\r\n\r\n/**\r\n * Helper component for the Touchable component rendered on the web.\r\n * \r\n * @example\r\n *  const [_color, setColor] = React.useState(\"dodgerblue\")\r\n *  \r\n *  <TouchableWeb\r\n        onMouseEnter={(e) => {\r\n          setColor(\"tomato\");\r\n        }}\r\n        onMouseLeave={(e) => {\r\n          setColor(\"dodgerblue\");\r\n        }}\r\n      >\r\n        <Text style={{color: _color }>Hi, I'm Khoi 👋</Text>\r\n    </TouchableWeb>\r\n */\r\nexport class TouchableWeb extends React.Component<TouchableWebProps> {\r\n  public render(): React.ReactElement {\r\n    const { style, ...touchableProps } = this.props;\r\n\r\n    return (\r\n      <TouchableWithoutFeedback\r\n        {...touchableProps}\r\n        style={[styles.container, style]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst styles =\r\n  Platform.OS === \"web\" &&\r\n  StyleSheet.create({\r\n    container: {\r\n      // @ts-ignore\r\n      outlineWidth: 0,\r\n    },\r\n  });\r\n","import { Text, TextProps } from \"@ui-kitten/components\";\r\nimport { spacing } from \"utils\";\r\nimport { sstyled } from \"../sstyled/sstyled\";\r\n\r\nconst H1 = sstyled(Text)((p) => ({\r\n  fontSize: p.ms(36),\r\n  fontWeight: \"800\",\r\n}));\r\nconst H2 = sstyled(Text)((p) => ({\r\n  fontSize: p.ms(32),\r\n  fontWeight: \"800\",\r\n}));\r\nconst H3 = sstyled(Text)((p) => ({\r\n  fontSize: p.ms(30),\r\n  fontWeight: \"800\",\r\n}));\r\nconst H4 = sstyled(Text)((p) => ({\r\n  fontSize: p.ms(26),\r\n  fontWeight: \"800\",\r\n}));\r\nconst H5 = sstyled(Text)((p) => ({\r\n  fontSize: p.ms(22),\r\n  fontWeight: \"800\",\r\n}));\r\nconst H6 = sstyled(Text)((p) => ({\r\n  fontSize: p.ms(18),\r\n  fontWeight: \"800\",\r\n}));\r\nconst S1 = sstyled(Text)((p) => ({\r\n  fontSize: p.ms(15),\r\n  fontWeight: \"600\",\r\n}));\r\nconst S2 = sstyled(Text)((p) => ({\r\n  fontSize: p.ms(13),\r\n  fontWeight: \"600\",\r\n}));\r\nconst P1 = sstyled(Text)((p) => ({\r\n  fontSize: p.ms(14),\r\n  fontWeight: \"400\",\r\n  letterSpacing: 0.5,\r\n}));\r\nconst P2 = sstyled(Text)((p) => ({\r\n  fontSize: p.ms(12),\r\n  fontWeight: \"400\",\r\n  letterSpacing: 0.5,\r\n}));\r\nconst C1 = sstyled(Text)((p) => ({\r\n  fontSize: p.ms(12),\r\n  fontWeight: \"400\",\r\n}));\r\nconst C2 = sstyled(Text)((p) => ({\r\n  fontSize: p.ms(12),\r\n  fontWeight: \"400\",\r\n}));\r\nconst $Title = sstyled(H6)((p) => ({\r\n  paddingLeft: spacing(5),\r\n  color: p.C.grey600,\r\n}));\r\n\r\n/**\r\n * A text component of the project,\r\n * depending on ui-kitten's Text\r\n * ---\r\n * @example\r\n * ```\r\n * <Txt>👋</Txt>\r\n * ```\r\n * ---\r\n * @version 0.11.25\r\n * - *No more `ms(size)` to reduce font size*\r\n */\r\nexport const Txt: dTxtC0 = P1;\r\nTxt.H1 = H1;\r\nTxt.H2 = H2;\r\nTxt.H3 = H3;\r\nTxt.H4 = H4;\r\nTxt.H5 = H5;\r\nTxt.H6 = H6;\r\nTxt.S1 = S1;\r\nTxt.S2 = S2;\r\nTxt.P1 = P1;\r\nTxt.P2 = P2;\r\nTxt.C1 = C1;\r\nTxt.C2 = C2;\r\nTxt.$Title = $Title;\r\n\r\nexport interface dTxtC0 extends React.FC<TextProps> {\r\n  /** Heading 1 */\r\n  H1?: React.FC<TextProps>;\r\n  H2?: React.FC<TextProps>;\r\n  H3?: React.FC<TextProps>;\r\n  H4?: React.FC<TextProps>;\r\n  H5?: React.FC<TextProps>;\r\n  H6?: React.FC<TextProps>;\r\n  /** Subheading 1 */\r\n  S1?: React.FC<TextProps>;\r\n  S2?: React.FC<TextProps>;\r\n  P1?: React.FC<TextProps>;\r\n  P2?: React.FC<TextProps>;\r\n  C1?: React.FC<TextProps>;\r\n  C2?: React.FC<TextProps>;\r\n  /** Section Title */\r\n  $Title?: React.FC<TextProps>;\r\n}\r\n// export const Txt = Text;\r\n","import React, { Component } from \"react\";\r\nimport { Animated, View, Image, StyleSheet } from \"react-native\";\r\n\r\nexport class Ima extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      imageOpacity: new Animated.Value(0),\r\n      thumbnailOpacity: new Animated.Value(0),\r\n    };\r\n  }\r\n\r\n  onLoadThumbnail() {\r\n    Animated.timing(this.state.thumbnailOpacity, {\r\n      toValue: 1,\r\n      duration: this.props.thumbnailFadeDuration,\r\n      useNativeDriver: true,\r\n    }).start();\r\n    !!this.props.onLoadThumbnail && this.props.onLoadThumbnail();\r\n  }\r\n\r\n  onLoadImage() {\r\n    Animated.timing(this.state.imageOpacity, {\r\n      toValue: 1,\r\n      duration: this.props.imageFadeDuration,\r\n      useNativeDriver: true,\r\n    }).start();\r\n    !!this.props.onLoadImage && this.props.onLoadImage();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={this.props.style}>\r\n        <Image\r\n          resizeMode=\"cover\"\r\n          style={[styles.image, this.props.style]}\r\n          source={this.props.placeHolderSource}\r\n        />\r\n        <Animated.Image\r\n          resizeMode=\"cover\"\r\n          style={[\r\n            styles.image,\r\n            { opacity: this.state.thumbnailOpacity },\r\n            this.props.style,\r\n          ]}\r\n          source={this.props.thumbnailSource}\r\n          onLoad={() => this.onLoadThumbnail()}\r\n          blurRadius={this.props.thumbnailBlurRadius}\r\n        />\r\n        <Animated.Image\r\n          resizeMode=\"cover\"\r\n          style={[\r\n            styles.image,\r\n            { opacity: this.state.imageOpacity },\r\n            this.props.style,\r\n          ]}\r\n          source={this.props.imageSource}\r\n          onLoad={() => this.onLoadImage()}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n});\r\n","import { Text } from \"@ui-kitten/components\";\r\nimport { sstyled } from \"components/generals\";\r\nimport React from \"react\";\r\nimport {\r\n  Animated,\r\n  Image,\r\n  PanResponder,\r\n  PanResponderInstance,\r\n  View,\r\n  ViewStyle,\r\n} from \"react-native\";\r\nimport { useDimension } from \"utils\";\r\n\r\nexport const useComponentWillMount = (func, condition: any[]) => {\r\n  React.useMemo(func, []);\r\n};\r\n\r\ninterface dCOMPSwipeDeck {\r\n  data: any[];\r\n  containerStyle?: ViewStyle;\r\n  cardStyle?: ViewStyle;\r\n}\r\n\r\n/**\r\n * A SwipeDeck to yay or nay sth\r\n * \r\n * @example\r\n * <SwipeDeck\r\n      {...props}\r\n      data={[\r\n        {\r\n          id: '1',\r\n          uri:\r\n            'https://s.aolcdn.com/hss/storage/midas/e7998a2022772944bf34580700e3586e/203932724/leaguewallpaper.jpg',\r\n        },\r\n        {\r\n          id: '2',\r\n          uri: 'https://images4.alphacoders.com/600/thumb-1920-600528.png',\r\n        },\r\n        {\r\n          id: '3',\r\n          uri:\r\n            'https://image.winudf.com/v2/image/Y29tLnRkZy5sb2x3YWxscGFwZXJzX3NjcmVlbl85XzE1MzA3MTgwNThfMDY2/screen-9.jpg?fakeurl=1&type=.jpg',\r\n        },\r\n      ]}\r\n    />\r\n */\r\nexport function SwipeDeck(props: dCOMPSwipeDeck) {\r\n  const {\r\n    data,\r\n    containerStyle = { width: 1200, height: 1800 },\r\n    cardStyle = { width: 600, height: 900 },\r\n  } = props;\r\n  const [_currentIndex, setCurrentIndex] = React.useState(0);\r\n  const [_data, setData] = React.useState(data);\r\n  const { WIDTH, HEIGHT } = useDimension();\r\n\r\n  const _containerStyle: ViewStyle = {\r\n    ...containerStyle,\r\n    width: Number(containerStyle.width),\r\n    height: Number(containerStyle.height),\r\n  };\r\n\r\n  const _cardStyle: ViewStyle = {\r\n    ...cardStyle,\r\n    left: !!containerStyle?.width\r\n      ? Number(containerStyle.width) / 2 - Number(cardStyle?.width) / 2\r\n      : WIDTH / 2 - Number(cardStyle?.width) / 2,\r\n    top: !!containerStyle?.height\r\n      ? Number(containerStyle.height) / 2 - Number(cardStyle?.height) / 2\r\n      : HEIGHT / 2 - Number(cardStyle.height) / 2,\r\n  };\r\n\r\n  const _swipeDistance = Number(_containerStyle.width) / 2;\r\n\r\n  let _position = new Animated.ValueXY();\r\n  let _rotate = _position.x.interpolate({\r\n    inputRange: [-_swipeDistance, 0, _swipeDistance],\r\n    outputRange: [\"-10deg\", \"0deg\", \"10deg\"],\r\n    extrapolate: \"clamp\",\r\n  });\r\n\r\n  let _rotateAndTranslate = {\r\n    transform: [\r\n      {\r\n        rotate: _rotate,\r\n      },\r\n      ..._position.getTranslateTransform(),\r\n    ],\r\n  };\r\n\r\n  let _likeOpacity = _position.x.interpolate({\r\n    inputRange: [-_swipeDistance, 0, _swipeDistance],\r\n    outputRange: [0, 0, 1],\r\n    extrapolate: \"clamp\",\r\n  });\r\n  let _dislikeOpacity = _position.x.interpolate({\r\n    inputRange: [-_swipeDistance, 0, _swipeDistance],\r\n    outputRange: [1, 0, 0],\r\n    extrapolate: \"clamp\",\r\n  });\r\n\r\n  let _nextCardOpacity = _position.x.interpolate({\r\n    inputRange: [-_swipeDistance, 0, _swipeDistance],\r\n    outputRange: [1, 0, 1],\r\n    extrapolate: \"clamp\",\r\n  });\r\n  let _currentCardOpacity = _position.x.interpolate({\r\n    inputRange: [-_swipeDistance, 0, _swipeDistance],\r\n    outputRange: [0.1, 1, 0.1],\r\n    extrapolate: \"clamp\",\r\n  });\r\n  let _nextCardScale = _position.x.interpolate({\r\n    inputRange: [-_swipeDistance, 0, _swipeDistance],\r\n    outputRange: [1, 0.8, 1],\r\n    extrapolate: \"clamp\",\r\n  });\r\n\r\n  function onRestartDeck() {}\r\n\r\n  let DeckPanResponder: PanResponderInstance;\r\n  function applyPanResponder() {\r\n    console.log(\"mounting..\");\r\n    DeckPanResponder = PanResponder.create({\r\n      onStartShouldSetPanResponder: (evt, gestureState) => true,\r\n      onPanResponderMove: (evt, gestureState) => {\r\n        _position.setValue({ x: gestureState.dx, y: gestureState.dy });\r\n      },\r\n      onPanResponderRelease: (evt, gestureState) => {\r\n        switch (gestureState.dx > 120) {\r\n          /** Swipe Right */\r\n          case true:\r\n            setCurrentIndex(_currentIndex + 1);\r\n            return Animated.spring(_position, {\r\n              toValue: { x: WIDTH + 100, y: gestureState.dy },\r\n              useNativeDriver: true,\r\n            }).start(() => {\r\n              /** Post swipe right */\r\n              _position.setValue({ x: 0, y: 0 });\r\n            });\r\n            break;\r\n          /** Swipe Left */\r\n          case false:\r\n            setCurrentIndex(_currentIndex + 1);\r\n            return Animated.spring(_position, {\r\n              toValue: { x: -WIDTH - 100, y: gestureState.dy },\r\n              useNativeDriver: true,\r\n            }).start(() => {\r\n              /** Post swipe left */\r\n              _position.setValue({ x: 0, y: 0 });\r\n            });\r\n            break;\r\n          /** If user doesn't complete a swipe */\r\n          default:\r\n            return Animated.spring(_position, {\r\n              toValue: { x: 0, y: 0 },\r\n              friction: 4,\r\n              useNativeDriver: true,\r\n            }).start();\r\n            break;\r\n        }\r\n\r\n        // if (gestureState.dx > 120) {\r\n        //   setCurrentIndex(_currentIndex + 1);\r\n        //   Animated.spring(_position, {\r\n        //     toValue: { x: width + 100, y: gestureState.dy },\r\n        //     useNativeDriver: true,\r\n        //   }).start(() => {\r\n        //     /** Post swipe right */\r\n        //     _position.setValue({ x: 0, y: 0 });\r\n        //   });\r\n        // } else if (gestureState.dx < -120) {\r\n        //   /** Swipe Left */\r\n        //   setCurrentIndex(_currentIndex + 1);\r\n        //   Animated.spring(_position, {\r\n        //     toValue: { x: -width - 100, y: gestureState.dy },\r\n        //     useNativeDriver: true,\r\n        //   }).start(() => {\r\n        //     /** Post swipe left */\r\n        //     _position.setValue({ x: 0, y: 0 });\r\n        //   });\r\n        // } else {\r\n        //   /** If user doesn't complete a swipe */\r\n        //   Animated.spring(_position, {\r\n        //     toValue: { x: 0, y: 0 },\r\n        //     friction: 4,\r\n        //     useNativeDriver: true,\r\n        //   }).start();\r\n        // }\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Apply and re-apply panResponder when either:\r\n   *    currentIndex changes (post swipe), or\r\n   *    dimension changes (making cardStyle changes)\r\n   *\r\n   */\r\n  React.useMemo(applyPanResponder, [_currentIndex, _cardStyle]);\r\n\r\n  function renderUsers() {\r\n    return _data\r\n      .map((item, i: number) => {\r\n        if (i < _currentIndex) {\r\n          return null; //* has to be null to have it disappeared\r\n        } else if (i == _currentIndex) {\r\n          return (\r\n            <Animated.View\r\n              {...DeckPanResponder?.panHandlers}\r\n              key={item._id}\r\n              style={[\r\n                _rotateAndTranslate,\r\n                _cardStyle,\r\n                { position: \"absolute\" },\r\n              ]}\r\n            >\r\n              <Animated.View\r\n                style={{\r\n                  opacity: _likeOpacity,\r\n                  transform: [{ rotate: \"-30deg\" }],\r\n                  position: \"absolute\",\r\n                  top: 50,\r\n                  left: 40,\r\n                  zIndex: 1000,\r\n                }}\r\n              >\r\n                <YupTxt {...props}>Yup</YupTxt>\r\n              </Animated.View>\r\n\r\n              <Animated.View\r\n                style={{\r\n                  opacity: _dislikeOpacity,\r\n                  transform: [{ rotate: \"30deg\" }],\r\n                  position: \"absolute\",\r\n                  top: 50,\r\n                  right: 40,\r\n                  zIndex: 1000,\r\n                }}\r\n              >\r\n                <NahTxt {...props}>Nah</NahTxt>\r\n              </Animated.View>\r\n\r\n              <Animated.Image\r\n                style={{\r\n                  flex: 1,\r\n                  resizeMode: \"cover\",\r\n                  borderRadius: 20,\r\n                  opacity: _currentCardOpacity,\r\n                }}\r\n                source={{ uri: item.photo00 }}\r\n              />\r\n            </Animated.View>\r\n          );\r\n        } else {\r\n          return (\r\n            <Animated.View\r\n              key={item.id}\r\n              style={[\r\n                _cardStyle,\r\n                {\r\n                  opacity: _nextCardOpacity,\r\n                  transform: [{ scale: _nextCardScale }],\r\n                  position: \"absolute\",\r\n                },\r\n              ]}\r\n            >\r\n              <Image\r\n                style={{\r\n                  flex: 1,\r\n                  resizeMode: \"cover\",\r\n                  borderRadius: 20,\r\n                }}\r\n                source={{ uri: item.photo00 }}\r\n              />\r\n            </Animated.View>\r\n          );\r\n        }\r\n      })\r\n      .reverse();\r\n  }\r\n  return (\r\n    <View style={[_containerStyle]}>\r\n      {/* <Text\r\n        style={{\r\n          borderWidth: 1,\r\n          borderColor: \"green\",\r\n          color: \"green\",\r\n          fontSize: 32,\r\n          fontWeight: \"800\",\r\n          padding: 10,\r\n        }}\r\n      >\r\n        {JSON.stringify(_currentIndex)}\r\n      </Text> */}\r\n      {renderUsers()}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst YupTxt = sstyled(Text)({\r\n  color: \"#39FF14\",\r\n  fontSize: 32,\r\n  fontWeight: \"600\",\r\n  padding: 10,\r\n});\r\n\r\nconst NahTxt = sstyled(Text)({\r\n  color: \"tomato\",\r\n  fontSize: 32,\r\n  fontWeight: \"600\",\r\n  padding: 10,\r\n});\r\n","import { img } from \"assets\";\r\nimport { Buttoon, sstyled, TouchableWeb, Txt } from \"components\";\r\nimport { fn, useAppContext } from \"engines\";\r\nimport React from \"react\";\r\nimport { Image, View } from \"react-native\";\r\nimport * as Animatable from \"react-native-animatable\";\r\nimport { IPSCR, moderateScale, spacing, use18, useDimension } from \"utils\";\r\n\r\ninterface d$_Intro extends IPSCR {\r\n  scrollToWork(): void;\r\n  scrollToExp(): void;\r\n}\r\nexport function S_Contact(props: d$_Intro) {\r\n  const { scrollToWork, scrollToExp } = props;\r\n  const { C, dark, setTheme } = useAppContext();\r\n  const { HEIGHT } = useDimension(\"window\");\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [_underline, setUnderline] = React.useState<\"none\" | \"underline\">(\r\n    \"none\"\r\n  );\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        height: HEIGHT,\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <SS.CtnrContact animation=\"fadeIn\" delay={1000}>\r\n        <TouchableWeb\r\n          style={{ justifyContent: \"flex-start\" }}\r\n          onMouseEnter={() => {\r\n            setVisible(true);\r\n            setUnderline(\"underline\");\r\n          }}\r\n          onMouseLeave={() => {\r\n            setVisible(false);\r\n            setUnderline(\"none\");\r\n          }}\r\n        >\r\n          <Txt.H6 style={{ textAlign: \"center\" }}>\r\n            {use18(\"Noice! Let's connect\")}\r\n          </Txt.H6>\r\n          <View\r\n            style={{ flexDirection: \"row\", justifyContent: \"space-around\" }}\r\n          >\r\n            <Buttoon\r\n              appearance=\"ghost\"\r\n              compact\r\n              size=\"giant\"\r\n              style={{ borderRadius: 100 }}\r\n              icon={{ name: visible ? \"email\" : null, color: C.errorRed }}\r\n              onPress={() => {\r\n                fn.web.LinkURL(\r\n                  `mailto:drkhoi16@gmail.com?subject=Hi Khoi&body=`,\r\n                  true\r\n                );\r\n              }}\r\n            >\r\n              drkhoi16atgmail\r\n            </Buttoon>\r\n            <Buttoon\r\n              appearance=\"ghost\"\r\n              compact\r\n              icon={{ name: visible ? \"linkedin\" : null, color: C.infoBlue }}\r\n              size=\"giant\"\r\n              style={{ borderRadius: 100 }}\r\n              onPress={() => {\r\n                fn.web.LinkURL(`https://www.linkedin.com/in/ktran5`, true);\r\n              }}\r\n            >\r\n              linkedinatktran5\r\n            </Buttoon>\r\n          </View>\r\n        </TouchableWeb>\r\n        <Image\r\n          source={img.nguyenkhoi}\r\n          style={{ width: 714 * 0.5, height: 288 * 0.5 }}\r\n        />\r\n      </SS.CtnrContact>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst SS = {\r\n  Ctnr: sstyled(View)(() => ({\r\n    width: moderateScale(100),\r\n    height: moderateScale(100),\r\n    paddingHorizontal: spacing(6),\r\n  })),\r\n  CtnrContact: sstyled(Animatable.View)((p) => ({\r\n    paddingHorizontal: spacing(6),\r\n    alignItems: \"center\",\r\n  })),\r\n  Avatar: sstyled(Animatable.Image)(() => ({\r\n    width: moderateScale(100),\r\n    height: moderateScale(100),\r\n    borderRadius: 200,\r\n    transform: [{ rotate: \"-10deg\" }],\r\n  })),\r\n  TxtLink: sstyled(Txt.S1)({\r\n    // fontSize: 29,\r\n    fontWeight: \"500\",\r\n    fontStyle: \"italic\",\r\n  }),\r\n};\r\n","import { IndexPath, Menu, MenuItem, Text } from \"@ui-kitten/components\";\r\nimport { Txt, TouchableWeb, TouchableWebProps, sstyled } from \"components\";\r\nimport { useSheets } from \"engines/hooks\";\r\nimport { useAppContext } from \"engines\";\r\nimport * as R from \"ramda\";\r\nimport React from \"react\";\r\nimport {\r\n  ActivityIndicator,\r\n  ImageBackground,\r\n  TextStyle,\r\n  View,\r\n  ViewStyle,\r\n} from \"react-native\";\r\nimport { FlatGrid } from \"react-native-super-grid\";\r\nimport { Placeholder, ShineOverlay, PlaceholderMedia } from \"rn-placeholder\";\r\nimport { Navigation } from \"screens/_navigation\";\r\nimport { dColors, IPSCR, scale, spacing, use18, useDimension } from \"utils\";\r\nimport * as Animatable from \"react-native-animatable\";\r\nimport { useLinkTo } from \"@react-navigation/native\";\r\n\r\nexport function S_ExperimentalGrid(props: IPSCR) {\r\n  const { C } = useAppContext();\r\n  const { data } = useSheets(0, \"Exp\");\r\n  // console.log(\"data: \", data);\r\n  const { WIDTH } = useDimension(\"window\");\r\n\r\n  const ogData = React.useMemo(() => data, [data]);\r\n  const [_data, setData] = React.useState([]);\r\n\r\n  const refGrid = React.useRef<Animatable.View>();\r\n  const [selectedIndex, setSelectedIndex] = React.useState(new IndexPath(0));\r\n  const linkTo = useLinkTo();\r\n  return (\r\n    <View style={{}}>\r\n      {/* <Text>{JSON.stringify(keys)}</Text> */}\r\n      <Txt.$Title>{use18(\"Experiments\")}</Txt.$Title>\r\n      <SS.CtnrFilter\r\n        horizontal={true}\r\n        selectedIndex={selectedIndex}\r\n        onSelect={(index) => setSelectedIndex(index)}\r\n      >\r\n        <MenuItem\r\n          onPress={() => {\r\n            setData(ogData);\r\n            setSelectedIndex(new IndexPath(0));\r\n          }}\r\n          title={use18(\"All\")}\r\n        />\r\n        {[...new Set(R.pluck(\"cat\", ogData))].map((cat, index) => (\r\n          <MenuItem\r\n            key={cat + index}\r\n            onPress={() => {\r\n              setData([...ogData.filter((item) => item.cat === cat)]);\r\n              setSelectedIndex(new IndexPath(index + 1));\r\n              refGrid.current.fadeInUp(800);\r\n            }}\r\n            title={cat}\r\n          />\r\n        ))}\r\n      </SS.CtnrFilter>\r\n      {!!data ? (\r\n        <Animatable.View ref={refGrid} animation=\"fadeInUp\">\r\n          <FlatGrid\r\n            itemDimension={WIDTH <= 1000 ? WIDTH * 0.9 : WIDTH * 0.3}\r\n            data={R.isEmpty(_data) ? data : _data}\r\n            keyExtractor={(item, index) => `${item._id} - ${index}`}\r\n            style={[SSS().GRID_CTNR]}\r\n            // staticDimension={300}\r\n            // fixed\r\n            spacing={10}\r\n            renderItem={({ item, index }) => (\r\n              <Animatable.View animation=\"fadeIn\" delay={100 * index}>\r\n                <GridCtnr\r\n                  {...props}\r\n                  onPress={() => {\r\n                    linkTo(\"/project/\" + item.title);\r\n                    Navigation.navigate(\"Project\", {\r\n                      project: item,\r\n                    });\r\n                  }}\r\n                  item={item}\r\n                />\r\n              </Animatable.View>\r\n            )}\r\n          />\r\n        </Animatable.View>\r\n      ) : (\r\n        <View\r\n          style={{ ...SSS().GRID_CTNR, alignSelf: \"flex-start\", width: 500 }}\r\n        >\r\n          <GridCtnr {...props} type=\"placeholder\" />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\ninterface dGridCtnr extends TouchableWebProps, IPSCR {\r\n  item?: { thumbnail: string; title: string; color: string; label: string };\r\n  type?: \"placeholder\";\r\n}\r\nconst GridCtnr = (props: dGridCtnr) => {\r\n  const { onPress, item, type } = props;\r\n  const { C } = useAppContext();\r\n  const [_borderWidth, setBorderWidth] = React.useState(0);\r\n  const { WIDTH } = useDimension(\"window\");\r\n  return type != \"placeholder\" ? (\r\n    <TouchableWeb\r\n      onMouseEnter={(e) => {\r\n        setBorderWidth(6);\r\n      }}\r\n      onMouseLeave={(e) => {\r\n        setBorderWidth(0);\r\n      }}\r\n      onPress={onPress}\r\n    >\r\n      <ImageBackground\r\n        source={{ uri: item?.thumbnail }}\r\n        style={[\r\n          SSS().ITEM_CTNR,\r\n          {\r\n            backgroundColor: item?.color,\r\n            overflow: \"hidden\",\r\n            borderWidth: _borderWidth,\r\n            borderColor: item?.color,\r\n          },\r\n        ]}\r\n      >\r\n        <Txt.S1 style={SSS().itemName}>{item?.title}</Txt.S1>\r\n        <Txt.P2 style={SSS().itemCode}>{item?.label}</Txt.P2>\r\n      </ImageBackground>\r\n    </TouchableWeb>\r\n  ) : (\r\n    <Placeholder Animation={ShineOverlay}>\r\n      <PlaceholderMedia\r\n        style={[\r\n          SSS().ITEM_CTNR,\r\n          { width: WIDTH <= 1000 ? WIDTH * 0.9 : WIDTH * 0.3 },\r\n        ]}\r\n      ></PlaceholderMedia>\r\n    </Placeholder>\r\n  );\r\n};\r\n\r\nconst SS = {\r\n  CtnrFilter: sstyled(Menu)((p) => ({\r\n    flexDirection: \"row\",\r\n    marginVertical: spacing(5),\r\n    borderRadius: 5,\r\n    borderWidth: 0,\r\n    borderBottomWidth: 1,\r\n    alignSelf: \"center\",\r\n    overflow: \"hidden\",\r\n    borderColor: p.C.dim,\r\n  })),\r\n};\r\n\r\nconst SSS = (C?: dColors) => {\r\n  return {\r\n    GRID_CTNR: {\r\n      marginTop: 10,\r\n      marginHorizontal: spacing(5),\r\n      // flex: 1,\r\n    } as ViewStyle,\r\n    ITEM_CTNR: {\r\n      justifyContent: \"flex-end\",\r\n      borderRadius: 5,\r\n      padding: 10,\r\n      height: 300,\r\n    } as ViewStyle,\r\n    itemName: {\r\n      color: \"#fff\",\r\n      // fontSize: scale(18),\r\n      // fontWeight: \"600\",\r\n    } as TextStyle,\r\n    itemCode: {\r\n      // fontWeight: \"600\",\r\n      // fontSize: scale(12),\r\n      color: \"#fff\",\r\n    } as TextStyle,\r\n  };\r\n};\r\n","import { img } from \"assets\";\r\nimport { sstyled, Toasty, TouchableWeb, Txt } from \"components\";\r\nimport { useAppContext } from \"engines\";\r\nimport React from \"react\";\r\nimport { Animated, ImageStyle, View, ViewStyle } from \"react-native\";\r\nimport * as Animatable from \"react-native-animatable\";\r\nimport FA5 from \"react-native-vector-icons/FontAwesome5\";\r\nimport { Navigation } from \"screens\";\r\nimport {\r\n  IPSCR,\r\n  LANG,\r\n  moderateScale,\r\n  spacing,\r\n  THEME,\r\n  use18,\r\n  useDimension\r\n} from \"utils\";\r\n\r\ninterface d$_Intro extends IPSCR {\r\n  scrollToWork(): void;\r\n  scrollToExp(): void;\r\n}\r\nexport function S_Intro(props: d$_Intro) {\r\n  const { scrollToWork, scrollToExp } = props;\r\n  const { C, dark, setTheme } = useAppContext();\r\n  const { HEIGHT } = useDimension(\"window\");\r\n  const [_color, setColor] = React.useState(C.text);\r\n  const [_underline, setUnderline] = React.useState<\"none\" | \"underline\">(\r\n    \"none\"\r\n  );\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        height: HEIGHT,\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <NiAvatar />\r\n      <SS.CtnrIntro animation=\"fadeIn\" delay={1000}>\r\n        <TouchableWeb\r\n          onMouseEnter={() => {\r\n            setColor(C.dim);\r\n            setUnderline(\"underline\");\r\n          }}\r\n          onMouseLeave={() => {\r\n            setColor(C.text);\r\n            setUnderline(\"none\");\r\n          }}\r\n        >\r\n          <Txt.H6\r\n            onPress={() => {\r\n              setTheme(dark ? THEME.LIGHT : THEME.DARK);\r\n            }}\r\n          >\r\n            {use18(\"intro-1\")} {\"👋\"}{\" \"}\r\n          </Txt.H6>\r\n\r\n          <Txt.S1 style={{ color: _color }} adjustsFontSizeToFit={true}>\r\n            {use18(\"intro-2\")}{\" \"}\r\n            <SS.TxtLink\r\n              style={{ textDecorationLine: _underline }}\r\n              onPress={scrollToWork}\r\n            >\r\n              {use18(\"intro-3\")}\r\n            </SS.TxtLink>{\" \"}\r\n            {use18(\"intro-4\")}{\" \"}\r\n            <SS.TxtLink\r\n              style={{ textDecorationLine: _underline }}\r\n              onPress={scrollToExp}\r\n            >\r\n              {use18(\"intro-5\")}\r\n            </SS.TxtLink>{\" \"}\r\n            {\"\\n\"}\r\n            {use18(\"intro-6\")}{\" \"}\r\n            <SS.TxtLink\r\n              style={{ textDecorationLine: _underline }}\r\n              onPress={() => Navigation.navigate(\"About\")}\r\n            >\r\n              {use18(\"intro-7\")}\r\n            </SS.TxtLink>{\" \"}\r\n            {use18(\"intro-8\")}{\" \"}\r\n            <SS.TxtLink\r\n              style={{ textDecorationLine: _underline }}\r\n              onPress={() => Navigation.navigate(\"About\")}\r\n            >\r\n              {use18(\"intro-9\")}\r\n            </SS.TxtLink>\r\n          </Txt.S1>\r\n        </TouchableWeb>\r\n      </SS.CtnrIntro>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst NiAvatar = () => {\r\n  const { WIDTH } = useDimension();\r\n  const { dark } = useAppContext();\r\n  //   const refShades = React.useRef<Animatable.View>();\r\n  //   React.useEffect(\r\n  //     function movingShades() {\r\n  //       dark ? refShades.current.bounce(500) : refShades.current.fadeOut(500);\r\n  //     },\r\n  //     [dark]\r\n  //   );\r\n\r\n  const [] = React.useState<\"Let's hi-five!\" | \"Noice\">(\"Let's hi-five!\");\r\n  return (\r\n    <SS.Ctnr>\r\n      <SS.Avatar source={img.khoi} />\r\n      <$_FlagRing />\r\n    </SS.Ctnr>\r\n  );\r\n};\r\n\r\n/**\r\n * Can't use IconOooh here as createAnimatedComponent(_) requires class <_>\r\n */\r\nconst NiStar = Animated.createAnimatedComponent(FA5);\r\n\r\nconst $_FlagRing = () => {\r\n  const { C, setI18N } = useAppContext();\r\n  const animated = React.useRef(new Animated.Value(1)).current;\r\n  const rotate = animated.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [\"0deg\", \"-180deg\"],\r\n  });\r\n\r\n  const starColor = animated.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [C.hazardYellow, C.text01],\r\n  });\r\n\r\n  const starSize = animated.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [moderateScale(10), moderateScale(10) * 0.9],\r\n  });\r\n  const shieldSize = animated.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [1, 1 * 0.8],\r\n  });\r\n\r\n  const flagColor = animated.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [C.errorRed, C.infoBlue],\r\n  });\r\n\r\n  const rotateOpposit = animated.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [\"0deg\", \"180deg\"],\r\n  });\r\n\r\n  function rotatee() {\r\n    animated._value == 1 &&\r\n      (Toasty.show(\"Chuyển sang tiếng Việt...\", {\r\n        type: \"loading\",\r\n        duration: 1000,\r\n      }),\r\n      Animated.spring(animated, {\r\n        toValue: 0,\r\n        tension: 2,\r\n        friction: 10,\r\n        useNativeDriver: true,\r\n      }).start(() => {\r\n        setI18N(LANG.VI);\r\n      }));\r\n\r\n    animated._value == 0 &&\r\n      (Toasty.show(\"Change to English...\", { type: \"loading\", duration: 1000 }),\r\n      Animated.spring(animated, {\r\n        toValue: 1,\r\n        tension: 2,\r\n        friction: 10,\r\n        useNativeDriver: true,\r\n      }).start(() => {\r\n        setI18N(LANG.EN);\r\n      }));\r\n  }\r\n\r\n  const transform = [{ rotate: rotate }];\r\n  const transform1 = [{ rotate: rotateOpposit, scale: starSize }];\r\n  return (\r\n    <Animated.View\r\n      style={[SS.S.CTNR_FLAG, { transform: [{ rotate: \"-90deg\" }] }]}\r\n    >\r\n      <Animated.View\r\n        style={[\r\n          {\r\n            transform: [{ rotate: \"90deg\" }],\r\n            backgroundColor: C.errorRed,\r\n            ...SS.S.FLAG_BCKGRD,\r\n          },\r\n        ]}\r\n      >\r\n        <Animated.View\r\n          style={[\r\n            {\r\n              transform: [{ scale: shieldSize }],\r\n              backgroundColor: flagColor,\r\n              ...SS.S.FLAG_BCKGRD,\r\n            },\r\n          ]}\r\n        >\r\n          <NiStar\r\n            name=\"star\"\r\n            color={starColor}\r\n            size={moderateScale(10)}\r\n            onPress={() => rotatee()}\r\n            solid\r\n          />\r\n        </Animated.View>\r\n      </Animated.View>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nconst SS = {\r\n  Ctnr: sstyled(View)(() => ({\r\n    width: moderateScale(100),\r\n    height: moderateScale(100),\r\n    paddingHorizontal: spacing(6),\r\n  })),\r\n  CtnrIntro: sstyled(Animatable.View)((p) => ({\r\n    paddingHorizontal: spacing(6),\r\n    paddingRight: p.WIDTH < 1000 ? spacing(6) : spacing(9),\r\n  })),\r\n  Avatar: sstyled(Animatable.Image)(() => ({\r\n    width: moderateScale(100),\r\n    height: moderateScale(100),\r\n    borderRadius: 200,\r\n    transform: [{ rotate: \"-10deg\" }],\r\n  })),\r\n  TxtLink: sstyled(Txt.S1)({\r\n    // fontSize: 29,\r\n    fontWeight: \"500\",\r\n    fontStyle: \"italic\",\r\n  }),\r\n\r\n  S: {\r\n    CTNR_FLAG: {\r\n      // borderWidth: 1,\r\n      marginLeft: spacing(6),\r\n      position: \"absolute\",\r\n      padding: moderateScale(5),\r\n      top: moderateScale(0),\r\n      left: moderateScale(0),\r\n      width: moderateScale(100),\r\n      height: moderateScale(100), // this is the diameter of circle\r\n    } as ViewStyle,\r\n    FLAG_BCKGRD: {\r\n      width: moderateScale(20),\r\n      height: moderateScale(20),\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      borderRadius: 100,\r\n    } as ViewStyle,\r\n    CTNR_SHADES: {\r\n      top: moderateScale(22.5),\r\n      left: moderateScale(65.3), //118\r\n      width: moderateScale(40),\r\n      height: moderateScale(40),\r\n      transform: [{ rotate: \"-10deg\" }],\r\n    } as ImageStyle,\r\n  },\r\n};\r\n","import {\r\n  ButtonGroup,\r\n  IndexPath,\r\n  Menu,\r\n  MenuItem,\r\n  Text,\r\n} from \"@ui-kitten/components\";\r\nimport {\r\n  Txt,\r\n  TouchableWeb,\r\n  TouchableWebProps,\r\n  Buttoon,\r\n  sstyled,\r\n} from \"components\";\r\nimport { useSheets } from \"engines/hooks\";\r\nimport { useAppContext } from \"engines/providers/app-provider\";\r\nimport * as R from \"ramda\";\r\nimport React from \"react\";\r\nimport {\r\n  ActivityIndicator,\r\n  ImageBackground,\r\n  TextStyle,\r\n  View,\r\n  ViewStyle,\r\n} from \"react-native\";\r\nimport { FlatGrid } from \"react-native-super-grid\";\r\nimport {\r\n  Fade,\r\n  Placeholder,\r\n  PlaceholderLine,\r\n  PlaceholderMedia,\r\n  ShineOverlay,\r\n} from \"rn-placeholder\";\r\nimport { Navigation } from \"screens/_navigation\";\r\nimport { dColors, IPSCR, scale, spacing, use18, useDimension } from \"utils\";\r\nimport * as Animatable from \"react-native-animatable\";\r\nimport { useLinkTo } from \"@react-navigation/native\";\r\n\r\nexport function S_PortfolioGrid(props: IPSCR) {\r\n  const { C } = useAppContext();\r\n  const { data } = useSheets(0, \"Work\");\r\n  // console.log(\"data: \", data);\r\n  const { WIDTH } = useDimension(\"window\");\r\n  const ogData = React.useMemo(() => data, [data]);\r\n  const [_data, setData] = React.useState([]);\r\n\r\n  const refGrid = React.useRef<Animatable.View>();\r\n  const [selectedIndex, setSelectedIndex] = React.useState(new IndexPath(0));\r\n  const linkTo = useLinkTo();\r\n  return (\r\n    <View style={{}}>\r\n      <Txt.$Title>{use18(\"Work\")}</Txt.$Title>\r\n      <SS.CtnrFilter\r\n        horizontal={true}\r\n        selectedIndex={selectedIndex}\r\n        onSelect={(index) => setSelectedIndex(index)}\r\n      >\r\n        <MenuItem\r\n          onPress={() => {\r\n            setData(ogData);\r\n            setSelectedIndex(new IndexPath(0));\r\n          }}\r\n          title={use18(\"All\")}\r\n        />\r\n        {[...new Set(R.pluck(\"cat\", ogData))].map((cat, index) => (\r\n          <MenuItem\r\n            key={cat + index}\r\n            onPress={() => {\r\n              setData([...ogData.filter((item) => item.cat === cat)]);\r\n              setSelectedIndex(new IndexPath(index + 1));\r\n              refGrid.current.fadeInUp(800);\r\n            }}\r\n            title={cat}\r\n          />\r\n        ))}\r\n      </SS.CtnrFilter>\r\n      {!!_data ? (\r\n        <Animatable.View ref={refGrid} animation=\"fadeInUp\">\r\n          <FlatGrid\r\n            itemDimension={WIDTH <= 1000 ? WIDTH * 0.9 : WIDTH * 0.3}\r\n            data={R.isEmpty(_data) ? data : _data}\r\n            style={SSS().GRID_CTNR}\r\n            // staticDimension={300}\r\n            // fixed\r\n            spacing={10}\r\n            renderItem={({ item, index }) => (\r\n              <Animatable.View animation=\"fadeIn\" delay={100 * index}>\r\n                <CtnrGrid\r\n                  {...props}\r\n                  onPress={() => {\r\n                    linkTo(\"/project/\" + item.title);\r\n                    Navigation.navigate(\"Project\", {\r\n                      project: item,\r\n                    });\r\n                  }}\r\n                  item={item}\r\n                />\r\n              </Animatable.View>\r\n            )}\r\n          />\r\n        </Animatable.View>\r\n      ) : (\r\n        <View style={{ ...SSS().GRID_CTNR }}>\r\n          <CtnrGrid {...props} type=\"placeholder\" />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\ninterface dGridCtnr extends TouchableWebProps, IPSCR {\r\n  item?: { thumbnail: string; title: string; color: string; label: string };\r\n  type?: \"placeholder\";\r\n}\r\nconst CtnrGrid = (props: dGridCtnr) => {\r\n  const { type, onPress, item } = props;\r\n  const { C } = useAppContext();\r\n  const [_borderWidth, setBorderWidth] = React.useState(0);\r\n  const { WIDTH: width } = useDimension(\"window\");\r\n  const linkTo = useLinkTo();\r\n  return type != \"placeholder\" ? (\r\n    <TouchableWeb\r\n      onMouseEnter={(e) => {\r\n        setBorderWidth(6);\r\n      }}\r\n      onMouseLeave={(e) => {\r\n        setBorderWidth(0);\r\n      }}\r\n      onPress={onPress}\r\n    >\r\n      <ImageBackground\r\n        source={{ uri: item?.thumbnail }}\r\n        style={[\r\n          SSS().ITEM_CTNR,\r\n          {\r\n            backgroundColor: item?.color,\r\n            overflow: \"hidden\",\r\n            borderWidth: _borderWidth,\r\n            borderColor: item?.color,\r\n          },\r\n        ]}\r\n      >\r\n        <Txt.S1 style={SSS().itemName}>{item?.title}</Txt.S1>\r\n        <Txt.P2 style={SSS().itemCode}>{item?.label}</Txt.P2>\r\n      </ImageBackground>\r\n    </TouchableWeb>\r\n  ) : (\r\n    <Placeholder Animation={ShineOverlay}>\r\n      <PlaceholderMedia\r\n        style={[\r\n          SSS().ITEM_CTNR,\r\n          { width: width <= 1000 ? width * 0.9 : width * 0.3 },\r\n        ]}\r\n      ></PlaceholderMedia>\r\n    </Placeholder>\r\n  );\r\n};\r\n\r\nconst SS = {\r\n  CtnrFilter: sstyled(Menu)((p) => ({\r\n    flexDirection: \"row\",\r\n    marginVertical: spacing(5),\r\n    borderRadius: 5,\r\n    borderWidth: 0,\r\n    borderBottomWidth: 1,\r\n    alignSelf: \"center\",\r\n    overflow: \"hidden\",\r\n    borderColor: p.C.dim,\r\n  })),\r\n};\r\n\r\nconst SSS = (C?: dColors) => {\r\n  return {\r\n    GRID_CTNR: {\r\n      marginTop: 10,\r\n      marginHorizontal: spacing(5),\r\n      // flex: 1,\r\n    } as ViewStyle,\r\n    ITEM_CTNR: {\r\n      justifyContent: \"flex-end\",\r\n      borderRadius: 5,\r\n      padding: 10,\r\n      height: 300,\r\n    } as ViewStyle,\r\n    itemName: {\r\n      color: \"#fff\",\r\n      // fontSize: scale(18),\r\n      // fontWeight: \"600\",\r\n    } as TextStyle,\r\n    itemCode: {\r\n      // fontWeight: \"600\",\r\n      // fontSize: scale(12),\r\n      color: \"#fff\",\r\n    } as TextStyle,\r\n  };\r\n};\r\n","import { useAppContext } from \"engines\";\r\nimport * as React from \"react\";\r\nimport { LayoutChangeEvent, ScrollView, View } from \"react-native\";\r\nimport { IPSCR, useDimension } from \"utils\";\r\nimport { S_Contact } from \"./s-contact\";\r\nimport { S_ExperimentalGrid } from \"./s-experimental-grid\";\r\nimport { S_Intro } from \"./s-intro\";\r\nimport { S_PortfolioGrid } from \"./s-portfolio-grid\";\r\n\r\nexport default (props: IPSCR) => {\r\n  const { C } = useAppContext();\r\n  const { HEIGHT } = useDimension();\r\n\r\n  const refList = React.useRef<ScrollView>(null);\r\n\r\n  const [_workLayout, setWorkLayout] = React.useState<LayoutChangeEvent>();\r\n  // console.log(\"🖐️ work layout: \", _workLayout?.nativeEvent?.layout?.height);\r\n  const [_ExpLayout, setExpLayout] = React.useState<LayoutChangeEvent>();\r\n  // console.log(\"🖐️ Exp layout: \", _ExpLayout?.nativeEvent?.layout?.height);\r\n\r\n  const scrollToSection = (section: \"work\" | \"exp\") => {\r\n    section == \"exp\"\r\n      ? refList.current.scrollTo(HEIGHT + _workLayout.nativeEvent.layout.height)\r\n      : refList.current.scrollTo(HEIGHT);\r\n  };\r\n\r\n  return (\r\n    <ScrollView ref={refList} style={{ backgroundColor: C.background }}>\r\n      <$_Intro\r\n        {...props}\r\n        scrollToWork={() => {\r\n          scrollToSection(\"work\");\r\n        }}\r\n        scrollToExp={() => {\r\n          scrollToSection(\"exp\");\r\n        }}\r\n      />\r\n      <View onLayout={setWorkLayout}>\r\n        <$_PortfolioGrid {...props} />\r\n      </View>\r\n      <View onLayout={setExpLayout}>\r\n        <$_ExperimentalGrid {...props} />\r\n      </View>\r\n      <View onLayout={setExpLayout}>\r\n        <$_Contact\r\n          {...props}\r\n          scrollToWork={() => {\r\n            scrollToSection(\"work\");\r\n          }}\r\n          scrollToExp={() => {\r\n            scrollToSection(\"exp\");\r\n          }}\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst $_PortfolioGrid = S_PortfolioGrid;\r\nconst $_ExperimentalGrid = S_ExperimentalGrid;\r\nconst $_Intro = S_Intro;\r\nconst $_Contact = S_Contact;\r\n\r\n// import React from \"react\";\r\n// import {\r\n//   Animated,\r\n//   Dimensions,\r\n//   NativeSyntheticEvent,\r\n//   PanResponder,\r\n//   StyleSheet,\r\n//   View\r\n// } from \"react-native\";\r\n\r\n// export default function Drag() {\r\n//   const dropZoneValues = React.useRef(null);\r\n//   const pan = React.useRef(new Animated.ValueXY());\r\n//   const [bgColor, setBgColor] = React.useState(\"#2c3e50\");\r\n\r\n//   const isDropZone = React.useCallback(\r\n//     (evt) => {\r\n//       const dz = dropZoneValues.current;\r\n//       return evt.pageY > dz.y && evt.pageY < dz.y + dz.height;\r\n//     },\r\n//     []\r\n//   );\r\n\r\n//   const onMove = React.useCallback(\r\n//     (event: NativeSyntheticEvent<unknown>) => {\r\n//       // console.log(\r\n//       //   \"locXY: \",\r\n//       //   event.nativeEvent.locationX + \" - \" + event.nativeEvent.locationY\r\n//       // );\r\n//       // console.log(\r\n//       //   \"pageXY: \",\r\n//       //   event.nativeEvent.pageX + \" - \" + event.nativeEvent.pageY\r\n//       // );\r\n//       if (isDropZone(event.nativeEvent)) setBgColor(\"red\");\r\n//       else setBgColor(\"#2c3e50\");\r\n//     },\r\n//     [isDropZone]\r\n//   );\r\n\r\n//   const setDropZoneValues = React.useCallback((event) => {\r\n//     dropZoneValues.current = event.nativeEvent.layout;\r\n//   }, []);\r\n\r\n//   const panResponder = React.useMemo(\r\n//     () =>\r\n//       PanResponder.create({\r\n//         onStartShouldSetPanResponder: () => true,\r\n//         onMoveShouldSetPanResponderCapture: () => true,\r\n\r\n//         onPanResponderGrant: (evt, gestureState) => {\r\n//           pan.current.setOffset({\r\n//             x: pan.current.x._value,\r\n//             y: pan.current.y._value,\r\n//           });\r\n//           pan.current.setValue({ x: 0, y: 0 });\r\n//         },\r\n\r\n//         onPanResponderMove: Animated.event(\r\n//           [\r\n//             null,\r\n//             {\r\n//               dx: pan.current.x,\r\n//               dy: pan.current.y,\r\n//             },\r\n//           ],\r\n//           {\r\n//             listener: onMove,\r\n//             useNativeDriver: true,\r\n//           }\r\n//         ),\r\n//         onPanResponderRelease: (e, gesture) => {\r\n//           if (!isDropZone(gesture)) {\r\n//             Animated.spring(pan.current, {\r\n//               toValue: {\r\n//                 x: 0 - pan.current.x._offset,\r\n//                 y: 0 - pan.current.y._offset,\r\n//               },\r\n//               useNativeDriver: true,\r\n//             }).start(() => {\r\n//               // pan.current.setValue({ x: 0, y: 0 });\r\n//               pan.current.setOffset({ x: 0, y: 0 });\r\n//             });\r\n//           } else {\r\n//             pan.current.flattenOffset();\r\n//           }\r\n//         },\r\n//       }),\r\n//     []\r\n//   );\r\n\r\n//   return (\r\n//     <View style={styles.mainContainer}>\r\n//       <View\r\n//         onLayout={setDropZoneValues}\r\n//         style={[styles.dropZone, { backgroundColor: bgColor }]}\r\n//       ></View>\r\n//       <View style={styles.draggableContainer}>\r\n//         <Animated.View\r\n//           {...panResponder.panHandlers}\r\n//           style={[pan.current.getLayout(), styles.circle]}\r\n//         ></Animated.View>\r\n//       </View>\r\n//     </View>\r\n//   );\r\n// }\r\n\r\n// let CIRCLE_RADIUS = 36;\r\n// let Window = Dimensions.get(\"window\");\r\n// let styles = StyleSheet.create({\r\n//   mainContainer: {\r\n//     flex: 1,\r\n//   },\r\n//   dropZone: {\r\n//     height: 100,\r\n//     backgroundColor: \"#2c3e50\",\r\n//   },\r\n//   text: {\r\n//     marginTop: 25,\r\n//     marginLeft: 5,\r\n//     marginRight: 5,\r\n//     textAlign: \"center\",\r\n//     color: \"#fff\",\r\n//   },\r\n//   draggableContainer: {\r\n//     position: \"absolute\",\r\n//     top: Window.height / 2 - CIRCLE_RADIUS,\r\n//     left: Window.width / 2 - CIRCLE_RADIUS,\r\n//   },\r\n//   circle: {\r\n//     backgroundColor: \"#1abc9c\",\r\n//     width: CIRCLE_RADIUS * 2,\r\n//     height: CIRCLE_RADIUS * 2,\r\n//     borderRadius: CIRCLE_RADIUS,\r\n//   },\r\n// });\r\n","//@ts-check\r\n// import khoi_1 from \"./khoi-1.jpg\";\r\n// @ts-ignore\r\nexport const img = {\r\n  x: require(\"./x-icon.png\"),\r\n  khoi: require(\"./khoi.jpg\"),\r\n  khoiShades: require(\"./khoi-shades.jpg\"),\r\n  shades: require(\"./shades.png\"),\r\n  wavingHand: require(\"./waving_hand_sign_512.gif\"),\r\n  sparkles: require(\"./sparkles_512.gif\"),\r\n  nguyenkhoi: require(\"./nguyenkhoi.gif\"),\r\n};\r\n","/** \r\n * \r\n */\r\n\r\nexport { default as IconOooh } from \"./oooh-icon\";\r\nexport * from \"./oooh-icon.props\";\r\n\r\n","// import Octicons from \"react-native-vector-icons/Octicons\"\r\nimport * as R from \"ramda\";\r\nimport React from \"react\";\r\nimport { Platform, View, ViewStyle } from \"react-native\";\r\nimport AntDesign from \"react-native-vector-icons/AntDesign\";\r\nimport EntypoIcon from \"react-native-vector-icons/Entypo\";\r\nimport FeatherIcon from \"react-native-vector-icons/Feather\";\r\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\r\n//* rn-vector-icons imports\r\nimport FontAwesome5 from \"react-native-vector-icons/FontAwesome5\";\r\nimport Fontisto from \"react-native-vector-icons/Fontisto\";\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\nimport MaterialCommunityIcon from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport MaterialIcon from \"react-native-vector-icons/MaterialIcons\";\r\nimport SimpleLineIcon from \"react-native-vector-icons/SimpleLineIcons\";\r\nimport { scale } from \"utils\";\r\nimport { dIconOooh, dIconOptions, ICON_PKG } from \"./oooh-icon.props\";\r\n\r\n// const OoohMoon = createIconSetFromIcoMoon(\r\n//   icoMoonConfig,\r\n//   \"IconOooh\",\r\n//   \"iconcarp.ttf\"\r\n// );\r\n\r\n/**\r\n * Icon Options to use with IconOooh<>\r\n */\r\nexport const iconOptions = {\r\n  admin: { type: \"fa5\", icon: \"user-tie\" } as dIconOptions,\r\n  arrow_left: {\r\n    type: \"fa5\",\r\n    icon: Platform.OS == \"android\" ? \"arrow-left\" : \"chevron-left\",\r\n  } as dIconOptions,\r\n  arrow_right: {\r\n    type: \"fa5\",\r\n    icon: Platform.OS == \"android\" ? \"arrow-right\" : \"chevron-right\",\r\n  } as dIconOptions,\r\n  arrow_down: {\r\n    type: \"fa5\",\r\n    icon: Platform.OS == \"android\" ? \"arrow-down\" : \"chevron-down\",\r\n  } as dIconOptions,\r\n  award: { type: \"fa5\", icon: \"award\" } as dIconOptions,\r\n  bars: { type: \"fa5\", icon: \"bars\" } as dIconOptions,\r\n  ban: { type: \"fa5\", icon: \"ban\" } as dIconOptions,\r\n  bell: { type: \"fa5\", icon: \"bell\" } as dIconOptions,\r\n  flag: { type: \"fa5\", icon: \"flag\" } as dIconOptions,\r\n  calendar: { type: \"fa5\", icon: \"calendar\" } as dIconOptions,\r\n  \"calendar-alt\": { type: \"fa5\", icon: \"calendar-alt\" } as dIconOptions,\r\n  chat_bubble: {\r\n    type: \"ion\",\r\n    icon: \"chatbubble\",\r\n  } as dIconOptions,\r\n  chevron_right: {\r\n    type: \"fa5\",\r\n    icon: \"chevron-right\",\r\n  } as dIconOptions,\r\n  check: {\r\n    type: \"fa5\",\r\n    icon: \"check\",\r\n  } as dIconOptions,\r\n  compass: { type: \"fa5\", icon: \"compass\" } as dIconOptions,\r\n  content_share: { type: \"ion\", icon: \"share-social-sharp\" } as dIconOptions,\r\n  cog: { type: \"fa5\", icon: \"cog\" } as dIconOptions,\r\n  contacts: { type: \"fa5\", icon: \"address-book\" } as dIconOptions,\r\n  dot: { type: \"fa5\", icon: \"circle\" } as dIconOptions,\r\n  dots_horizontal: { type: \"fa5\", icon: \"ellipsis-h\" } as dIconOptions,\r\n  dots_vertical: { type: \"fa5\", icon: \"ellipsis-v\" } as dIconOptions,\r\n  email: { type: \"material\", icon: \"mail\" } as dIconOptions,\r\n  eye: { type: \"fa5\", icon: \"eye\" } as dIconOptions,\r\n  eye_slash: { type: \"fa5\", icon: \"eye-slash\" } as dIconOptions,\r\n  exclamation_circle: {\r\n    type: \"fa5\",\r\n    icon: \"exclamation-circle\",\r\n  } as dIconOptions,\r\n  folder: { type: \"fa5\", icon: \"folder\" } as dIconOptions,\r\n  hand_peace: { type: \"fa5\", icon: \"hand-peace\" } as dIconOptions,\r\n  heart: { type: \"fa5\", icon: \"heart\" } as dIconOptions,\r\n  home: { type: \"fa5\", icon: \"home\" } as dIconOptions,\r\n  image: { type: \"fa5\", icon: \"image\" } as dIconOptions,\r\n  install: { type: \"entypo\", icon: \"install\" } as dIconOptions,\r\n  linkedin: { type: \"fa5\", icon: \"linkedin-in\" } as dIconOptions,\r\n  list: { type: \"fa5\", icon: \"th-list\" } as dIconOptions,\r\n  lock: { type: \"fa5\", icon: \"lock\" } as dIconOptions,\r\n  medal: { type: \"fa5\", icon: \"medal\" } as dIconOptions,\r\n  minus: { type: \"fa5\", icon: \"minus\" } as dIconOptions,\r\n  notification: { type: \"entypo\", icon: \"notification\" } as dIconOptions,\r\n  pen: { type: \"fa5\", icon: \"pen\" } as dIconOptions,\r\n  plus: { type: \"fa5\", icon: \"plus\" } as dIconOptions,\r\n  placeholder: { type: \"fa5\", icon: \"kickstarter-k\" } as dIconOptions,\r\n  profile: { type: \"ion\", icon: \"ios-person-circle-sharp\" } as dIconOptions,\r\n  rocket: { type: \"fa5\", icon: \"rocket\" } as dIconOptions,\r\n  refresh: { type: \"ion\", icon: \"refresh\" } as dIconOptions,\r\n  share: { type: \"fa5\", icon: \"share-alt\" } as dIconOptions,\r\n  sms: { type: \"fa5\", icon: \"sms\" } as dIconOptions,\r\n  tools: { type: \"fa5\", icon: \"tools\" } as dIconOptions,\r\n  send: { type: \"fa\", icon: \"send\" } as dIconOptions,\r\n  star: { type: \"fa5\", icon: \"star\" } as dIconOptions,\r\n  trash: { type: \"fa5\", icon: \"trash\" } as dIconOptions,\r\n  tv: { type: \"fa5\", icon: \"tv\" } as dIconOptions,\r\n  videocam: { type: \"ion\", icon: \"videocam\" } as dIconOptions,\r\n  people: { type: \"ion\", icon: \"people\" } as dIconOptions,\r\n  unlock: { type: \"fa5\", icon: \"unlock\" } as dIconOptions,\r\n  x: { type: \"fa5\", icon: \"times\" } as dIconOptions,\r\n  /**\r\n   * Card Brand Icon. Have to fit Stripe's brand name\r\n   * @see https://stripe.com/docs/api/cards/object#card_object-brand\r\n   */\r\n  \"american express\": {\r\n    type: \"fontisto\",\r\n    icon: \"american-express\",\r\n    scale: 0.8,\r\n  } as dIconOptions,\r\n  \"diners club\": { type: \"fa5\", icon: \"cc-diners-club\" } as dIconOptions,\r\n  discover: { type: \"fa5\", icon: \"cc-discover\" } as dIconOptions,\r\n  jcb: { type: \"fa5\", icon: \"cc-jcb\" } as dIconOptions,\r\n  mastercard: { type: \"fa5\", icon: \"cc-mastercard\" } as dIconOptions,\r\n  visa: { type: \"fa5\", icon: \"cc-visa\" } as dIconOptions,\r\n};\r\n\r\n/**\r\n * Main and the only Icon component of the whole codebase\r\n *\r\n * @version 1.12.3\r\n * -  *Add disabled icon's color*\r\n * @example\r\n *  <IconOooh preset={\"safe\"} name={\"arrow_left\"} size={30} color={\"dodgerblue\"} />\r\n */\r\nexport default function IconOooh(props: dIconOooh) {\r\n  const {\r\n    preset = \"default\",\r\n    name = \"placeholder\",\r\n    size = 20,\r\n    color = \"dodgerblue\",\r\n    solid = true,\r\n    disabled,\r\n    containerStyle = {},\r\n    onPress,\r\n  } = props;\r\n  const _containerStyle: ViewStyle = R.mergeAll(\r\n    R.flatten([presets(size)[preset].containerStyle, containerStyle])\r\n  );\r\n  const _iconStyle = R.mergeAll(\r\n    R.flatten([\r\n      presets(size)[preset].icon || presets(size).default.icon,\r\n      {\r\n        size,\r\n        color: disabled ? \"#69696940\" : color,\r\n        name,\r\n      },\r\n    ])\r\n  );\r\n  if (iconOptions[name] == undefined) {\r\n    console.log(\"Icon err: icon \" + name + \" not existed in iconOptions!\");\r\n    return (\r\n      <View\r\n        style={{ ..._containerStyle, borderWidth: 1, borderColor: \"tomato\" }}\r\n      />\r\n    );\r\n  } else {\r\n    const { type, scale = 1, icon } = iconOptions[name];\r\n    const { size, color } = _iconStyle;\r\n    const BrandedIcon = getType(type);\r\n    return (\r\n      <View\r\n        activeOpacity={!!onPress ? 0.87 : 1}\r\n        disabled={true}\r\n        style={_containerStyle}\r\n        onPress={onPress}\r\n      >\r\n        <BrandedIcon\r\n          name={icon}\r\n          solid={solid}\r\n          size={size * scale}\r\n          color={color}\r\n          onPress={onPress}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\n/** Get Icon type from `react-native-vector-icons */\r\nconst getType = (type: ICON_PKG) => {\r\n  switch (type) {\r\n    case \"fa\":\r\n      return FontAwesome;\r\n    case \"fa5\":\r\n      return FontAwesome5;\r\n    case \"feather\":\r\n      return FeatherIcon;\r\n    case \"material\":\r\n      return MaterialIcon;\r\n    case \"material-community\":\r\n      return MaterialCommunityIcon;\r\n    case \"fontisto\":\r\n      return Fontisto;\r\n    case \"entypo\":\r\n      return EntypoIcon;\r\n    case \"simple-line-icon\":\r\n      return SimpleLineIcon;\r\n    case \"antdesign\":\r\n      return AntDesign;\r\n    case \"ion\":\r\n      return Ionicons;\r\n    default:\r\n      return MaterialIcon;\r\n  }\r\n};\r\n\r\nexport const presets = (size: number) => ({\r\n  default: {\r\n    containerStyle: null,\r\n    icon: { name: null, size: scale(11), color: \"black\" },\r\n  },\r\n  safe: {\r\n    containerStyle: { margin: scale(5) },\r\n    icon: { name: null, size: scale(11), color: \"black\" },\r\n  },\r\n  header: {\r\n    containerStyle: null,\r\n    icon: { name: null, size: scale(24), color: \"black\" },\r\n  },\r\n  circular: {\r\n    containerStyle: {\r\n      borderRadius: size * 2,\r\n      width: size * 1.8,\r\n      height: size * 1.8,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    icon: null,\r\n  },\r\n});\r\n","import React from \"react\";\r\n//@ts-check\r\nimport { Dimensions, Platform, StatusBar } from \"react-native\";\r\nimport { moderateScale, scale, verticalScale } from \"react-native-size-matters\";\r\n\r\n// export * from \"react-native-size-matters\"\r\n\r\nexport { moderateScale as scale, moderateScale, verticalScale };\r\n\r\n/**\r\n * Check if device is iphoneX\r\n */\r\nexport function isIphoneX() {\r\n  const dimen = Dimensions.get(\"window\");\r\n  return (\r\n    Platform.OS === \"ios\" &&\r\n    !Platform.isPad &&\r\n    !Platform.isTVOS &&\r\n    (dimen.height === 812 ||\r\n      dimen.width === 812 ||\r\n      dimen.height === 896 ||\r\n      dimen.width === 896)\r\n  );\r\n}\r\n\r\nexport function ifIphoneX(iphoneXStyle, regularStyle) {\r\n  if (isIphoneX()) {\r\n    return iphoneXStyle;\r\n  }\r\n  return regularStyle;\r\n}\r\n\r\nexport function getStatusBarHeight(safe?: string) {\r\n  return Platform.select({\r\n    ios: ifIphoneX(safe ? 44 : 30, 20),\r\n    android: StatusBar.currentHeight,\r\n    default: 0,\r\n  });\r\n}\r\n\r\n/**\r\n * @description Get bottom space \"safe area\" of the device. Especially useful for iphone X screen\r\n * @param safe - Safe padding around bottom space\r\n */\r\nexport function getBottomSpace(safe?: string) {\r\n  if (safe) {\r\n    return isIphoneX() ? 34 + scale(10) : scale(10);\r\n  } else {\r\n    return isIphoneX() ? 34 : 0;\r\n  }\r\n}\r\n\r\nexport const DEVICE_WIDTH = Dimensions.get(\"window\").width;\r\nexport const DEVICE_HEIGHT = Dimensions.get(\"window\").height;\r\n\r\nexport const IS_ANDROID = Platform.OS === \"android\";\r\nexport const IS_WEB = Platform.OS === \"web\";\r\n\r\nexport const LOCAL_STORAGE_KEY = \"mid5LocalStorage\";\r\n","import { useWindowDimensions } from \"react-native\";\r\n\r\n/**\r\n * A hook that gets dynamic dimensions,\r\n * and use such value to extend `react-native-size-matters`\r\n * ---\r\n * @example\r\n * ```\r\n * const { WIDTH, HEIGHT, s, vs, ms, mvs } = useDimension(\"window\")\r\n *\r\n * ```\r\n * ---\r\n * @version 0.12.15\r\n * -  *Use useWindowDimensions(_)*\r\n * @author nguyenkhooi\r\n */\r\nexport function useDimension(type: \"screen\" | \"window\" = \"window\"): dDime {\r\n  const WIDTH = useWindowDimensions().width;\r\n  const HEIGHT = useWindowDimensions().height;\r\n\r\n  // const [dimensions, setDimensions] = React.useState({ window, screen });\r\n  // const onChange = ({ window, screen }) => {\r\n  //   setDimensions({ window, screen });\r\n  // };\r\n  // React.useEffect(() => {\r\n  //   Dimensions.addEventListener(\"change\", onChange);\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener(\"change\", onChange);\r\n  //   };\r\n  // }, []);\r\n\r\n  // const WIDTH = dimensions[type].width || Dimensions.get(\"window\").width;\r\n  // const HEIGHT = dimensions[type].height || Dimensions.get(\"window\").height;\r\n\r\n  /**\r\n   * Extensions of `react-native-size-matters`,\r\n   * using dynamic WIDTH and HEIGHT\r\n   * ---\r\n   *\r\n   * @see react-native-size-matters\r\n   */\r\n  //Default guideline sizes are based on standard ~5\" screen mobile device\r\n  const guidelineBaseWidth = 350;\r\n  const guidelineBaseHeight = 680;\r\n  const [shortDimension, longDimension] =\r\n    WIDTH < HEIGHT ? [WIDTH, HEIGHT] : [HEIGHT, WIDTH];\r\n\r\n  let s = (size: number) => (shortDimension / guidelineBaseWidth) * size;\r\n  let vs = (size: number) => (longDimension / guidelineBaseHeight) * size;\r\n  let ms = (size: number, factor = 0.5) => size + (s(size) - size) * factor;\r\n  let mvs = (size: number, factor = 0.5) => size + (vs(size) - size) * factor;\r\n  return { WIDTH, HEIGHT, s, vs, ms, mvs };\r\n}\r\n\r\nexport interface dDime {\r\n  WIDTH: number;\r\n  HEIGHT: number;\r\n  s(size: number): number;\r\n  vs(size: number): number;\r\n  ms(size: number): number;\r\n  mvs(size: number): number;\r\n}\r\n","/** @this SAUCE-structure-typings */\r\nexport * from \"./screens-typings\"\r\nexport * from \"./assets-typings\"\r\nexport * from \"./utils-typings\"\r\nexport * from \"./components-typings\"\r\n\r\n/** @this functional-typings */\r\nexport * from \"./photos-typings\"\r\nexport * from \"./frbs-typings\"\r\nexport * from \"./auth-typings\"\r\n\r\nexport * from \"./response-typings/vehicle.response\"\r\nexport * from \"./response-typings/mapboxSearch.response\"\r\n","/* eslint-disable @typescript-eslint/interface-name-prefix */\r\nimport { TextStyle } from \"react-native\";\r\nimport { colors } from \"utils\";\r\n\r\n/** TODO 📕 this */\r\n/**\r\n * @see https://stackoverflow.com/a/49286056\r\n */\r\nexport type ValueOf<T> = T[keyof T];\r\nexport type KeyOf<T> = keyof T;\r\nexport type dColors = typeof colors;\r\nexport type ENUM_Palette = ValueOf<dColors>;\r\n\r\nexport type dTypo = {\r\n  largeTitle: TextStyle;\r\n  headline: TextStyle;\r\n  title: TextStyle;\r\n  titleEmphasized: TextStyle;\r\n  subtitle: TextStyle;\r\n  subtitleEmphasized: TextStyle;\r\n  body: TextStyle;\r\n  bodyEmphasized: TextStyle;\r\n  caption: TextStyle;\r\n  captionEmphasized: TextStyle;\r\n};\r\n\r\n/**\r\n * fr theme\r\n */\r\nexport interface dTheme {\r\n  C: dColors;\r\n  dark?: boolean;\r\n}\r\n\r\n/**\r\n * List of theme index\r\n */\r\nexport type ENUM_Theme = \"themeLight\" | \"themeDark\"; //* Add more theme index here if wanted\r\n\r\n/**\r\n * List of theme index\r\n *\r\n */\r\nexport enum THEME {\r\n  NULL = \"null\",\r\n  LIGHT = \"themeLight\",\r\n  DARK = \"themeDark\",\r\n}\r\nexport interface PROPS_ThemeProvider {\r\n  theme: ENUM_Theme;\r\n  setTheme?(theme: ENUM_Theme): void;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport type ENUM_FontFamily =\r\n  | \"Montserrat-Bold\"\r\n  | \"Roboto_medium\"\r\n  | \"Roboto\"\r\n  | \"System\";\r\n","import { scale } from \"utils\"\r\n\r\n/** `imageInfo` (e.g. imageInfo00, imageInfo01) contains props of such image */\r\nexport interface IPimageInfo {\r\n  /** Local path of an image */\r\n  path: string | null\r\n  /** Image size */\r\n  size: { height: number | null; width: number | null }\r\n  /** Uri of an image, usually FRBS link */\r\n  uri?: string | null\r\n  /** Storage bucket of an image, usually FRBS's Storage subfolders */\r\n  bucket?: \"users\" | \"food\" | null\r\n}\r\n\r\nexport const __imageInfo: IPimageInfo = {\r\n  path: `https://randomuser.me/api/portraits/women/95.jpg`,\r\n  size: { height: scale(134), width: scale(134) },\r\n  uri: \"https://randomuser.me/api/portraits/women/95.jpg\",\r\n  bucket: null,\r\n}\r\n\r\n/** `photoZZ` (e.g. photo00, photo01) is the uri/path of image */\r\nexport type photoZZ = string\r\n\r\nexport type mediaType = \"photo\" | \"video\"\r\n//* REVIEW PROMISE\r\n\r\nexport interface IRuploadMedia {\r\n  /**\r\n   * Promise message\r\n   */\r\n  message: string\r\n  /**\r\n   * Upload status\r\n   */\r\n  status: null | {\r\n    state: \"cancelled\" | \"error\" | \"paused\" | \"running\" | \"success\"\r\n    progress: number\r\n  }\r\n  /**\r\n   * Uri link\r\n   */\r\n  uri: string\r\n}\r\n","import * as R from \"ramda\";\r\n\r\n/**\r\n * Generate unique IDs for use as pseudo-private/protected names.\r\n * @see https://gist.github.com/gordonbrander/2230317\r\n * @version 0.7.1\r\n */\r\nexport function ID() {\r\n  // Math.random should be unique because of its seeding algorithm.\r\n  // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n  // after the decimal.\r\n  return \"_\" + Math.random().toString(36).substr(2, 9);\r\n}\r\n\r\n/**\r\n * Assuming Date \"zero\" (aka ISOString == \"1970-01-01T00\") is default `null-date`.\r\n *\r\n * This function checks if given date is `\"null-date\"` or not\r\n * @version 0.7.1\r\n */\r\nexport function isDateZero(date: Date) {\r\n  return date.toISOString().includes(`1970-01-01T00`);\r\n}\r\n\r\n/**\r\n * Format Time from Date() to human readable format\r\n * @version 0.7.1\r\n */\r\nexport function formatTime(date: Date, showSeconds: boolean) {\r\n  const formattedTime = showSeconds\r\n    ? [date.getHours(), date.getMinutes(), date.getSeconds()]\r\n        .map((num) => `0${num}`.slice(-2))\r\n        .join(\":\")\r\n    : [date.getHours(), date.getMinutes()]\r\n        .map((num) => `0${num}`.slice(-2))\r\n        .join(\":\");\r\n\r\n  return formattedTime;\r\n}\r\n\r\n/**\r\n * Capitalize string\r\n * @version 0.7.1\r\n * NOTE: need tested\r\n */\r\nexport const capitalize = (string: string) =>\r\n  !!string && R.compose(R.join(\"\"), R.over(R.lensIndex(0), R.toUpper))(string);\r\n","import * as R from \"ramda\";\r\n\r\n/**\r\n * Filter collection based on values in array\r\n *\r\n * @example\r\n *  const array = [1, 2, 4];\r\n    const collection = [\r\n      { _id: 1, eyes: 'blue' },\r\n      { _id: 2, eyes: 'brown' },\r\n      { _id: 3, eyes: 'green' },\r\n      { _id: 4, eyes: 'blue' },\r\n    ];\r\n    const result = filterByValues('_id', array, collection);\r\n    //* result: \r\n    [  { _id: 1, eyes: 'blue' },\r\n      { _id: 2, eyes: 'brown' },\r\n      { _id: 4, eyes: 'blue' },]\r\n    \r\n      * @param filterKey - Filter Key (e.g. _id)\r\n      * @param filteredList - List of filtered value\r\n      * @param collection - Collection of raw data\r\n      *\r\n * @see https://stackoverflow.com/questions/50161078/filter-collection-based-on-values-in-array-in-ramda\r\n * @version 0.7.1\r\n */\r\nexport function filterByValues(\r\n  filterKey: string,\r\n  filteredList: string[] | boolean[],\r\n  collection: {}[]\r\n) {\r\n  const joinByType = R.innerJoin((o, type) => o[filterKey] === type);\r\n  return joinByType(collection, filteredList);\r\n}\r\n\r\n/**\r\n * Filter collection based on values in array\r\n *\r\n * @example\r\n    const collection = [\r\n      { _id: 1, eyes: 'blue' },\r\n      { _id: 2, eyes: 'brown' },\r\n      { _id: 3, eyes: 'green' },\r\n      { _id: 4, eyes: 'blue' },\r\n    ];\r\n    const result = vLookup(collection, '_id');\r\n    //* result: [1,2,3,4]\r\n    \r\n * @param collection - Collection of raw data\r\n * @param key - Filter Key (e.g. _id)\r\n *\r\n * @see https://ramdajs.com/docs/#pluck\r\n * @version 0.7.1\r\n */\r\nexport function vLookup(collection: any[], key: string) {\r\n  var getValue = R.pluck(key);\r\n  return getValue(collection);\r\n}\r\n\r\n/**\r\n * Filter collection based on key's value (e.g. _id)\r\n *\r\n * @example\r\n    const collection = [\r\n      { _id: 1, eyes: 'blue' },\r\n      { _id: 2, eyes: 'brown' },\r\n      { _id: 3, eyes: 'green' },\r\n      { _id: 4, eyes: 'blue' },\r\n    ];\r\n    const result = hLookup('_id', 4, collection);\r\n    //* result: [{ _id: 4, eyes: 'blue' }]\r\n *\r\n * @see https://ramdajs.com/docs/#propEq\r\n * @version 0.7.1\r\n */\r\nexport function hLookup(\r\n  lookupKey: string,\r\n  lookupKeyValue: string,\r\n  collection: any[]\r\n) {\r\n  return R.filter(R.propEq(lookupKey, lookupKeyValue), collection);\r\n}\r\n\r\n/**\r\n * Filter collection based on key's value (e.g. _id)\r\n *\r\n * @example\r\n    const collection = [\r\n      { _id: 1, eyes: 'blue' },\r\n      { _id: 2, eyes: 'brown' },\r\n      { _id: 3, eyes: 'green' },\r\n      { _id: 4, eyes: 'blue' },\r\n    ];\r\n    const result = xLookup('_id', 4, 'eyes', collection);\r\n    //* result: ['blue']\r\n *\r\n * @see https://ramdajs.com/docs/#propEq\r\n * @version 0.7.1\r\n */\r\nexport function xLookup(\r\n  lookupKey: string,\r\n  lookupKeyValue: string,\r\n  returnKey: string,\r\n  collection: any[]\r\n) {\r\n  const ARR = hLookup(lookupKey, lookupKeyValue, collection);\r\n  let RES = [];\r\n  ARR.forEach((item) => {\r\n    RES.push(item[returnKey]);\r\n  });\r\n  return RES;\r\n}\r\n","import * as R from \"ramda\";\r\n\r\n/**\r\n * Merging array and remove duplication\r\n * \r\n * @example\r\n * const collection = [\r\n        [{ _id: 1, eyes: \"blue\" }],\r\n        [{ _id: 2, eyes: \"brown\" }, { _id: 1, eyes: \"blue\" }],\r\n        [{ _id: 3, eyes: \"green\" }],\r\n        [{ _id: 4, eyes: \"blue\" }],\r\n    ];\r\n    const result = arrayMergeNoDup(\"_id\", collection);\r\n    //* result: \r\n    [ { _id: 1, eyes: 'blue' },\r\n      { _id: 2, eyes: 'brown' },\r\n      { _id: 3, eyes: \"green\" }\r\n      { _id: 4, eyes: 'blue' }]\r\n\r\n * @version 0.7.4\r\n */\r\nexport function arrayMergeNoDup(filterKey: string, collection: any[]) {\r\n  const smartMerging = R.pipe(\r\n    //@ts-ignore\r\n    R.map(R.indexBy(R.prop(filterKey))),\r\n    R.reduce(R.mergeWith(R.merge), {}),\r\n    R.values\r\n  );\r\n  //@ts-ignore\r\n  return smartMerging(collection);\r\n}\r\n","import { Linking as RNLinking, Platform } from \"react-native\";\r\n\r\n/**\r\n * Fn to open url on ios, android and web,\r\n * with option to `open in new tab` for web\r\n * ---\r\n * @version 0.10.30\r\n * @author nguyenkhooi\r\n */\r\nexport const LinkURL = (url: string, newTab?: boolean) => {\r\n  if (Platform.OS == \"web\" && !!newTab) {\r\n    window.open(url, \"_blank\");\r\n  } else {\r\n    RNLinking.openURL(url); // normal Linking react-native\r\n  }\r\n};\r\n","import * as js from \"./js-functions\";\r\nimport * as web from \"./web-functions\";\r\n\r\nexport const fn = { js, web };\r\n","export const evaDark = {\r\n  \"color-primary-100\": \"#FFF0DE\",\r\n  \"color-primary-200\": \"#FFDDBE\",\r\n  \"color-primary-300\": \"#FFC69D\",\r\n  \"color-primary-400\": \"#FFB085\",\r\n  \"color-primary-500\": \"#FF8B5D\",\r\n  \"color-primary-600\": \"#DB6443\",\r\n  \"color-primary-700\": \"#B7432E\",\r\n  \"color-primary-800\": \"#93271D\",\r\n  \"color-primary-900\": \"#7A1311\",\r\n\r\n  \"color-primary-transparent-100\": \"rgba(254, 78, 2, 0.08)\",\r\n  \"color-primary-transparent-200\": \"rgba(254, 78, 2, 0.16)\",\r\n  \"color-primary-transparent-300\": \"rgba(254, 78, 2, 0.24)\",\r\n  \"color-primary-transparent-400\": \"rgba(254, 78, 2, 0.32)\",\r\n  \"color-primary-transparent-500\": \"rgba(254, 78, 2, 0.4)\",\r\n  \"color-primary-transparent-600\": \"rgba(254, 78, 2, 0.48)\",\r\n\r\n  \"color-secondary-100\": \"#DFCCFF\",\r\n  \"color-secondary-200\": \"#BC99FF\",\r\n  \"color-secondary-300\": \"#9667FF\",\r\n  \"color-secondary-400\": \"#7741FF\",\r\n  \"color-secondary-500\": \"#4402FF\",\r\n  \"color-secondary-600\": \"#3401DB\",\r\n  \"color-secondary-700\": \"#2601B7\",\r\n  \"color-secondary-800\": \"#1B0093\",\r\n  \"color-secondary-900\": \"#13007A\",\r\n\r\n  \"color-secondary-transparent-100\": \"rgba(68, 2, 255, 0.08)\",\r\n  \"color-secondary-transparent-200\": \"rgba(68, 2, 255, 0.16)\",\r\n  \"color-secondary-transparent-300\": \"rgba(68, 2, 255, 0.24)\",\r\n  \"color-secondary-transparent-400\": \"rgba(68, 2, 255, 0.32)\",\r\n  \"color-secondary-transparent-500\": \"rgba(68, 2, 255, 0.4)\",\r\n  \"color-secondary-transparent-600\": \"rgba(68, 2, 255, 0.48)\",\r\n\r\n  \"color-success-100\": \"#EBFCDE\",\r\n  \"color-success-200\": \"#D2FABF\",\r\n  \"color-success-300\": \"#B0F19C\",\r\n  \"color-success-400\": \"#8FE37F\",\r\n  \"color-success-500\": \"#60D156\",\r\n  \"color-success-600\": \"#3EB33E\",\r\n  \"color-success-700\": \"#2B9634\",\r\n  \"color-success-800\": \"#1B792A\",\r\n  \"color-success-900\": \"#106425\",\r\n\r\n  \"color-success-transparent-100\": \"rgba(0, 224, 150, 0.08)\",\r\n  \"color-success-transparent-200\": \"rgba(0, 224, 150, 0.16)\",\r\n  \"color-success-transparent-300\": \"rgba(0, 224, 150, 0.24)\",\r\n  \"color-success-transparent-400\": \"rgba(0, 224, 150, 0.32)\",\r\n  \"color-success-transparent-500\": \"rgba(0, 224, 150, 0.40)\",\r\n  \"color-success-transparent-600\": \"rgba(0, 224, 150, 0.48)\",\r\n\r\n  \"color-info-100\": \"#CBF1FC\",\r\n  \"color-info-200\": \"#98DEFA\",\r\n  \"color-info-300\": \"#64C0F0\",\r\n  \"color-info-400\": \"#3DA0E1\",\r\n  \"color-info-500\": \"#0674ce\",\r\n  \"color-info-600\": \"#045AB1\",\r\n  \"color-info-700\": \"#034394\",\r\n  \"color-info-800\": \"#012F77\",\r\n  \"color-info-900\": \"#012162\",\r\n\r\n  \"color-info-transparent-100\": \"rgba(6, 116, 206, 0.08)\",\r\n  \"color-info-transparent-200\": \"rgba(6, 116, 206, 0.16)\",\r\n  \"color-info-transparent-300\": \"rgba(6, 116, 206, 0.24)\",\r\n  \"color-info-transparent-400\": \"rgba(6, 116, 206, 0.32)\",\r\n  \"color-info-transparent-500\": \"rgba(6, 116, 206, 0.4)\",\r\n  \"color-info-transparent-600\": \"rgba(6, 116, 206, 0.48)\",\r\n\r\n  \"color-warning-100\": \"#FFF5D9\",\r\n  \"color-warning-200\": \"#FFE8B3\",\r\n  \"color-warning-300\": \"#FFD88D\",\r\n  \"color-warning-400\": \"#FFC871\",\r\n  \"color-warning-500\": \"#ffae42\",\r\n  \"color-warning-600\": \"#DB8A30\",\r\n  \"color-warning-700\": \"#B76A21\",\r\n  \"color-warning-800\": \"#934D15\",\r\n  \"color-warning-900\": \"#7A380C\",\r\n\r\n  \"color-warning-transparent-100\": \"rgba(255, 174, 66, 0.08)\",\r\n  \"color-warning-transparent-200\": \"rgba(255, 174, 66, 0.16)\",\r\n  \"color-warning-transparent-300\": \"rgba(255, 174, 66, 0.24)\",\r\n  \"color-warning-transparent-400\": \"rgba(255, 174, 66, 0.32)\",\r\n  \"color-warning-transparent-500\": \"rgba(255, 174, 66, 0.4)\",\r\n  \"color-warning-transparent-600\": \"rgba(255, 174, 66, 0.48)\",\r\n\r\n  \"color-danger-100\": \"#FEE6D6\",\r\n  \"color-danger-200\": \"#FDC7AE\",\r\n  \"color-danger-300\": \"#FBA186\",\r\n  \"color-danger-400\": \"#F87D67\",\r\n  \"color-danger-500\": \"#f44336\",\r\n  \"color-danger-600\": \"#D12729\",\r\n  \"color-danger-700\": \"#AF1B29\",\r\n  \"color-danger-800\": \"#8D1127\",\r\n  \"color-danger-900\": \"#750A26\",\r\n\r\n  \"color-danger-transparent-100\": \"rgba(244, 67, 54, 0.08)\",\r\n  \"color-danger-transparent-200\": \"rgba(244, 67, 54, 0.16)\",\r\n  \"color-danger-transparent-300\": \"rgba(244, 67, 54, 0.24)\",\r\n  \"color-danger-transparent-400\": \"rgba(244, 67, 54, 0.32)\",\r\n  \"color-danger-transparent-500\": \"rgba(244, 67, 54, 0.4)\",\r\n  \"color-danger-transparent-600\": \"rgba(244, 67, 54, 0.48)\",\r\n\r\n  \"color-basic-100\": \"#FFFFFF\",\r\n  \"color-basic-200\": \"#F7F9FC\",\r\n  \"color-basic-300\": \"#EDF1F7\",\r\n  \"color-basic-400\": \"#E4E9F2\",\r\n  \"color-basic-500\": \"#C5CEE0\",\r\n  \"color-basic-600\": \"#8F9BB3\",\r\n  \"color-basic-700\": \"#2E3A59\",\r\n  \"color-basic-800\": \"#222B45\",\r\n  \"color-basic-900\": \"#262626\",\r\n  \"color-basic-1000\": \"#151A30\",\r\n  \"color-basic-1100\": \"#101426\",\r\n\r\n  \"color-basic-transparent-100\": \"rgba(143, 155, 179, 0.08)\",\r\n  \"color-basic-transparent-200\": \"rgba(143, 155, 179, 0.16)\",\r\n  \"color-basic-transparent-300\": \"rgba(143, 155, 179, 0.24)\",\r\n  \"color-basic-transparent-400\": \"rgba(143, 155, 179, 0.32)\",\r\n  \"color-basic-transparent-500\": \"rgba(143, 155, 179, 0.40)\",\r\n  \"color-basic-transparent-600\": \"rgba(143, 155, 179, 0.48)\",\r\n\r\n  \"color-basic-control-transparent-100\": \"rgba(255, 255, 255, 0.08)\",\r\n  \"color-basic-control-transparent-200\": \"rgba(255, 255, 255, 0.16)\",\r\n  \"color-basic-control-transparent-300\": \"rgba(255, 255, 255, 0.24)\",\r\n  \"color-basic-control-transparent-400\": \"rgba(255, 255, 255, 0.32)\",\r\n  \"color-basic-control-transparent-500\": \"rgba(255, 255, 255, 0.40)\",\r\n  \"color-basic-control-transparent-600\": \"rgba(255, 255, 255, 0.48)\",\r\n\r\n  \"color-basic-focus\": \"$color-basic-400\",\r\n  \"color-basic-hover\": \"$color-basic-200\",\r\n  \"color-basic-default\": \"$color-basic-300\",\r\n  \"color-basic-active\": \"$color-basic-400\",\r\n  \"color-basic-disabled\": \"$color-basic-transparent-300\",\r\n  \"color-basic-focus-border\": \"$color-basic-500\",\r\n  \"color-basic-hover-border\": \"$color-basic-hover\",\r\n  \"color-basic-default-border\": \"$color-basic-default\",\r\n  \"color-basic-active-border\": \"$color-basic-active\",\r\n  \"color-basic-disabled-border\": \"$color-basic-disabled\",\r\n\r\n  \"color-basic-transparent-focus\": \"$color-basic-transparent-300\",\r\n  \"color-basic-transparent-hover\": \"$color-basic-transparent-200\",\r\n  \"color-basic-transparent-default\": \"$color-basic-transparent-100\",\r\n  \"color-basic-transparent-active\": \"$color-basic-transparent-300\",\r\n  \"color-basic-transparent-disabled\": \"$color-basic-transparent-200\",\r\n  \"color-basic-transparent-focus-border\": \"$color-basic-600\",\r\n  \"color-basic-transparent-hover-border\": \"$color-basic-600\",\r\n  \"color-basic-transparent-default-border\": \"$color-basic-600\",\r\n  \"color-basic-transparent-active-border\": \"$color-basic-600\",\r\n  \"color-basic-transparent-disabled-border\": \"$color-basic-transparent-300\",\r\n\r\n  \"color-primary-focus\": \"$color-primary-600\",\r\n  \"color-primary-hover\": \"$color-primary-400\",\r\n  \"color-primary-default\": \"$color-primary-500\",\r\n  \"color-primary-active\": \"$color-primary-600\",\r\n  \"color-primary-disabled\": \"$color-basic-transparent-300\",\r\n  \"color-primary-focus-border\": \"$color-primary-700\",\r\n  \"color-primary-hover-border\": \"$color-primary-hover\",\r\n  \"color-primary-default-border\": \"$color-primary-default\",\r\n  \"color-primary-active-border\": \"$color-primary-active\",\r\n  \"color-primary-disabled-border\": \"$color-primary-disabled\",\r\n\r\n  \"color-primary-transparent-focus\": \"$color-primary-transparent-300\",\r\n  \"color-primary-transparent-hover\": \"$color-primary-transparent-200\",\r\n  \"color-primary-transparent-default\": \"$color-primary-transparent-100\",\r\n  \"color-primary-transparent-active\": \"$color-primary-transparent-300\",\r\n  \"color-primary-transparent-disabled\": \"$color-basic-transparent-200\",\r\n  \"color-primary-transparent-focus-border\": \"$color-primary-500\",\r\n  \"color-primary-transparent-hover-border\": \"$color-primary-500\",\r\n  \"color-primary-transparent-default-border\": \"$color-primary-500\",\r\n  \"color-primary-transparent-active-border\": \"$color-primary-500\",\r\n  \"color-primary-transparent-disabled-border\": \"$color-basic-transparent-300\",\r\n\r\n  \"color-success-focus\": \"$color-success-600\",\r\n  \"color-success-hover\": \"$color-success-400\",\r\n  \"color-success-default\": \"$color-success-500\",\r\n  \"color-success-active\": \"$color-success-600\",\r\n  \"color-success-disabled\": \"$color-basic-transparent-300\",\r\n  \"color-success-focus-border\": \"$color-success-700\",\r\n  \"color-success-hover-border\": \"$color-success-hover\",\r\n  \"color-success-default-border\": \"$color-success-default\",\r\n  \"color-success-active-border\": \"$color-success-active\",\r\n  \"color-success-disabled-border\": \"$color-success-disabled\",\r\n\r\n  \"color-success-transparent-focus\": \"$color-success-transparent-300\",\r\n  \"color-success-transparent-hover\": \"$color-success-transparent-200\",\r\n  \"color-success-transparent-default\": \"$color-success-transparent-100\",\r\n  \"color-success-transparent-active\": \"$color-success-transparent-300\",\r\n  \"color-success-transparent-disabled\": \"$color-basic-transparent-200\",\r\n  \"color-success-transparent-focus-border\": \"$color-success-500\",\r\n  \"color-success-transparent-hover-border\": \"$color-success-500\",\r\n  \"color-success-transparent-default-border\": \"$color-success-500\",\r\n  \"color-success-transparent-active-border\": \"$color-success-500\",\r\n  \"color-success-transparent-disabled-border\": \"$color-basic-transparent-300\",\r\n\r\n  \"color-info-focus\": \"$color-info-600\",\r\n  \"color-info-hover\": \"$color-info-400\",\r\n  \"color-info-default\": \"$color-info-500\",\r\n  \"color-info-active\": \"$color-info-600\",\r\n  \"color-info-disabled\": \"$color-basic-transparent-300\",\r\n  \"color-info-focus-border\": \"$color-info-700\",\r\n  \"color-info-hover-border\": \"$color-info-hover\",\r\n  \"color-info-default-border\": \"$color-info-default\",\r\n  \"color-info-active-border\": \"$color-info-active\",\r\n  \"color-info-disabled-border\": \"$color-info-disabled\",\r\n\r\n  \"color-info-transparent-focus\": \"$color-info-transparent-300\",\r\n  \"color-info-transparent-hover\": \"$color-info-transparent-200\",\r\n  \"color-info-transparent-default\": \"$color-info-transparent-100\",\r\n  \"color-info-transparent-active\": \"$color-info-transparent-300\",\r\n  \"color-info-transparent-disabled\": \"$color-basic-transparent-200\",\r\n  \"color-info-transparent-focus-border\": \"$color-info-500\",\r\n  \"color-info-transparent-hover-border\": \"$color-info-500\",\r\n  \"color-info-transparent-default-border\": \"$color-info-500\",\r\n  \"color-info-transparent-active-border\": \"$color-info-500\",\r\n  \"color-info-transparent-disabled-border\": \"$color-basic-transparent-300\",\r\n\r\n  \"color-warning-focus\": \"$color-warning-600\",\r\n  \"color-warning-hover\": \"$color-warning-400\",\r\n  \"color-warning-default\": \"$color-warning-500\",\r\n  \"color-warning-active\": \"$color-warning-600\",\r\n  \"color-warning-disabled\": \"$color-basic-transparent-300\",\r\n  \"color-warning-focus-border\": \"$color-warning-700\",\r\n  \"color-warning-hover-border\": \"$color-warning-hover\",\r\n  \"color-warning-default-border\": \"$color-warning-default\",\r\n  \"color-warning-active-border\": \"$color-warning-active\",\r\n  \"color-warning-disabled-border\": \"$color-warning-disabled\",\r\n\r\n  \"color-warning-transparent-focus\": \"$color-warning-transparent-300\",\r\n  \"color-warning-transparent-hover\": \"$color-warning-transparent-200\",\r\n  \"color-warning-transparent-default\": \"$color-warning-transparent-100\",\r\n  \"color-warning-transparent-active\": \"$color-warning-transparent-300\",\r\n  \"color-warning-transparent-disabled\": \"$color-basic-transparent-200\",\r\n  \"color-warning-transparent-focus-border\": \"$color-warning-500\",\r\n  \"color-warning-transparent-hover-border\": \"$color-warning-500\",\r\n  \"color-warning-transparent-default-border\": \"$color-warning-500\",\r\n  \"color-warning-transparent-active-border\": \"$color-warning-500\",\r\n  \"color-warning-transparent-disabled-border\": \"$color-basic-transparent-300\",\r\n\r\n  \"color-danger-focus\": \"$color-danger-600\",\r\n  \"color-danger-hover\": \"$color-danger-400\",\r\n  \"color-danger-default\": \"$color-danger-500\",\r\n  \"color-danger-active\": \"$color-danger-600\",\r\n  \"color-danger-disabled\": \"$color-basic-transparent-300\",\r\n  \"color-danger-focus-border\": \"color-danger-700\",\r\n  \"color-danger-hover-border\": \"$color-danger-hover\",\r\n  \"color-danger-default-border\": \"$color-danger-default\",\r\n  \"color-danger-active-border\": \"$color-danger-active\",\r\n  \"color-danger-disabled-border\": \"$color-danger-disabled\",\r\n\r\n  \"color-danger-transparent-focus\": \"$color-danger-transparent-300\",\r\n  \"color-danger-transparent-hover\": \"$color-danger-transparent-200\",\r\n  \"color-danger-transparent-default\": \"$color-danger-transparent-100\",\r\n  \"color-danger-transparent-active\": \"$color-danger-transparent-300\",\r\n  \"color-danger-transparent-disabled\": \"$color-basic-transparent-200\",\r\n  \"color-danger-transparent-focus-border\": \"$color-danger-500\",\r\n  \"color-danger-transparent-hover-border\": \"$color-danger-500\",\r\n  \"color-danger-transparent-default-border\": \"$color-danger-500\",\r\n  \"color-danger-transparent-active-border\": \"$color-danger-500\",\r\n  \"color-danger-transparent-disabled-border\": \"$color-basic-transparent-300\",\r\n\r\n  \"color-control-focus\": \"$color-basic-300\",\r\n  \"color-control-hover\": \"$color-basic-200\",\r\n  \"color-control-default\": \"$color-basic-100\",\r\n  \"color-control-active\": \"$color-basic-300\",\r\n  \"color-control-disabled\": \"$color-basic-transparent-300\",\r\n  \"color-control-focus-border\": \"$color-basic-500\",\r\n  \"color-control-hover-border\": \"$color-control-hover\",\r\n  \"color-control-default-border\": \"$color-control-default\",\r\n  \"color-control-active-border\": \"$color-control-active\",\r\n  \"color-control-disabled-border\": \"$color-control-disabled\",\r\n\r\n  \"color-control-transparent-focus\": \"$color-basic-control-transparent-300\",\r\n  \"color-control-transparent-hover\": \"$color-basic-control-transparent-200\",\r\n  \"color-control-transparent-default\": \"$color-basic-control-transparent-100\",\r\n  \"color-control-transparent-active\": \"$color-basic-control-transparent-300\",\r\n  \"color-control-transparent-disabled\": \"$color-basic-transparent-200\",\r\n  \"color-control-transparent-focus-border\": \"$color-basic-100\",\r\n  \"color-control-transparent-hover-border\": \"$color-basic-100\",\r\n  \"color-control-transparent-default-border\": \"$color-basic-100\",\r\n  \"color-control-transparent-active-border\": \"$color-basic-100\",\r\n  \"color-control-transparent-disabled-border\": \"$color-basic-transparent-300\",\r\n\r\n  \"background-basic-color-1\": \"$color-basic-800\",\r\n  \"background-basic-color-2\": \"$color-basic-900\",\r\n  \"background-basic-color-3\": \"$color-basic-1000\",\r\n  \"background-basic-color-4\": \"$color-basic-1100\",\r\n\r\n  \"background-alternative-color-1\": \"$color-basic-100\",\r\n  \"background-alternative-color-2\": \"$color-basic-200\",\r\n  \"background-alternative-color-3\": \"$color-basic-300\",\r\n  \"background-alternative-color-4\": \"$color-basic-400\",\r\n\r\n  \"border-basic-color-1\": \"$color-basic-800\",\r\n  \"border-basic-color-2\": \"$color-basic-900\",\r\n  \"border-basic-color-3\": \"$color-basic-1000\",\r\n  \"border-basic-color-4\": \"$color-basic-1100\",\r\n  \"border-basic-color-5\": \"$color-basic-1100\",\r\n\r\n  \"border-alternative-color-1\": \"$color-basic-100\",\r\n  \"border-alternative-color-2\": \"$color-basic-200\",\r\n  \"border-alternative-color-3\": \"$color-basic-300\",\r\n  \"border-alternative-color-4\": \"$color-basic-400\",\r\n  \"border-alternative-color-5\": \"$color-basic-500\",\r\n\r\n  \"border-primary-color-1\": \"$color-primary-500\",\r\n  \"border-primary-color-2\": \"$color-primary-600\",\r\n  \"border-primary-color-3\": \"$color-primary-700\",\r\n  \"border-primary-color-4\": \"$color-primary-800\",\r\n  \"border-primary-color-5\": \"$color-primary-900\",\r\n\r\n  \"border-success-color-1\": \"$color-success-500\",\r\n  \"border-success-color-2\": \"$color-success-600\",\r\n  \"border-success-color-3\": \"$color-success-700\",\r\n  \"border-success-color-4\": \"$color-success-800\",\r\n  \"border-success-color-5\": \"$color-success-900\",\r\n\r\n  \"border-info-color-1\": \"$color-info-500\",\r\n  \"border-info-color-2\": \"$color-info-600\",\r\n  \"border-info-color-3\": \"$color-info-700\",\r\n  \"border-info-color-4\": \"$color-info-800\",\r\n  \"border-info-color-5\": \"$color-info-900\",\r\n\r\n  \"border-warning-color-1\": \"$color-warning-500\",\r\n  \"border-warning-color-2\": \"$color-warning-600\",\r\n  \"border-warning-color-3\": \"$color-warning-700\",\r\n  \"border-warning-color-4\": \"$color-warning-800\",\r\n  \"border-warning-color-5\": \"$color-warning-900\",\r\n\r\n  \"border-danger-color-1\": \"$color-danger-500\",\r\n  \"border-danger-color-2\": \"$color-danger-600\",\r\n  \"border-danger-color-3\": \"$color-danger-700\",\r\n  \"border-danger-color-4\": \"$color-danger-800\",\r\n  \"border-danger-color-5\": \"$color-danger-900\",\r\n\r\n  \"text-basic-color\": \"$color-basic-100\",\r\n  \"text-alternate-color\": \"$color-basic-900\",\r\n  \"text-control-color\": \"$color-basic-100\",\r\n  \"text-disabled-color\": \"$color-basic-transparent-600\",\r\n  \"text-hint-color\": \"$color-basic-600\",\r\n\r\n  \"text-primary-color\": \"$color-primary-default\",\r\n  \"text-primary-focus-color\": \"$color-primary-focus\",\r\n  \"text-primary-hover-color\": \"$color-primary-hover\",\r\n  \"text-primary-active-color\": \"$color-primary-active\",\r\n  \"text-primary-disabled-color\": \"$color-primary-400\",\r\n\r\n  \"text-success-color\": \"$color-success-default\",\r\n  \"text-success-focus-color\": \"$color-success-focus\",\r\n  \"text-success-hover-color\": \"$color-success-hover\",\r\n  \"text-success-active-color\": \"$color-success-active\",\r\n  \"text-success-disabled-color\": \"$color-success-400\",\r\n\r\n  \"text-info-color\": \"$color-info-default\",\r\n  \"text-info-focus-color\": \"$color-info-focus\",\r\n  \"text-info-hover-color\": \"$color-info-hover\",\r\n  \"text-info-active-color\": \"$color-info-active\",\r\n  \"text-info-disabled-color\": \"$color-info-400\",\r\n\r\n  \"text-warning-color\": \"$color-warning-default\",\r\n  \"text-warning-focus-color\": \"$color-warning-focus\",\r\n  \"text-warning-hover-color\": \"$color-warning-hover\",\r\n  \"text-warning-active-color\": \"$color-warning-active\",\r\n  \"text-warning-disabled-color\": \"$color-warning-400\",\r\n\r\n  \"text-danger-color\": \"$color-danger-default\",\r\n  \"text-danger-focus-color\": \"$color-danger-focus\",\r\n  \"text-danger-hover-color\": \"$color-danger-hover\",\r\n  \"text-danger-active-color\": \"$color-danger-active\",\r\n  \"text-danger-disabled-color\": \"$color-danger-400\",\r\n\r\n  \"outline-color\": \"$color-basic-700\",\r\n}\r\n","export const evaLight = {\r\n  \"color-primary-100\": \"#FEE9CC\",\r\n  \"color-primary-200\": \"#FECC99\",\r\n  \"color-primary-300\": \"#FEA967\",\r\n  \"color-primary-400\": \"#FE8641\",\r\n  \"color-primary-500\": \"#FE4E02\",\r\n  \"color-primary-600\": \"#DA3401\",\r\n  \"color-primary-700\": \"#B61F01\",\r\n  \"color-primary-800\": \"#930F00\",\r\n  \"color-primary-900\": \"#790400\",\r\n\r\n  \"color-primary-transparent-100\": \"rgba(254, 78, 2, 0.08)\",\r\n  \"color-primary-transparent-200\": \"rgba(254, 78, 2, 0.16)\",\r\n  \"color-primary-transparent-300\": \"rgba(254, 78, 2, 0.24)\",\r\n  \"color-primary-transparent-400\": \"rgba(254, 78, 2, 0.32)\",\r\n  \"color-primary-transparent-500\": \"rgba(254, 78, 2, 0.4)\",\r\n  \"color-primary-transparent-600\": \"rgba(254, 78, 2, 0.48)\",\r\n\r\n  \"color-secondary-100\": \"#DFCCFF\",\r\n  \"color-secondary-200\": \"#BC99FF\",\r\n  \"color-secondary-300\": \"#9667FF\",\r\n  \"color-secondary-400\": \"#7741FF\",\r\n  \"color-secondary-500\": \"#4402FF\",\r\n  \"color-secondary-600\": \"#3401DB\",\r\n  \"color-secondary-700\": \"#2601B7\",\r\n  \"color-secondary-800\": \"#1B0093\",\r\n  \"color-secondary-900\": \"#13007A\",\r\n\r\n  \"color-secondary-transparent-100\": \"rgba(68, 2, 255, 0.08)\",\r\n  \"color-secondary-transparent-200\": \"rgba(68, 2, 255, 0.16)\",\r\n  \"color-secondary-transparent-300\": \"rgba(68, 2, 255, 0.24)\",\r\n  \"color-secondary-transparent-400\": \"rgba(68, 2, 255, 0.32)\",\r\n  \"color-secondary-transparent-500\": \"rgba(68, 2, 255, 0.4)\",\r\n  \"color-secondary-transparent-600\": \"rgba(68, 2, 255, 0.48)\",\r\n\r\n  \"color-success-100\": \"#EBFCDE\",\r\n  \"color-success-200\": \"#D2FABF\",\r\n  \"color-success-300\": \"#B0F19C\",\r\n  \"color-success-400\": \"#8FE37F\",\r\n  \"color-success-500\": \"#60D156\",\r\n  \"color-success-600\": \"#3EB33E\",\r\n  \"color-success-700\": \"#2B9634\",\r\n  \"color-success-800\": \"#1B792A\",\r\n  \"color-success-900\": \"#106425\",\r\n\r\n  \"color-success-transparent-100\": \"rgba(0, 224, 150, 0.08)\",\r\n  \"color-success-transparent-200\": \"rgba(0, 224, 150, 0.16)\",\r\n  \"color-success-transparent-300\": \"rgba(0, 224, 150, 0.24)\",\r\n  \"color-success-transparent-400\": \"rgba(0, 224, 150, 0.32)\",\r\n  \"color-success-transparent-500\": \"rgba(0, 224, 150, 0.40)\",\r\n  \"color-success-transparent-600\": \"rgba(0, 224, 150, 0.48)\",\r\n\r\n  \"color-info-100\": \"#CBF1FC\",\r\n  \"color-info-200\": \"#98DEFA\",\r\n  \"color-info-300\": \"#64C0F0\",\r\n  \"color-info-400\": \"#3DA0E1\",\r\n  \"color-info-500\": \"#0674ce\",\r\n  \"color-info-600\": \"#045AB1\",\r\n  \"color-info-700\": \"#034394\",\r\n  \"color-info-800\": \"#012F77\",\r\n  \"color-info-900\": \"#012162\",\r\n\r\n  \"color-info-transparent-100\": \"rgba(6, 116, 206, 0.08)\",\r\n  \"color-info-transparent-200\": \"rgba(6, 116, 206, 0.16)\",\r\n  \"color-info-transparent-300\": \"rgba(6, 116, 206, 0.24)\",\r\n  \"color-info-transparent-400\": \"rgba(6, 116, 206, 0.32)\",\r\n  \"color-info-transparent-500\": \"rgba(6, 116, 206, 0.4)\",\r\n  \"color-info-transparent-600\": \"rgba(6, 116, 206, 0.48)\",\r\n\r\n  \"color-warning-100\": \"#FFF5D9\",\r\n  \"color-warning-200\": \"#FFE8B3\",\r\n  \"color-warning-300\": \"#FFD88D\",\r\n  \"color-warning-400\": \"#FFC871\",\r\n  \"color-warning-500\": \"#ffae42\",\r\n  \"color-warning-600\": \"#DB8A30\",\r\n  \"color-warning-700\": \"#B76A21\",\r\n  \"color-warning-800\": \"#934D15\",\r\n  \"color-warning-900\": \"#7A380C\",\r\n\r\n  \"color-warning-transparent-100\": \"rgba(255, 174, 66, 0.08)\",\r\n  \"color-warning-transparent-200\": \"rgba(255, 174, 66, 0.16)\",\r\n  \"color-warning-transparent-300\": \"rgba(255, 174, 66, 0.24)\",\r\n  \"color-warning-transparent-400\": \"rgba(255, 174, 66, 0.32)\",\r\n  \"color-warning-transparent-500\": \"rgba(255, 174, 66, 0.4)\",\r\n  \"color-warning-transparent-600\": \"rgba(255, 174, 66, 0.48)\",\r\n\r\n  \"color-danger-100\": \"#FEE6D6\",\r\n  \"color-danger-200\": \"#FDC7AE\",\r\n  \"color-danger-300\": \"#FBA186\",\r\n  \"color-danger-400\": \"#F87D67\",\r\n  \"color-danger-500\": \"#f44336\",\r\n  \"color-danger-600\": \"#D12729\",\r\n  \"color-danger-700\": \"#AF1B29\",\r\n  \"color-danger-800\": \"#8D1127\",\r\n  \"color-danger-900\": \"#750A26\",\r\n\r\n  \"color-danger-transparent-100\": \"rgba(244, 67, 54, 0.08)\",\r\n  \"color-danger-transparent-200\": \"rgba(244, 67, 54, 0.16)\",\r\n  \"color-danger-transparent-300\": \"rgba(244, 67, 54, 0.24)\",\r\n  \"color-danger-transparent-400\": \"rgba(244, 67, 54, 0.32)\",\r\n  \"color-danger-transparent-500\": \"rgba(244, 67, 54, 0.4)\",\r\n  \"color-danger-transparent-600\": \"rgba(244, 67, 54, 0.48)\",\r\n\r\n  \"color-basic-100\": \"#FFFFFF\",\r\n  \"color-basic-200\": \"#F7F9FC\",\r\n  \"color-basic-300\": \"#EDF1F7\",\r\n  \"color-basic-400\": \"#E4E9F2\",\r\n  \"color-basic-500\": \"#C5CEE0\",\r\n  \"color-basic-600\": \"#8F9BB3\",\r\n  \"color-basic-700\": \"#2E3A59\",\r\n  \"color-basic-800\": \"#222B45\",\r\n  \"color-basic-900\": \"#1A2138\",\r\n  \"color-basic-1000\": \"#151A30\",\r\n  \"color-basic-1100\": \"#101426\",\r\n\r\n  \"color-basic-transparent-100\": \"rgba(143, 155, 179, 0.08)\",\r\n  \"color-basic-transparent-200\": \"rgba(143, 155, 179, 0.16)\",\r\n  \"color-basic-transparent-300\": \"rgba(143, 155, 179, 0.24)\",\r\n  \"color-basic-transparent-400\": \"rgba(143, 155, 179, 0.32)\",\r\n  \"color-basic-transparent-500\": \"rgba(143, 155, 179, 0.40)\",\r\n  \"color-basic-transparent-600\": \"rgba(143, 155, 179, 0.48)\",\r\n\r\n  \"color-basic-control-transparent-100\": \"rgba(255, 255, 255, 0.08)\",\r\n  \"color-basic-control-transparent-200\": \"rgba(255, 255, 255, 0.16)\",\r\n  \"color-basic-control-transparent-300\": \"rgba(255, 255, 255, 0.24)\",\r\n  \"color-basic-control-transparent-400\": \"rgba(255, 255, 255, 0.32)\",\r\n  \"color-basic-control-transparent-500\": \"rgba(255, 255, 255, 0.40)\",\r\n  \"color-basic-control-transparent-600\": \"rgba(255, 255, 255, 0.48)\",\r\n\r\n  \"color-basic-focus\": \"$color-basic-400\",\r\n  \"color-basic-hover\": \"$color-basic-200\",\r\n  \"color-basic-default\": \"$color-basic-300\",\r\n  \"color-basic-active\": \"$color-basic-400\",\r\n  \"color-basic-disabled\": \"$color-basic-transparent-300\",\r\n  \"color-basic-focus-border\": \"$color-basic-500\",\r\n  \"color-basic-hover-border\": \"$color-basic-hover\",\r\n  \"color-basic-default-border\": \"$color-basic-default\",\r\n  \"color-basic-active-border\": \"$color-basic-active\",\r\n  \"color-basic-disabled-border\": \"$color-basic-disabled\",\r\n\r\n  \"color-basic-transparent-focus\": \"$color-basic-transparent-300\",\r\n  \"color-basic-transparent-hover\": \"$color-basic-transparent-200\",\r\n  \"color-basic-transparent-default\": \"$color-basic-transparent-100\",\r\n  \"color-basic-transparent-active\": \"$color-basic-transparent-300\",\r\n  \"color-basic-transparent-disabled\": \"$color-basic-transparent-200\",\r\n  \"color-basic-transparent-focus-border\": \"$color-basic-600\",\r\n  \"color-basic-transparent-hover-border\": \"$color-basic-600\",\r\n  \"color-basic-transparent-default-border\": \"$color-basic-600\",\r\n  \"color-basic-transparent-active-border\": \"$color-basic-600\",\r\n  \"color-basic-transparent-disabled-border\": \"$color-basic-transparent-300\",\r\n\r\n  \"color-primary-focus\": \"$color-primary-600\",\r\n  \"color-primary-hover\": \"$color-primary-400\",\r\n  \"color-primary-default\": \"$color-primary-500\",\r\n  \"color-primary-active\": \"$color-primary-600\",\r\n  \"color-primary-disabled\": \"$color-basic-transparent-300\",\r\n  \"color-primary-focus-border\": \"$color-primary-700\",\r\n  \"color-primary-hover-border\": \"$color-primary-hover\",\r\n  \"color-primary-default-border\": \"$color-primary-default\",\r\n  \"color-primary-active-border\": \"$color-primary-active\",\r\n  \"color-primary-disabled-border\": \"$color-primary-disabled\",\r\n\r\n  \"color-primary-transparent-focus\": \"$color-primary-transparent-300\",\r\n  \"color-primary-transparent-hover\": \"$color-primary-transparent-200\",\r\n  \"color-primary-transparent-default\": \"$color-primary-transparent-100\",\r\n  \"color-primary-transparent-active\": \"$color-primary-transparent-300\",\r\n  \"color-primary-transparent-disabled\": \"$color-basic-transparent-200\",\r\n  \"color-primary-transparent-focus-border\": \"$color-primary-500\",\r\n  \"color-primary-transparent-hover-border\": \"$color-primary-500\",\r\n  \"color-primary-transparent-default-border\": \"$color-primary-500\",\r\n  \"color-primary-transparent-active-border\": \"$color-primary-500\",\r\n  \"color-primary-transparent-disabled-border\": \"$color-basic-transparent-300\",\r\n\r\n  \"color-success-focus\": \"$color-success-600\",\r\n  \"color-success-hover\": \"$color-success-400\",\r\n  \"color-success-default\": \"$color-success-500\",\r\n  \"color-success-active\": \"$color-success-600\",\r\n  \"color-success-disabled\": \"$color-basic-transparent-300\",\r\n  \"color-success-focus-border\": \"$color-success-700\",\r\n  \"color-success-hover-border\": \"$color-success-hover\",\r\n  \"color-success-default-border\": \"$color-success-default\",\r\n  \"color-success-active-border\": \"$color-success-active\",\r\n  \"color-success-disabled-border\": \"$color-success-disabled\",\r\n\r\n  \"color-success-transparent-focus\": \"$color-success-transparent-300\",\r\n  \"color-success-transparent-hover\": \"$color-success-transparent-200\",\r\n  \"color-success-transparent-default\": \"$color-success-transparent-100\",\r\n  \"color-success-transparent-active\": \"$color-success-transparent-300\",\r\n  \"color-success-transparent-disabled\": \"$color-basic-transparent-200\",\r\n  \"color-success-transparent-focus-border\": \"$color-success-500\",\r\n  \"color-success-transparent-hover-border\": \"$color-success-500\",\r\n  \"color-success-transparent-default-border\": \"$color-success-500\",\r\n  \"color-success-transparent-active-border\": \"$color-success-500\",\r\n  \"color-success-transparent-disabled-border\": \"$color-basic-transparent-300\",\r\n\r\n  \"color-info-focus\": \"$color-info-600\",\r\n  \"color-info-hover\": \"$color-info-400\",\r\n  \"color-info-default\": \"$color-info-500\",\r\n  \"color-info-active\": \"$color-info-600\",\r\n  \"color-info-disabled\": \"$color-basic-transparent-300\",\r\n  \"color-info-focus-border\": \"$color-info-700\",\r\n  \"color-info-hover-border\": \"$color-info-hover\",\r\n  \"color-info-default-border\": \"$color-info-default\",\r\n  \"color-info-active-border\": \"$color-info-active\",\r\n  \"color-info-disabled-border\": \"$color-info-disabled\",\r\n\r\n  \"color-info-transparent-focus\": \"$color-info-transparent-300\",\r\n  \"color-info-transparent-hover\": \"$color-info-transparent-200\",\r\n  \"color-info-transparent-default\": \"$color-info-transparent-100\",\r\n  \"color-info-transparent-active\": \"$color-info-transparent-300\",\r\n  \"color-info-transparent-disabled\": \"$color-basic-transparent-200\",\r\n  \"color-info-transparent-focus-border\": \"$color-info-500\",\r\n  \"color-info-transparent-hover-border\": \"$color-info-500\",\r\n  \"color-info-transparent-default-border\": \"$color-info-500\",\r\n  \"color-info-transparent-active-border\": \"$color-info-500\",\r\n  \"color-info-transparent-disabled-border\": \"$color-basic-transparent-300\",\r\n\r\n  \"color-warning-focus\": \"$color-warning-600\",\r\n  \"color-warning-hover\": \"$color-warning-400\",\r\n  \"color-warning-default\": \"$color-warning-500\",\r\n  \"color-warning-active\": \"$color-warning-600\",\r\n  \"color-warning-disabled\": \"$color-basic-transparent-300\",\r\n  \"color-warning-focus-border\": \"$color-warning-700\",\r\n  \"color-warning-hover-border\": \"$color-warning-hover\",\r\n  \"color-warning-default-border\": \"$color-warning-default\",\r\n  \"color-warning-active-border\": \"$color-warning-active\",\r\n  \"color-warning-disabled-border\": \"$color-warning-disabled\",\r\n\r\n  \"color-warning-transparent-focus\": \"$color-warning-transparent-300\",\r\n  \"color-warning-transparent-hover\": \"$color-warning-transparent-200\",\r\n  \"color-warning-transparent-default\": \"$color-warning-transparent-100\",\r\n  \"color-warning-transparent-active\": \"$color-warning-transparent-300\",\r\n  \"color-warning-transparent-disabled\": \"$color-basic-transparent-200\",\r\n  \"color-warning-transparent-focus-border\": \"$color-warning-500\",\r\n  \"color-warning-transparent-hover-border\": \"$color-warning-500\",\r\n  \"color-warning-transparent-default-border\": \"$color-warning-500\",\r\n  \"color-warning-transparent-active-border\": \"$color-warning-500\",\r\n  \"color-warning-transparent-disabled-border\": \"$color-basic-transparent-300\",\r\n\r\n  \"color-danger-focus\": \"$color-danger-600\",\r\n  \"color-danger-hover\": \"$color-danger-400\",\r\n  \"color-danger-default\": \"$color-danger-500\",\r\n  \"color-danger-active\": \"$color-danger-600\",\r\n  \"color-danger-disabled\": \"$color-basic-transparent-300\",\r\n  \"color-danger-focus-border\": \"color-danger-700\",\r\n  \"color-danger-hover-border\": \"$color-danger-hover\",\r\n  \"color-danger-default-border\": \"$color-danger-default\",\r\n  \"color-danger-active-border\": \"$color-danger-active\",\r\n  \"color-danger-disabled-border\": \"$color-danger-disabled\",\r\n\r\n  \"color-danger-transparent-focus\": \"$color-danger-transparent-300\",\r\n  \"color-danger-transparent-hover\": \"$color-danger-transparent-200\",\r\n  \"color-danger-transparent-default\": \"$color-danger-transparent-100\",\r\n  \"color-danger-transparent-active\": \"$color-danger-transparent-300\",\r\n  \"color-danger-transparent-disabled\": \"$color-basic-transparent-200\",\r\n  \"color-danger-transparent-focus-border\": \"$color-danger-500\",\r\n  \"color-danger-transparent-hover-border\": \"$color-danger-500\",\r\n  \"color-danger-transparent-default-border\": \"$color-danger-500\",\r\n  \"color-danger-transparent-active-border\": \"$color-danger-500\",\r\n  \"color-danger-transparent-disabled-border\": \"$color-basic-transparent-300\",\r\n\r\n  \"color-control-focus\": \"$color-basic-300\",\r\n  \"color-control-hover\": \"$color-basic-200\",\r\n  \"color-control-default\": \"$color-basic-100\",\r\n  \"color-control-active\": \"$color-basic-300\",\r\n  \"color-control-disabled\": \"$color-basic-transparent-300\",\r\n  \"color-control-focus-border\": \"$color-basic-500\",\r\n  \"color-control-hover-border\": \"$color-control-hover\",\r\n  \"color-control-default-border\": \"$color-control-default\",\r\n  \"color-control-active-border\": \"$color-control-active\",\r\n  \"color-control-disabled-border\": \"$color-control-disabled\",\r\n\r\n  \"color-control-transparent-focus\": \"$color-basic-control-transparent-300\",\r\n  \"color-control-transparent-hover\": \"$color-basic-control-transparent-200\",\r\n  \"color-control-transparent-default\": \"$color-basic-control-transparent-100\",\r\n  \"color-control-transparent-active\": \"$color-basic-control-transparent-300\",\r\n  \"color-control-transparent-disabled\": \"$color-basic-transparent-200\",\r\n  \"color-control-transparent-focus-border\": \"$color-basic-100\",\r\n  \"color-control-transparent-hover-border\": \"$color-basic-100\",\r\n  \"color-control-transparent-default-border\": \"$color-basic-100\",\r\n  \"color-control-transparent-active-border\": \"$color-basic-100\",\r\n  \"color-control-transparent-disabled-border\": \"$color-basic-transparent-300\",\r\n\r\n  \"background-basic-color-1\": \"$color-basic-100\",\r\n  \"background-basic-color-2\": \"$color-basic-200\",\r\n  \"background-basic-color-3\": \"$color-basic-300\",\r\n  \"background-basic-color-4\": \"$color-basic-400\",\r\n\r\n  \"background-alternative-color-1\": \"$color-basic-800\",\r\n  \"background-alternative-color-2\": \"$color-basic-900\",\r\n  \"background-alternative-color-3\": \"$color-basic-1000\",\r\n  \"background-alternative-color-4\": \"$color-basic-1100\",\r\n\r\n  \"border-basic-color-1\": \"$color-basic-100\",\r\n  \"border-basic-color-2\": \"$color-basic-200\",\r\n  \"border-basic-color-3\": \"$color-basic-300\",\r\n  \"border-basic-color-4\": \"$color-basic-400\",\r\n  \"border-basic-color-5\": \"$color-basic-500\",\r\n\r\n  \"border-alternative-color-1\": \"$color-basic-800\",\r\n  \"border-alternative-color-2\": \"$color-basic-900\",\r\n  \"border-alternative-color-3\": \"$color-basic-1000\",\r\n  \"border-alternative-color-4\": \"$color-basic-1100\",\r\n  \"border-alternative-color-5\": \"$color-basic-1100\",\r\n\r\n  \"border-primary-color-1\": \"$color-primary-500\",\r\n  \"border-primary-color-2\": \"$color-primary-600\",\r\n  \"border-primary-color-3\": \"$color-primary-700\",\r\n  \"border-primary-color-4\": \"$color-primary-800\",\r\n  \"border-primary-color-5\": \"$color-primary-900\",\r\n\r\n  \"border-success-color-1\": \"$color-success-500\",\r\n  \"border-success-color-2\": \"$color-success-600\",\r\n  \"border-success-color-3\": \"$color-success-700\",\r\n  \"border-success-color-4\": \"$color-success-800\",\r\n  \"border-success-color-5\": \"$color-success-900\",\r\n\r\n  \"border-info-color-1\": \"$color-info-500\",\r\n  \"border-info-color-2\": \"$color-info-600\",\r\n  \"border-info-color-3\": \"$color-info-700\",\r\n  \"border-info-color-4\": \"$color-info-800\",\r\n  \"border-info-color-5\": \"$color-info-900\",\r\n\r\n  \"border-warning-color-1\": \"$color-warning-500\",\r\n  \"border-warning-color-2\": \"$color-warning-600\",\r\n  \"border-warning-color-3\": \"$color-warning-700\",\r\n  \"border-warning-color-4\": \"$color-warning-800\",\r\n  \"border-warning-color-5\": \"$color-warning-900\",\r\n\r\n  \"border-danger-color-1\": \"$color-danger-500\",\r\n  \"border-danger-color-2\": \"$color-danger-600\",\r\n  \"border-danger-color-3\": \"$color-danger-700\",\r\n  \"border-danger-color-4\": \"$color-danger-800\",\r\n  \"border-danger-color-5\": \"$color-danger-900\",\r\n\r\n  \"text-basic-color\": \"$color-basic-800\",\r\n  \"text-alternate-color\": \"$color-basic-100\",\r\n  \"text-control-color\": \"$color-basic-100\",\r\n  \"text-disabled-color\": \"$color-basic-transparent-600\",\r\n  \"text-hint-color\": \"$color-basic-600\",\r\n\r\n  \"text-primary-color\": \"$color-primary-default\",\r\n  \"text-primary-focus-color\": \"$color-primary-focus\",\r\n  \"text-primary-hover-color\": \"$color-primary-hover\",\r\n  \"text-primary-active-color\": \"$color-primary-active\",\r\n  \"text-primary-disabled-color\": \"$color-primary-400\",\r\n\r\n  \"text-success-color\": \"$color-success-default\",\r\n  \"text-success-focus-color\": \"$color-success-focus\",\r\n  \"text-success-hover-color\": \"$color-success-hover\",\r\n  \"text-success-active-color\": \"$color-success-active\",\r\n  \"text-success-disabled-color\": \"$color-success-400\",\r\n\r\n  \"text-info-color\": \"$color-info-default\",\r\n  \"text-info-focus-color\": \"$color-info-focus\",\r\n  \"text-info-hover-color\": \"$color-info-hover\",\r\n  \"text-info-active-color\": \"$color-info-active\",\r\n  \"text-info-disabled-color\": \"$color-info-400\",\r\n\r\n  \"text-warning-color\": \"$color-warning-default\",\r\n  \"text-warning-focus-color\": \"$color-warning-focus\",\r\n  \"text-warning-hover-color\": \"$color-warning-hover\",\r\n  \"text-warning-active-color\": \"$color-warning-active\",\r\n  \"text-warning-disabled-color\": \"$color-warning-400\",\r\n\r\n  \"text-danger-color\": \"$color-danger-default\",\r\n  \"text-danger-focus-color\": \"$color-danger-focus\",\r\n  \"text-danger-hover-color\": \"$color-danger-hover\",\r\n  \"text-danger-active-color\": \"$color-danger-active\",\r\n  \"text-danger-disabled-color\": \"$color-danger-400\",\r\n\r\n  \"outline-color\": \"$color-basic-transparent-200\",\r\n}\r\n","import { evaDark } from \"./eva-dark-v1\"\r\nimport { evaLight } from \"./eva-light-v1\"\r\n\r\nexport const themeLight = {\r\n  /**\r\n   * The colors is available to use, but prefer using the name.\r\n   */\r\n  ...evaLight,\r\n  hichPurple: evaLight[\"color-secondary-500\"],\r\n  maturePurple: evaLight[\"color-secondary-800\"],\r\n  grey900: evaLight[\"color-basic-900\"],\r\n  grey600: evaLight[\"color-basic-600\"],\r\n  grey500: evaLight[\"color-basic-500\"],\r\n  pitchWhite: evaLight[\"color-basic-100\"],\r\n  /**\r\n   * A helper for making something see-thru. Use sparingly as many layers of transparency\r\n   * can cause older Android devices to slow down due to the excessive compositing required\r\n   * by their under-powered GPUs.\r\n   */\r\n  transparent: \"rgba(0, 0, 0, 0)\",\r\n  /**\r\n   * The main tinting colors.\r\n   */\r\n  primary: evaLight[\"color-primary-500\"],\r\n  /**\r\n   * The main tinting color, but darker.\r\n   */\r\n  primaryDarker: evaLight[\"color-primary-700\"],\r\n  /**\r\n   * The sceondary tinting colors.\r\n   */\r\n  accent: evaLight[\"color-info-500\"],\r\n  /**\r\n   * The secondary tinting colors, but darker.\r\n   */\r\n  accentDarker: evaLight[\"color-info-700\"],\r\n  /**\r\n   * The screen background.\r\n   */\r\n  background: evaLight[\"color-basic-100\"],\r\n  /**\r\n   * The `dark` screen background.\r\n   */\r\n  background01: evaLight[\"color-basic-1000\"],\r\n  /**\r\n   * The screen surface. Usually used for modal screen\r\n   */\r\n  surface: evaLight[\"color-basic-300\"],\r\n  /**\r\n   * The `dark` screen surface.\r\n   */\r\n  surface01: evaLight[\"color-basic-800\"],\r\n  /**\r\n   * A subtle color used for borders and lines.\r\n   */\r\n  line: evaLight[\"color-basic-400\"],\r\n  /**\r\n   * The default color of text in many components.\r\n   */\r\n  text: evaLight[\"color-basic-1100\"],\r\n  /**\r\n   * The '01' color of text in many dark-background components.\r\n   */\r\n  text01: evaLight[\"color-basic-300\"],\r\n  /**\r\n   * Secondary information.\r\n   */\r\n  dim: evaLight[\"color-basic-500\"],\r\n  /**\r\n   * Error messages and icons.\r\n   */\r\n  errorRed: evaDark[\"color-danger-500\"],\r\n  /**\r\n   * Warning color\r\n   */\r\n  hazardYellow: evaDark[\"color-warning-500\"],\r\n  /**\r\n   * Info color\r\n   */\r\n  infoBlue: evaDark[\"color-info-500\"],\r\n  /**\r\n   * Success color\r\n   */\r\n  awakenVolt: evaDark[\"color-success-400\"],\r\n\r\n  /**\r\n   * Storybook background for Text stories, or any stories where\r\n   * the text color is colors.text, which is white by default, and does not show\r\n   * in Stories against the default white background\r\n   */\r\n  storybookDarkBg: evaLight[\"color-basic-1000\"],\r\n\r\n  /**\r\n   * Storybook text color for stories that display Text components against the\r\n   * white background\r\n   */\r\n  storybookTextColor: evaLight[\"color-basic-1000\"],\r\n}\r\n\r\nexport const themeDark = {\r\n  /**\r\n   * The colors is available to use, but prefer using the name.\r\n   */\r\n  ...evaDark,\r\n  hichPurple: evaDark[\"color-secondary-400\"],\r\n  maturePurple: evaDark[\"color-secondary-700\"],\r\n  grey900: evaDark[\"color-basic-900\"],\r\n  grey600: evaDark[\"color-basic-600\"],\r\n  grey500: evaDark[\"color-basic-500\"],\r\n  pitchWhite: evaDark[\"color-basic-100\"],\r\n  /**\r\n   * A helper for making something see-thru. Use sparingly as many layers of transparency\r\n   * can cause older Android devices to slow down due to the excessive compositing required\r\n   * by their under-powered GPUs.\r\n   */\r\n  transparent: \"rgba(0, 0, 0, 0)\",\r\n  /**\r\n   * The main tinting colors.\r\n   */\r\n  primary: evaDark[\"color-primary-500\"],\r\n  /**\r\n   * The main tinting color, but darker.\r\n   */\r\n  primaryDarker: evaDark[\"color-primary-700\"],\r\n  /**\r\n   * The sceondary tinting colors.\r\n   */\r\n  accent: evaDark[\"color-info-500\"],\r\n  /**\r\n   * The secondary tinting colors, but darker.\r\n   */\r\n  accentDarker: evaDark[\"color-info-700\"],\r\n  /**\r\n   * The screen background.\r\n   */\r\n  background: evaDark[\"color-basic-1100\"],\r\n  /**\r\n   * The `dark` screen background.\r\n   */\r\n  background01: evaDark[\"color-basic-1100\"],\r\n  /**\r\n   * The screen surface. Usually used for modal screen\r\n   */\r\n  surface: evaDark[\"color-basic-900\"],\r\n  /**\r\n   * The `dark` screen surface.\r\n   */\r\n  surface01: evaDark[\"color-basic-900\"],\r\n  /**\r\n   * A subtle color used for borders and lines.\r\n   */\r\n  line: evaDark[\"color-basic-800\"],\r\n  /**\r\n   * The default color of text in many components.\r\n   */\r\n  text: evaDark[\"color-basic-100\"],\r\n  /**\r\n   * The '01' color of text in many dark-background components.\r\n   */\r\n  text01: evaDark[\"color-basic-100\"],\r\n  /**\r\n   * Secondary information.\r\n   */\r\n  dim: evaDark[\"color-basic-700\"],\r\n  /**\r\n   * Error messages and icons.\r\n   */\r\n  errorRed: evaDark[\"color-danger-500\"],\r\n  /**\r\n   * Warning color\r\n   */\r\n  hazardYellow: evaDark[\"color-warning-500\"],\r\n  /**\r\n   * Info color\r\n   */\r\n  infoBlue: evaDark[\"color-info-500\"],\r\n  /**\r\n   * Success color\r\n   */\r\n  awakenVolt: evaDark[\"color-success-400\"],\r\n  /**\r\n   * Storybook background for Text stories, or any stories where\r\n   * the text color is colors.text, which is white by default, and does not show\r\n   * in Stories against the default white background\r\n   */\r\n  storybookDarkBg: evaDark[\"color-basic-1000\"],\r\n\r\n  /**\r\n   * Storybook text color for stories that display Text components against the\r\n   * white background\r\n   */\r\n  storybookTextColor: evaDark[\"color-basic-1000\"],\r\n}\r\n/**\r\n * Roles for colors. Prefer using these over the colors.  It makes it easier\r\n * to change things.\r\n *\r\n * The only roles we need to place in here are the ones that span through the app.\r\n *\r\n * If you have a specific use-case, like a spinner colors.  It makes more sense to\r\n * put that in the <Spinner /> component.\r\n */\r\nexport const colors = themeLight\r\n","import { scale } from \"react-native-size-matters\"\r\nimport { IS_ANDROID } from \"utils/helpers\"\r\n\r\nexport const evaConfig = {\r\n  $schema: \"./node_modules/@eva-design/dss/schema/schema.json\",\r\n  version: 1.0,\r\n  strict: {\r\n    \"text-font-family\": \"System\",\r\n    \"montserrat-bold\": \"Montserrat-Bold\",\r\n\r\n    \"text-heading-1-font-size\": scale(36),\r\n    \"text-heading-1-font-weight\": \"800\",\r\n    \"text-heading-1-font-family\": \"$text-font-family\",\r\n\r\n    \"text-heading-2-font-size\": scale(32),\r\n    \"text-heading-2-font-weight\": \"800\",\r\n    \"text-heading-2-font-family\": \"$text-font-family\",\r\n\r\n    \"text-heading-3-font-size\": scale(30),\r\n    \"text-heading-3-font-weight\": \"800\",\r\n    \"text-heading-3-font-family\": \"$text-font-family\",\r\n\r\n    \"text-heading-4-font-size\": scale(26),\r\n    \"text-heading-4-font-weight\": \"800\",\r\n    \"text-heading-4-font-family\": \"$text-font-family\",\r\n\r\n    \"text-heading-5-font-size\": scale(22),\r\n    \"text-heading-5-font-weight\": \"800\",\r\n    \"text-heading-5-font-family\": \"$text-font-family\",\r\n\r\n    \"text-heading-6-font-size\": scale(18),\r\n    \"text-heading-6-font-weight\": \"800\",\r\n    \"text-heading-6-font-family\": \"$text-font-family\",\r\n\r\n    \"text-subtitle-1-font-size\": scale(15),\r\n    \"text-subtitle-1-font-weight\": \"600\",\r\n    \"text-subtitle-1-font-family\": \"$text-font-family\",\r\n\r\n    \"text-subtitle-2-font-size\": scale(13),\r\n    \"text-subtitle-2-font-weight\": \"600\",\r\n    \"text-subtitle-2-font-family\": \"$text-font-family\",\r\n\r\n    \"text-paragraph-1-font-size\": scale(15),\r\n    \"text-paragraph-1-font-weight\": \"400\",\r\n    \"text-paragraph-1-font-family\": \"$text-font-family\",\r\n\r\n    \"text-paragraph-2-font-size\": scale(13),\r\n    \"text-paragraph-2-font-weight\": \"400\",\r\n    \"text-paragraph-2-font-family\": \"$text-font-family\",\r\n\r\n    \"text-caption-1-font-size\": scale(12),\r\n    \"text-caption-1-font-weight\": \"400\",\r\n    \"text-caption-1-font-family\": \"$text-font-family\",\r\n\r\n    \"text-caption-2-font-size\": scale(12),\r\n    \"text-caption-2-font-weight\": \"600\",\r\n    \"text-caption-2-font-family\": \"$text-font-family\",\r\n\r\n    \"text-label-font-size\": scale(12),\r\n    \"text-label-font-weight\": \"800\",\r\n    \"text-label-font-family\": \"$text-font-family\",\r\n\r\n    \"size-tiny\": scale(24),\r\n    \"size-small\": scale(32),\r\n    \"size-medium\": scale(40),\r\n    \"size-large\": scale(48),\r\n    \"size-giant\": scale(56),\r\n\r\n    \"border-radius\": scale(4),\r\n    \"border-width\": scale(1),\r\n  },\r\n  components: {\r\n    Avatar: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          roundCoefficient: {\r\n            type: \"number\",\r\n          },\r\n          width: {\r\n            type: \"number\",\r\n          },\r\n          height: {\r\n            type: \"number\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {\r\n          shape: {\r\n            round: {\r\n              default: true,\r\n            },\r\n            rounded: {\r\n              default: false,\r\n            },\r\n            square: {\r\n              default: false,\r\n            },\r\n          },\r\n          size: {\r\n            tiny: {\r\n              default: false,\r\n            },\r\n            small: {\r\n              default: false,\r\n            },\r\n            medium: {\r\n              default: false,\r\n            },\r\n            large: {\r\n              default: true,\r\n            },\r\n            giant: {\r\n              default: false,\r\n            },\r\n          },\r\n        },\r\n        states: {},\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {},\r\n          variantGroups: {\r\n            shape: {\r\n              round: {\r\n                roundCoefficient: 0.5,\r\n              },\r\n              rounded: {\r\n                roundCoefficient: 0.3,\r\n              },\r\n              square: {\r\n                roundCoefficient: 0.0,\r\n              },\r\n            },\r\n            size: {\r\n              tiny: {\r\n                width: \"size-tiny\",\r\n                height: \"size-tiny\",\r\n              },\r\n              small: {\r\n                width: \"size-small\",\r\n                height: \"size-small\",\r\n              },\r\n              medium: {\r\n                width: \"size-medium\",\r\n                height: \"size-medium\",\r\n              },\r\n              large: {\r\n                width: \"size-large\",\r\n                height: \"size-large\",\r\n              },\r\n              giant: {\r\n                width: \"size-giant\",\r\n                height: \"size-giant\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    BottomNavigationTab: {\r\n      meta: {\r\n        scope: \"mobile\",\r\n        parameters: {\r\n          paddingHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          paddingVertical: {\r\n            type: \"number\",\r\n          },\r\n          iconMarginVertical: {\r\n            type: \"number\",\r\n          },\r\n          iconWidth: {\r\n            type: \"number\",\r\n          },\r\n          iconHeight: {\r\n            type: \"number\",\r\n          },\r\n          iconTintColor: {\r\n            type: \"string\",\r\n          },\r\n          textMarginVertical: {\r\n            type: \"number\",\r\n          },\r\n          textColor: {\r\n            type: \"string\",\r\n          },\r\n          textFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          textFontSize: {\r\n            type: \"number\",\r\n          },\r\n          textFontWeight: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {},\r\n        states: {\r\n          selected: {\r\n            default: false,\r\n            priority: 0,\r\n            scope: \"mobile\",\r\n          },\r\n          hover: {\r\n            default: false,\r\n            priority: 1,\r\n            scope: \"mobile\",\r\n          },\r\n          focused: {\r\n            default: false,\r\n            priority: 2,\r\n            scope: \"mobile\",\r\n          },\r\n        },\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            textMarginVertical: 2,\r\n            textFontSize: \"text-caption-2-font-size\",\r\n            textFontWeight: \"text-caption-2-font-weight\",\r\n            textFontFamily: \"text-caption-2-font-family\",\r\n            textColor: \"text-hint-color\",\r\n            iconWidth: 24,\r\n            iconHeight: 24,\r\n            iconMarginVertical: 2,\r\n            iconTintColor: \"text-hint-color\",\r\n            state: {\r\n              hover: {\r\n                textColor: \"text-primary-hover-color\",\r\n                iconTintColor: \"text-primary-hover-color\",\r\n              },\r\n              selected: {\r\n                textColor: \"text-primary-color\",\r\n                iconTintColor: \"text-primary-color\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    BottomNavigation: {\r\n      meta: {\r\n        scope: \"mobile\",\r\n        parameters: {\r\n          minHeight: {\r\n            type: \"number\",\r\n          },\r\n          paddingVertical: {\r\n            type: \"number\",\r\n          },\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          borderTopColor: {\r\n            type: \"string\",\r\n          },\r\n          borderTopWidth: {\r\n            type: \"number\",\r\n          },\r\n          indicatorHeight: {\r\n            type: \"number\",\r\n          },\r\n          indicatorBackgroundColor: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n          noIndicator: {\r\n            default: false,\r\n          },\r\n        },\r\n        variantGroups: {},\r\n        states: {},\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            minHeight: 56,\r\n            paddingVertical: 4,\r\n            backgroundColor: \"background-basic-color-1\",\r\n            indicatorHeight: 4,\r\n            indicatorBackgroundColor: \"color-primary-default\",\r\n          },\r\n        },\r\n        noIndicator: {\r\n          mapping: {\r\n            indicatorHeight: 0,\r\n            indicatorBackgroundColor: \"transparent\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    Button: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          minWidth: {\r\n            type: \"number\",\r\n          },\r\n          minHeight: {\r\n            type: \"number\",\r\n          },\r\n          paddingHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          paddingVertical: {\r\n            type: \"number\",\r\n          },\r\n          borderRadius: {\r\n            type: \"number\",\r\n          },\r\n          borderColor: {\r\n            type: \"string\",\r\n          },\r\n          borderWidth: {\r\n            type: \"number\",\r\n          },\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          textMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          textFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          textFontSize: {\r\n            type: \"number\",\r\n          },\r\n          textFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          textColor: {\r\n            type: \"string\",\r\n          },\r\n          iconWidth: {\r\n            type: \"number\",\r\n          },\r\n          iconHeight: {\r\n            type: \"number\",\r\n          },\r\n          iconTintColor: {\r\n            type: \"string\",\r\n          },\r\n          iconMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n        },\r\n        appearances: {\r\n          filled: {\r\n            default: true,\r\n          },\r\n          outline: {\r\n            default: false,\r\n          },\r\n          ghost: {\r\n            default: false,\r\n          },\r\n        },\r\n        variantGroups: {\r\n          status: {\r\n            basic: {\r\n              default: false,\r\n            },\r\n            primary: {\r\n              default: true,\r\n            },\r\n            success: {\r\n              default: false,\r\n            },\r\n            info: {\r\n              default: false,\r\n            },\r\n            warning: {\r\n              default: false,\r\n            },\r\n            danger: {\r\n              default: false,\r\n            },\r\n            control: {\r\n              default: false,\r\n            },\r\n          },\r\n          size: {\r\n            tiny: {\r\n              default: false,\r\n            },\r\n            small: {\r\n              default: false,\r\n            },\r\n            medium: {\r\n              default: false,\r\n            },\r\n            large: {\r\n              default: true,\r\n            },\r\n            giant: {\r\n              default: false,\r\n            },\r\n          },\r\n        },\r\n        states: {\r\n          hover: {\r\n            default: false,\r\n            priority: 0,\r\n            scope: \"all\",\r\n          },\r\n          disabled: {\r\n            default: false,\r\n            priority: 1,\r\n            scope: \"all\",\r\n          },\r\n          active: {\r\n            default: false,\r\n            priority: 2,\r\n            scope: \"all\",\r\n          },\r\n          focused: {\r\n            default: false,\r\n            priority: 3,\r\n            scope: \"mobile\",\r\n          },\r\n        },\r\n      },\r\n      appearances: {\r\n        filled: {\r\n          mapping: {\r\n            textFontFamily: \"text-font-family\",\r\n            iconMarginHorizontal: 4,\r\n          },\r\n          variantGroups: {\r\n            status: {\r\n              basic: {\r\n                borderColor: \"color-basic-default-border\",\r\n                backgroundColor: \"color-basic-default\",\r\n                textColor: \"color-basic-800\",\r\n                iconTintColor: \"color-basic-800\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-basic-focus-border\",\r\n                    backgroundColor: \"color-basic-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-basic-hover-border\",\r\n                    backgroundColor: \"color-basic-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-basic-active-border\",\r\n                    backgroundColor: \"color-basic-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-basic-disabled-border\",\r\n                    backgroundColor: \"color-basic-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              primary: {\r\n                borderColor: \"color-primary-default-border\",\r\n                backgroundColor: \"color-primary-default\",\r\n                textColor: \"text-control-color\",\r\n                iconTintColor: \"text-control-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-primary-focus-border\",\r\n                    backgroundColor: \"color-primary-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-primary-hover-border\",\r\n                    backgroundColor: \"color-primary-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-primary-active-border\",\r\n                    backgroundColor: \"color-primary-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-primary-disabled-border\",\r\n                    backgroundColor: \"color-primary-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              success: {\r\n                borderColor: \"color-success-default-border\",\r\n                backgroundColor: \"color-success-default\",\r\n                textColor: \"text-control-color\",\r\n                iconTintColor: \"text-control-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-success-focus-border\",\r\n                    backgroundColor: \"color-success-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-success-hover-border\",\r\n                    backgroundColor: \"color-success-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-success-active-border\",\r\n                    backgroundColor: \"color-success-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-success-disabled-border\",\r\n                    backgroundColor: \"color-success-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              info: {\r\n                borderColor: \"color-info-default-border\",\r\n                backgroundColor: \"color-info-default\",\r\n                textColor: \"text-control-color\",\r\n                iconTintColor: \"text-control-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-info-focus-border\",\r\n                    backgroundColor: \"color-info-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-info-hover-border\",\r\n                    backgroundColor: \"color-info-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-info-active-border\",\r\n                    backgroundColor: \"color-info-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-info-disabled-border\",\r\n                    backgroundColor: \"color-info-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              warning: {\r\n                borderColor: \"color-warning-default-border\",\r\n                backgroundColor: \"color-warning-default\",\r\n                textColor: \"text-control-color\",\r\n                iconTintColor: \"text-control-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-warning-focus-border\",\r\n                    backgroundColor: \"color-warning-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-warning-hover-border\",\r\n                    backgroundColor: \"color-warning-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-warning-active-border\",\r\n                    backgroundColor: \"color-warning-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-warning-disabled-border\",\r\n                    backgroundColor: \"color-warning-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              danger: {\r\n                borderColor: \"color-danger-default-border\",\r\n                backgroundColor: \"color-danger-default\",\r\n                textColor: \"text-control-color\",\r\n                iconTintColor: \"text-control-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-danger-focus-border\",\r\n                    backgroundColor: \"color-danger-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-danger-hover-border\",\r\n                    backgroundColor: \"color-danger-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-danger-active-border\",\r\n                    backgroundColor: \"color-danger-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-danger-disabled-border\",\r\n                    backgroundColor: \"color-danger-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              control: {\r\n                borderColor: \"color-control-default-border\",\r\n                backgroundColor: \"color-control-default\",\r\n                textColor: \"color-basic-800\",\r\n                iconTintColor: \"color-basic-800\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-control-focus-border\",\r\n                    backgroundColor: \"color-control-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-control-hover-border\",\r\n                    backgroundColor: \"color-control-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-control-active-border\",\r\n                    backgroundColor: \"color-control-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-control-disabled-border\",\r\n                    backgroundColor: \"color-control-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n            },\r\n            size: {\r\n              tiny: {\r\n                minWidth: \"size-tiny\",\r\n                minHeight: \"size-tiny\",\r\n                borderRadius: \"border-radius\",\r\n                borderWidth: \"border-width\",\r\n                paddingHorizontal: 6,\r\n                paddingVertical: 6,\r\n                textMarginHorizontal: 6,\r\n                textFontSize: 10,\r\n                textFontWeight: \"bold\",\r\n                iconWidth: 12,\r\n                iconHeight: 12,\r\n                iconMarginHorizontal: 6,\r\n              },\r\n              small: {\r\n                minWidth: \"size-small\",\r\n                minHeight: \"size-small\",\r\n                borderRadius: \"border-radius\",\r\n                borderWidth: \"border-width\",\r\n                paddingHorizontal: 8,\r\n                paddingVertical: 8,\r\n                textMarginHorizontal: 8,\r\n                textFontSize: 12,\r\n                textFontWeight: \"bold\",\r\n                iconWidth: 16,\r\n                iconHeight: 16,\r\n                iconMarginHorizontal: 8,\r\n              },\r\n              medium: {\r\n                minWidth: \"size-medium\",\r\n                minHeight: \"size-medium\",\r\n                borderRadius: \"border-radius\",\r\n                borderWidth: \"border-width\",\r\n                paddingHorizontal: 10,\r\n                paddingVertical: 12,\r\n                textMarginHorizontal: 10,\r\n                textFontSize: 14,\r\n                textFontWeight: \"bold\",\r\n                iconWidth: 20,\r\n                iconHeight: 20,\r\n                iconMarginHorizontal: 10,\r\n              },\r\n              large: {\r\n                minWidth: \"size-large\",\r\n                minHeight: \"size-large\",\r\n                borderRadius: \"border-radius\",\r\n                borderWidth: \"border-width\",\r\n                paddingHorizontal: 10,\r\n                paddingVertical: 14,\r\n                textMarginHorizontal: 10,\r\n                textFontSize: 16,\r\n                textFontWeight: \"bold\",\r\n                iconWidth: 24,\r\n                iconHeight: 24,\r\n                iconMarginHorizontal: 10,\r\n              },\r\n              giant: {\r\n                minWidth: \"size-giant\",\r\n                minHeight: \"size-giant\",\r\n                borderRadius: \"border-radius\",\r\n                borderWidth: \"border-width\",\r\n                paddingHorizontal: 12,\r\n                paddingVertical: 16,\r\n                textMarginHorizontal: 12,\r\n                textFontSize: 18,\r\n                textFontWeight: \"bold\",\r\n                iconWidth: 24,\r\n                iconHeight: 24,\r\n                iconMarginHorizontal: 12,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        outline: {\r\n          mapping: {},\r\n          variantGroups: {\r\n            status: {\r\n              basic: {\r\n                borderColor: \"color-basic-transparent-default-border\",\r\n                backgroundColor: \"color-basic-transparent-default\",\r\n                textColor: \"text-hint-color\",\r\n                iconTintColor: \"text-hint-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-basic-transparent-focus-border\",\r\n                    backgroundColor: \"color-basic-transparent-focus\",\r\n                    textColor: \"text-hint-color\",\r\n                    iconTintColor: \"text-hint-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-basic-transparent-hover-border\",\r\n                    backgroundColor: \"color-basic-transparent-hover\",\r\n                    textColor: \"text-hint-color\",\r\n                    iconTintColor: \"text-hint-color\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-basic-transparent-active-border\",\r\n                    backgroundColor: \"color-basic-transparent-active\",\r\n                    textColor: \"text-hint-color\",\r\n                    iconTintColor: \"text-hint-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-basic-transparent-disabled-border\",\r\n                    backgroundColor: \"color-basic-transparent-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              primary: {\r\n                borderColor: \"color-primary-transparent-default-border\",\r\n                backgroundColor: \"color-primary-transparent-default\",\r\n                textColor: \"text-primary-color\",\r\n                iconTintColor: \"text-primary-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-primary-transparent-focus-border\",\r\n                    backgroundColor: \"color-primary-transparent-focus\",\r\n                    textColor: \"text-primary-color\",\r\n                    iconTintColor: \"text-primary-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-primary-transparent-hover-border\",\r\n                    backgroundColor: \"color-primary-transparent-hover\",\r\n                    textColor: \"text-primary-color\",\r\n                    iconTintColor: \"text-primary-color\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-primary-transparent-active-border\",\r\n                    backgroundColor: \"color-primary-transparent-active\",\r\n                    textColor: \"text-primary-color\",\r\n                    iconTintColor: \"text-primary-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-primary-transparent-disabled-border\",\r\n                    backgroundColor: \"color-primary-transparent-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              success: {\r\n                borderColor: \"color-success-transparent-default-border\",\r\n                backgroundColor: \"color-success-transparent-default\",\r\n                textColor: \"text-success-color\",\r\n                iconTintColor: \"text-success-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-success-transparent-focus-border\",\r\n                    backgroundColor: \"color-success-transparent-focus\",\r\n                    textColor: \"text-success-color\",\r\n                    iconTintColor: \"text-success-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-success-transparent-hover-border\",\r\n                    backgroundColor: \"color-success-transparent-hover\",\r\n                    textColor: \"text-success-color\",\r\n                    iconTintColor: \"text-success-color\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-success-transparent-active-border\",\r\n                    backgroundColor: \"color-success-transparent-active\",\r\n                    textColor: \"text-success-color\",\r\n                    iconTintColor: \"text-success-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-success-transparent-disabled-border\",\r\n                    backgroundColor: \"color-success-transparent-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              info: {\r\n                borderColor: \"color-info-transparent-default-border\",\r\n                backgroundColor: \"color-info-transparent-default\",\r\n                textColor: \"text-info-color\",\r\n                iconTintColor: \"text-info-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-info-transparent-focus-border\",\r\n                    backgroundColor: \"color-info-transparent-focus\",\r\n                    textColor: \"text-info-color\",\r\n                    iconTintColor: \"text-info-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-info-transparent-hover-border\",\r\n                    backgroundColor: \"color-info-transparent-hover\",\r\n                    textColor: \"text-info-color\",\r\n                    iconTintColor: \"text-info-color\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-info-transparent-active-border\",\r\n                    backgroundColor: \"color-info-transparent-active\",\r\n                    textColor: \"text-info-color\",\r\n                    iconTintColor: \"text-info-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-info-transparent-disabled-border\",\r\n                    backgroundColor: \"color-info-transparent-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              warning: {\r\n                borderColor: \"color-warning-transparent-default-border\",\r\n                backgroundColor: \"color-warning-transparent-default\",\r\n                textColor: \"text-warning-color\",\r\n                iconTintColor: \"text-warning-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-warning-transparent-focus-border\",\r\n                    backgroundColor: \"color-warning-transparent-focus\",\r\n                    textColor: \"text-warning-color\",\r\n                    iconTintColor: \"text-warning-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-warning-transparent-hover-border\",\r\n                    backgroundColor: \"color-warning-transparent-hover\",\r\n                    textColor: \"text-warning-color\",\r\n                    iconTintColor: \"text-warning-color\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-warning-transparent-active-border\",\r\n                    backgroundColor: \"color-warning-transparent-active\",\r\n                    textColor: \"text-warning-color\",\r\n                    iconTintColor: \"text-warning-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-warning-transparent-disabled-border\",\r\n                    backgroundColor: \"color-warning-transparent-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              danger: {\r\n                borderColor: \"color-danger-transparent-default-border\",\r\n                backgroundColor: \"color-danger-transparent-default\",\r\n                textColor: \"text-danger-color\",\r\n                iconTintColor: \"text-danger-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-danger-transparent-focus-border\",\r\n                    backgroundColor: \"color-danger-transparent-focus\",\r\n                    textColor: \"text-danger-color\",\r\n                    iconTintColor: \"text-danger-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-danger-transparent-hover-border\",\r\n                    backgroundColor: \"color-danger-transparent-hover\",\r\n                    textColor: \"text-danger-color\",\r\n                    iconTintColor: \"text-danger-color\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-danger-transparent-active-border\",\r\n                    backgroundColor: \"color-danger-transparent-active\",\r\n                    textColor: \"text-danger-color\",\r\n                    iconTintColor: \"text-danger-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-danger-transparent-disabled-border\",\r\n                    backgroundColor: \"color-danger-transparent-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              control: {\r\n                borderColor: \"color-control-transparent-default-border\",\r\n                backgroundColor: \"color-control-transparent-default\",\r\n                textColor: \"text-control-color\",\r\n                iconTintColor: \"text-control-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-control-transparent-focus-border\",\r\n                    backgroundColor: \"color-control-transparent-focus\",\r\n                    textColor: \"text-control-color\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-control-transparent-hover-border\",\r\n                    backgroundColor: \"color-control-transparent-hover\",\r\n                    textColor: \"text-control-color\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-control-transparent-active-border\",\r\n                    backgroundColor: \"color-control-transparent-active\",\r\n                    textColor: \"text-control-color\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-control-transparent-disabled-border\",\r\n                    backgroundColor: \"color-control-transparent-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        ghost: {\r\n          mapping: {},\r\n          variantGroups: {\r\n            status: {\r\n              basic: {\r\n                borderColor: \"transparent\",\r\n                backgroundColor: \"transparent\",\r\n                textColor: \"text-hint-color\",\r\n                iconTintColor: \"text-hint-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-basic-transparent-500\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-hint-color\",\r\n                    iconTintColor: \"text-hint-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-100\",\r\n                    textColor: \"text-hint-color\",\r\n                    iconTintColor: \"text-hint-color\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-hint-color\",\r\n                    iconTintColor: \"text-hint-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              primary: {\r\n                borderColor: \"transparent\",\r\n                backgroundColor: \"transparent\",\r\n                textColor: \"text-primary-color\",\r\n                iconTintColor: \"text-primary-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-basic-transparent-500\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-primary-color\",\r\n                    iconTintColor: \"text-primary-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-100\",\r\n                    textColor: \"text-primary-color\",\r\n                    iconTintColor: \"text-primary-color\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-primary-color\",\r\n                    iconTintColor: \"text-primary-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              success: {\r\n                borderColor: \"transparent\",\r\n                backgroundColor: \"transparent\",\r\n                textColor: \"text-success-color\",\r\n                iconTintColor: \"text-success-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-basic-transparent-500\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-success-color\",\r\n                    iconTintColor: \"text-success-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-100\",\r\n                    textColor: \"text-success-color\",\r\n                    iconTintColor: \"text-success-color\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-success-color\",\r\n                    iconTintColor: \"text-success-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              info: {\r\n                borderColor: \"transparent\",\r\n                backgroundColor: \"transparent\",\r\n                textColor: \"text-info-color\",\r\n                iconTintColor: \"text-info-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-basic-transparent-500\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-info-color\",\r\n                    iconTintColor: \"text-info-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-100\",\r\n                    textColor: \"text-info-color\",\r\n                    iconTintColor: \"text-info-color\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-info-color\",\r\n                    iconTintColor: \"text-info-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              warning: {\r\n                borderColor: \"transparent\",\r\n                backgroundColor: \"transparent\",\r\n                textColor: \"text-warning-color\",\r\n                iconTintColor: \"text-warning-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-basic-transparent-500\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-info-color\",\r\n                    iconTintColor: \"text-info-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-100\",\r\n                    textColor: \"text-warning-color\",\r\n                    iconTintColor: \"text-warning-color\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-warning-color\",\r\n                    iconTintColor: \"text-warning-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              danger: {\r\n                borderColor: \"transparent\",\r\n                backgroundColor: \"transparent\",\r\n                textColor: \"text-danger-color\",\r\n                iconTintColor: \"text-danger-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-basic-transparent-500\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-danger-color\",\r\n                    iconTintColor: \"text-danger-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-100\",\r\n                    textColor: \"text-danger-color\",\r\n                    iconTintColor: \"text-danger-color\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-danger-color\",\r\n                    iconTintColor: \"text-danger-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              control: {\r\n                borderColor: \"transparent\",\r\n                backgroundColor: \"transparent\",\r\n                textColor: \"text-control-color\",\r\n                iconTintColor: \"text-control-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-basic-transparent-500\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-control-color\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-100\",\r\n                    textColor: \"text-control-color\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-control-color\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"transparent\",\r\n                    backgroundColor: \"color-basic-transparent-200\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    ButtonGroup: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          borderRadius: {\r\n            type: \"number\",\r\n          },\r\n          borderWidth: {\r\n            type: \"number\",\r\n          },\r\n          borderColor: {\r\n            type: \"string\",\r\n          },\r\n          dividerBackgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          dividerWidth: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          filled: {\r\n            default: true,\r\n          },\r\n          outline: {\r\n            default: false,\r\n          },\r\n        },\r\n        variantGroups: {\r\n          status: {\r\n            basic: {\r\n              default: false,\r\n            },\r\n            primary: {\r\n              default: true,\r\n            },\r\n            success: {\r\n              default: false,\r\n            },\r\n            info: {\r\n              default: false,\r\n            },\r\n            warning: {\r\n              default: false,\r\n            },\r\n            danger: {\r\n              default: false,\r\n            },\r\n            control: {\r\n              default: false,\r\n            },\r\n          },\r\n          size: {\r\n            tiny: {\r\n              default: false,\r\n            },\r\n            small: {\r\n              default: false,\r\n            },\r\n            medium: {\r\n              default: false,\r\n            },\r\n            large: {\r\n              default: true,\r\n            },\r\n            giant: {\r\n              default: false,\r\n            },\r\n          },\r\n        },\r\n        states: {},\r\n      },\r\n      appearances: {\r\n        filled: {\r\n          mapping: {\r\n            borderColor: \"transparent\",\r\n            dividerWidth: 1,\r\n          },\r\n          variantGroups: {\r\n            size: {\r\n              tiny: {\r\n                borderRadius: \"border-radius\",\r\n                borderWidth: \"border-width\",\r\n              },\r\n              small: {\r\n                borderRadius: \"border-radius\",\r\n                borderWidth: \"border-width\",\r\n              },\r\n              medium: {\r\n                borderRadius: \"border-radius\",\r\n                borderWidth: \"border-width\",\r\n              },\r\n              large: {\r\n                borderRadius: \"border-radius\",\r\n                borderWidth: \"border-width\",\r\n              },\r\n              giant: {\r\n                borderRadius: \"border-radius\",\r\n                borderWidth: \"border-width\",\r\n              },\r\n            },\r\n            status: {\r\n              basic: {\r\n                dividerBackgroundColor: \"border-basic-color-2\",\r\n              },\r\n              primary: {\r\n                dividerBackgroundColor: \"border-primary-color-2\",\r\n              },\r\n              success: {\r\n                dividerBackgroundColor: \"border-success-color-2\",\r\n              },\r\n              info: {\r\n                dividerBackgroundColor: \"border-info-color-2\",\r\n              },\r\n              warning: {\r\n                dividerBackgroundColor: \"border-warning-color-2\",\r\n              },\r\n              danger: {\r\n                dividerBackgroundColor: \"border-danger-color-2\",\r\n              },\r\n              control: {\r\n                dividerBackgroundColor: \"color-basic-200\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n        outline: {\r\n          mapping: {},\r\n          variantGroups: {\r\n            status: {\r\n              basic: {\r\n                borderColor: \"color-basic-default-border\",\r\n                dividerBackgroundColor: \"color-basic-default\",\r\n              },\r\n              primary: {\r\n                borderColor: \"color-primary-default-border\",\r\n                dividerBackgroundColor: \"color-primary-default\",\r\n              },\r\n              success: {\r\n                borderColor: \"color-success-default-border\",\r\n                dividerBackgroundColor: \"color-success-default\",\r\n              },\r\n              info: {\r\n                borderColor: \"color-info-default-border\",\r\n                dividerBackgroundColor: \"color-info-default\",\r\n              },\r\n              warning: {\r\n                borderColor: \"color-warning-default-border\",\r\n                dividerBackgroundColor: \"color-warning-default\",\r\n              },\r\n              danger: {\r\n                borderColor: \"color-danger-default-border\",\r\n                dividerBackgroundColor: \"color-danger-default\",\r\n              },\r\n              control: {\r\n                borderColor: \"color-control-default-border\",\r\n                dividerBackgroundColor: \"color-control-default\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    Card: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          borderRadius: {\r\n            type: \"number\",\r\n          },\r\n          borderColor: {\r\n            type: \"string\",\r\n          },\r\n          borderWidth: {\r\n            type: \"number\",\r\n          },\r\n          bodyPaddingHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          bodyPaddingVertical: {\r\n            type: \"number\",\r\n          },\r\n          headerPaddingHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          headerPaddingVertical: {\r\n            type: \"number\",\r\n          },\r\n          footerPaddingHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          footerPaddingVertical: {\r\n            type: \"number\",\r\n          },\r\n          accentBackgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          accentHeight: {\r\n            type: \"number\",\r\n          },\r\n        },\r\n        appearances: {\r\n          filled: {\r\n            default: false,\r\n          },\r\n          outline: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {\r\n          status: {\r\n            basic: {\r\n              default: false,\r\n            },\r\n            primary: {\r\n              default: false,\r\n            },\r\n            success: {\r\n              default: false,\r\n            },\r\n            info: {\r\n              default: false,\r\n            },\r\n            warning: {\r\n              default: false,\r\n            },\r\n            danger: {\r\n              default: false,\r\n            },\r\n            control: {\r\n              default: false,\r\n            },\r\n          },\r\n        },\r\n        states: {\r\n          active: {\r\n            default: false,\r\n            priority: 0,\r\n            scope: \"all\",\r\n          },\r\n        },\r\n      },\r\n      appearances: {\r\n        outline: {\r\n          mapping: {\r\n            backgroundColor: \"background-basic-color-1\",\r\n            borderRadius: \"border-radius\",\r\n            borderColor: \"border-basic-color-4\",\r\n            borderWidth: 0,\r\n            accentHeight: 0,\r\n            bodyPaddingHorizontal: 24,\r\n            bodyPaddingVertical: 16,\r\n            headerPaddingHorizontal: 24,\r\n            headerPaddingVertical: 16,\r\n            footerPaddingHorizontal: 24,\r\n            footerPaddingVertical: 16,\r\n            state: {\r\n              active: {\r\n                backgroundColor: \"background-basic-color-2\",\r\n              },\r\n            },\r\n          },\r\n          variantGroups: {\r\n            status: {\r\n              basic: {\r\n                accentHeight: 4,\r\n                accentBackgroundColor: \"color-basic-default\",\r\n              },\r\n              primary: {\r\n                accentHeight: 4,\r\n                accentBackgroundColor: \"color-primary-default\",\r\n              },\r\n              success: {\r\n                accentHeight: 4,\r\n                accentBackgroundColor: \"color-success-default\",\r\n              },\r\n              info: {\r\n                accentHeight: 4,\r\n                accentBackgroundColor: \"color-info-default\",\r\n              },\r\n              warning: {\r\n                accentHeight: 4,\r\n                accentBackgroundColor: \"color-warning-default\",\r\n              },\r\n              danger: {\r\n                accentHeight: 4,\r\n                accentBackgroundColor: \"color-danger-default\",\r\n              },\r\n              control: {\r\n                accentHeight: 4,\r\n                accentBackgroundColor: \"color-control-default\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n        filled: {\r\n          mapping: {\r\n            borderWidth: 0,\r\n            borderColor: \"transparent\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    Calendar: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          width: {\r\n            type: \"number\",\r\n          },\r\n          paddingVertical: {\r\n            type: \"number\",\r\n          },\r\n          borderColor: {\r\n            type: \"string\",\r\n          },\r\n          borderWidth: {\r\n            type: \"number\",\r\n          },\r\n          borderRadius: {\r\n            type: \"number\",\r\n          },\r\n          headerPaddingHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          headerPaddingVertical: {\r\n            type: \"number\",\r\n          },\r\n          dividerMarginVertical: {\r\n            type: \"number\",\r\n          },\r\n          titleFontSize: {\r\n            type: \"number\",\r\n          },\r\n          titleFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          titleColor: {\r\n            type: \"string\",\r\n          },\r\n          titleFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          iconWidth: {\r\n            type: \"number\",\r\n          },\r\n          iconHeight: {\r\n            type: \"number\",\r\n          },\r\n          iconTintColor: {\r\n            type: \"string\",\r\n          },\r\n          weekdayTextFontSize: {\r\n            type: \"number\",\r\n          },\r\n          weekdayTextFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          weekdayTextColor: {\r\n            type: \"string\",\r\n          },\r\n          weekdayTextFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          rowMinHeight: {\r\n            type: \"number\",\r\n          },\r\n          rowMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {},\r\n        states: {},\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            width: 344,\r\n            borderRadius: \"border-radius\",\r\n            borderWidth: \"border-width\",\r\n            borderColor: \"border-basic-color-4\",\r\n            paddingVertical: 8,\r\n            headerPaddingHorizontal: 10,\r\n            headerPaddingVertical: 4,\r\n            titleFontSize: \"text-heading-6-font-size\",\r\n            titleFontWeight: \"text-heading-6-font-weight\",\r\n            titleFontFamily: \"text-heading-6-font-family\",\r\n            titleColor: \"text-basic-color\",\r\n            iconWidth: 24,\r\n            iconHeight: 24,\r\n            iconTintColor: \"text-basic-color\",\r\n            weekdayTextFontSize: \"text-subtitle-1-font-size\",\r\n            weekdayTextFontWeight: \"text-subtitle-1-font-weight\",\r\n            weekdayTextFontFamily: \"text-subtitle-1-font-family\",\r\n            weekdayTextColor: \"text-hint-color\",\r\n            dividerMarginVertical: 4,\r\n            rowMinHeight: 45,\r\n            rowMarginHorizontal: 10,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    CalendarCell: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          paddingHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          paddingVertical: {\r\n            type: \"number\",\r\n          },\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          borderRadius: {\r\n            type: \"string\",\r\n          },\r\n          contentBorderWidth: {\r\n            type: \"number\",\r\n          },\r\n          contentBorderRadius: {\r\n            type: \"string\",\r\n          },\r\n          contentBorderColor: {\r\n            type: \"string\",\r\n          },\r\n          contentBackgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          contentTextColor: {\r\n            type: \"string\",\r\n          },\r\n          contentTextFontSize: {\r\n            type: \"number\",\r\n          },\r\n          contentTextFontWeight: {\r\n            type: \"number\",\r\n          },\r\n          contentTextFontFamily: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {},\r\n        states: {\r\n          bounding: {\r\n            scope: \"all\",\r\n            priority: 0,\r\n            default: false,\r\n          },\r\n          today: {\r\n            scope: \"all\",\r\n            priority: 1,\r\n            default: false,\r\n          },\r\n          disabled: {\r\n            scope: \"all\",\r\n            priority: 2,\r\n            default: false,\r\n          },\r\n          selected: {\r\n            scope: \"all\",\r\n            priority: 3,\r\n            default: false,\r\n          },\r\n          range: {\r\n            scope: \"all\",\r\n            priority: 5,\r\n            default: false,\r\n          },\r\n        },\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            paddingHorizontal: 0,\r\n            paddingVertical: 0,\r\n            borderRadius: 0,\r\n            backgroundColor: \"transparent\",\r\n            contentBorderRadius: \"border-radius\",\r\n            contentBorderWidth: \"border-width\",\r\n            contentBorderColor: \"transparent\",\r\n            contentTextFontSize: \"text-subtitle-1-font-size\",\r\n            contentTextFontWeight: \"text-subtitle-1-font-weight\",\r\n            contentTextFontFamily: \"text-subtitle-1-font-family\",\r\n            contentTextColor: \"text-basic-color\",\r\n            state: {\r\n              bounding: {\r\n                contentTextColor: \"text-hint-color\",\r\n              },\r\n              selected: {\r\n                contentBorderColor: \"color-primary-default-border\",\r\n                contentBackgroundColor: \"color-primary-default\",\r\n                contentTextColor: \"text-control-color\",\r\n              },\r\n              disabled: {\r\n                contentTextColor: \"text-disabled-color\",\r\n              },\r\n              today: {\r\n                contentBorderColor: \"color-primary-transparent-default-border\",\r\n                contentBackgroundColor: \"color-primary-transparent-default\",\r\n              },\r\n              range: {\r\n                borderRadius: \"border-radius\",\r\n                backgroundColor: \"color-primary-default\",\r\n                contentTextColor: \"text-control-color\",\r\n              },\r\n              \"today.range\": {\r\n                contentBorderColor: \"color-control-transparent-default-border\",\r\n                contentBackgroundColor: \"color-control-transparent-default\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    CheckBox: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          width: {\r\n            type: \"number\",\r\n          },\r\n          height: {\r\n            type: \"number\",\r\n          },\r\n          borderWidth: {\r\n            type: \"number\",\r\n          },\r\n          borderRadius: {\r\n            type: \"number\",\r\n          },\r\n          borderColor: {\r\n            type: \"string\",\r\n          },\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          textMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          textColor: {\r\n            type: \"string\",\r\n          },\r\n          textFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          textFontSize: {\r\n            type: \"number\",\r\n          },\r\n          textFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          iconWidth: {\r\n            type: \"number\",\r\n          },\r\n          iconHeight: {\r\n            type: \"number\",\r\n          },\r\n          iconTintColor: {\r\n            type: \"string\",\r\n          },\r\n          outlineWidth: {\r\n            type: \"number\",\r\n          },\r\n          outlineHeight: {\r\n            type: \"number\",\r\n          },\r\n          outlineBorderRadius: {\r\n            type: \"number\",\r\n          },\r\n          outlineBackgroundColor: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {\r\n          status: {\r\n            primary: {\r\n              default: false,\r\n            },\r\n            success: {\r\n              default: false,\r\n            },\r\n            warning: {\r\n              default: false,\r\n            },\r\n            danger: {\r\n              default: false,\r\n            },\r\n            info: {\r\n              default: false,\r\n            },\r\n            basic: {\r\n              default: true,\r\n            },\r\n            control: {\r\n              default: false,\r\n            },\r\n          },\r\n        },\r\n        states: {\r\n          checked: {\r\n            default: false,\r\n            priority: 0,\r\n            scope: \"all\",\r\n          },\r\n          hover: {\r\n            default: false,\r\n            priority: 1,\r\n            scope: \"all\",\r\n          },\r\n          disabled: {\r\n            default: false,\r\n            priority: 2,\r\n            scope: \"all\",\r\n          },\r\n          active: {\r\n            default: false,\r\n            priority: 3,\r\n            scope: \"all\",\r\n          },\r\n          indeterminate: {\r\n            default: false,\r\n            priority: 4,\r\n            scope: \"all\",\r\n          },\r\n          focused: {\r\n            default: false,\r\n            priority: 5,\r\n            scope: \"all\",\r\n          },\r\n        },\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            width: 20,\r\n            height: 20,\r\n            borderRadius: 3,\r\n            borderWidth: \"border-width\",\r\n            outlineWidth: 32,\r\n            outlineHeight: 32,\r\n            outlineBorderRadius: 6,\r\n            outlineBackgroundColor: \"transparent\",\r\n            textFontSize: \"text-subtitle-2-font-size\",\r\n            textFontWeight: \"text-subtitle-2-font-weight\",\r\n            textFontFamily: \"text-subtitle-2-font-family\",\r\n            textMarginHorizontal: 12,\r\n            iconWidth: 12,\r\n            iconHeight: 12,\r\n            iconTintColor: \"transparent\",\r\n          },\r\n          variantGroups: {\r\n            status: {\r\n              basic: {\r\n                borderColor: \"color-basic-transparent-default-border\",\r\n                backgroundColor: \"color-basic-transparent-default\",\r\n                textColor: \"text-basic-color\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-primary-default-border\",\r\n                    backgroundColor: \"color-primary-default\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                  indeterminate: {\r\n                    borderColor: \"color-primary-default-border\",\r\n                    backgroundColor: \"color-primary-default\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-primary-transparent-focus-border\",\r\n                    backgroundColor: \"color-primary-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-primary-focus-border\",\r\n                    backgroundColor: \"color-primary-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-primary-transparent-hover-border\",\r\n                    backgroundColor: \"color-primary-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-primary-hover-border\",\r\n                    backgroundColor: \"color-primary-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-primary-transparent-active-border\",\r\n                    backgroundColor: \"color-primary-transparent-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-primary-active-border\",\r\n                    backgroundColor: \"color-primary-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-basic-transparent-disabled-border\",\r\n                    backgroundColor: \"color-basic-transparent-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    borderColor: \"color-basic-transparent-600\",\r\n                    backgroundColor: \"color-basic-transparent-600\",\r\n                  },\r\n                },\r\n              },\r\n              primary: {\r\n                borderColor: \"color-primary-transparent-default-border\",\r\n                backgroundColor: \"color-primary-transparent-default\",\r\n                textColor: \"text-basic-color\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-primary-default-border\",\r\n                    backgroundColor: \"color-primary-default\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                  indeterminate: {\r\n                    borderColor: \"color-primary-default-border\",\r\n                    backgroundColor: \"color-primary-default\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-primary-transparent-focus-border\",\r\n                    backgroundColor: \"color-primary-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-primary-focus-border\",\r\n                    backgroundColor: \"color-primary-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-primary-transparent-hover-border\",\r\n                    backgroundColor: \"color-primary-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-primary-hover-border\",\r\n                    backgroundColor: \"color-primary-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-primary-transparent-active-border\",\r\n                    backgroundColor: \"color-primary-transparent-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-primary-active-border\",\r\n                    backgroundColor: \"color-primary-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-basic-transparent-disabled-border\",\r\n                    backgroundColor: \"color-basic-transparent-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    borderColor: \"color-basic-transparent-600\",\r\n                    backgroundColor: \"color-basic-transparent-600\",\r\n                  },\r\n                },\r\n              },\r\n              success: {\r\n                borderColor: \"color-success-transparent-default-border\",\r\n                backgroundColor: \"color-success-transparent-default\",\r\n                textColor: \"text-basic-color\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-success-default-border\",\r\n                    backgroundColor: \"color-success-default\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                  indeterminate: {\r\n                    borderColor: \"color-success-default-border\",\r\n                    backgroundColor: \"color-success-default\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-success-transparent-focus-border\",\r\n                    backgroundColor: \"color-success-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-success-focus-border\",\r\n                    backgroundColor: \"color-success-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-success-transparent-hover-border\",\r\n                    backgroundColor: \"color-success-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-success-hover-border\",\r\n                    backgroundColor: \"color-success-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-success-transparent-active-border\",\r\n                    backgroundColor: \"color-success-transparent-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-success-active-border\",\r\n                    backgroundColor: \"color-success-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-basic-transparent-disabled-border\",\r\n                    backgroundColor: \"color-basic-transparent-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    borderColor: \"color-basic-transparent-600\",\r\n                    backgroundColor: \"color-basic-transparent-600\",\r\n                  },\r\n                },\r\n              },\r\n              info: {\r\n                borderColor: \"color-info-transparent-default-border\",\r\n                backgroundColor: \"color-info-transparent-default\",\r\n                textColor: \"text-basic-color\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-info-default-border\",\r\n                    backgroundColor: \"color-info-default\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                  indeterminate: {\r\n                    borderColor: \"color-info-default-border\",\r\n                    backgroundColor: \"color-info-default\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-info-transparent-focus-border\",\r\n                    backgroundColor: \"color-info-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-info-focus-border\",\r\n                    backgroundColor: \"color-info-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-info-transparent-hover-border\",\r\n                    backgroundColor: \"color-info-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-info-hover-border\",\r\n                    backgroundColor: \"color-info-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-info-transparent-active-border\",\r\n                    backgroundColor: \"color-info-transparent-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-info-active-border\",\r\n                    backgroundColor: \"color-info-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-basic-transparent-disabled-border\",\r\n                    backgroundColor: \"color-basic-transparent-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    borderColor: \"color-basic-transparent-600\",\r\n                    backgroundColor: \"color-basic-transparent-600\",\r\n                  },\r\n                },\r\n              },\r\n              warning: {\r\n                borderColor: \"color-warning-transparent-default-border\",\r\n                backgroundColor: \"color-warning-transparent-default\",\r\n                textColor: \"text-basic-color\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-warning-default-border\",\r\n                    backgroundColor: \"color-warning-default\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                  indeterminate: {\r\n                    borderColor: \"color-warning-default-border\",\r\n                    backgroundColor: \"color-warning-default\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-warning-transparent-focus-border\",\r\n                    backgroundColor: \"color-warning-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-warning-focus-border\",\r\n                    backgroundColor: \"color-warning-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-warning-transparent-hover-border\",\r\n                    backgroundColor: \"color-warning-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-warning-hover-border\",\r\n                    backgroundColor: \"color-warning-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-warning-transparent-active-border\",\r\n                    backgroundColor: \"color-warning-transparent-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-warning-active-border\",\r\n                    backgroundColor: \"color-warning-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-basic-transparent-disabled-border\",\r\n                    backgroundColor: \"color-basic-transparent-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    borderColor: \"color-basic-transparent-600\",\r\n                    backgroundColor: \"color-basic-transparent-600\",\r\n                  },\r\n                },\r\n              },\r\n              danger: {\r\n                borderColor: \"color-danger-transparent-default-border\",\r\n                backgroundColor: \"color-danger-transparent-default\",\r\n                textColor: \"text-basic-color\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-danger-default-border\",\r\n                    backgroundColor: \"color-danger-default\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                  indeterminate: {\r\n                    borderColor: \"color-danger-default-border\",\r\n                    backgroundColor: \"color-danger-default\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-danger-transparent-focus-border\",\r\n                    backgroundColor: \"color-danger-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-danger-focus-border\",\r\n                    backgroundColor: \"color-danger-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-danger-transparent-hover-border\",\r\n                    backgroundColor: \"color-danger-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-danger-hover-border\",\r\n                    backgroundColor: \"color-danger-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-danger-transparent-active-border\",\r\n                    backgroundColor: \"color-danger-transparent-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-danger-active-border\",\r\n                    backgroundColor: \"color-danger-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-basic-transparent-disabled-border\",\r\n                    backgroundColor: \"color-basic-transparent-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    borderColor: \"color-basic-transparent-600\",\r\n                    backgroundColor: \"color-basic-transparent-600\",\r\n                  },\r\n                },\r\n              },\r\n              control: {\r\n                borderColor: \"color-control-transparent-default-border\",\r\n                backgroundColor: \"color-control-transparent-default\",\r\n                textColor: \"text-control-color\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-control-default-border\",\r\n                    backgroundColor: \"color-control-default\",\r\n                    iconTintColor: \"color-basic-800\",\r\n                  },\r\n                  indeterminate: {\r\n                    borderColor: \"color-control-default-border\",\r\n                    backgroundColor: \"color-control-default\",\r\n                    iconTintColor: \"color-basic-800\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-control-transparent-focus-border\",\r\n                    backgroundColor: \"color-control-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-control-focus-border\",\r\n                    backgroundColor: \"color-control-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-control-transparent-hover-border\",\r\n                    backgroundColor: \"color-control-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-control-hover-border\",\r\n                    backgroundColor: \"color-control-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-control-transparent-active-border\",\r\n                    backgroundColor: \"color-control-transparent-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-control-active-border\",\r\n                    backgroundColor: \"color-control-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-control-transparent-disabled-border\",\r\n                    backgroundColor: \"color-control-transparent-disabled\",\r\n                    textColor: \"text-control-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    borderColor: \"color-basic-transparent-600\",\r\n                    backgroundColor: \"color-basic-transparent-600\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    Datepicker: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          minHeight: {\r\n            type: \"number\",\r\n          },\r\n          paddingHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          paddingVertical: {\r\n            type: \"number\",\r\n          },\r\n          borderRadius: {\r\n            type: \"number\",\r\n          },\r\n          borderColor: {\r\n            type: \"string\",\r\n          },\r\n          borderWidth: {\r\n            type: \"number\",\r\n          },\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          textMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          textFontSize: {\r\n            type: \"number\",\r\n          },\r\n          textFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          textFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          textColor: {\r\n            type: \"string\",\r\n          },\r\n          placeholderColor: {\r\n            type: \"string\",\r\n          },\r\n          iconWidth: {\r\n            type: \"number\",\r\n          },\r\n          iconHeight: {\r\n            type: \"number\",\r\n          },\r\n          iconMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          iconTintColor: {\r\n            type: \"string\",\r\n          },\r\n          labelColor: {\r\n            type: \"string\",\r\n          },\r\n          labelFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          labelFontSize: {\r\n            type: \"number\",\r\n          },\r\n          labelFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          labelMarginBottom: {\r\n            type: \"number\",\r\n          },\r\n          captionMarginTop: {\r\n            type: \"number\",\r\n          },\r\n          captionColor: {\r\n            type: \"string\",\r\n          },\r\n          captionFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          captionFontSize: {\r\n            type: \"number\",\r\n          },\r\n          captionFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          captionIconWidth: {\r\n            type: \"number\",\r\n          },\r\n          captionIconHeight: {\r\n            type: \"number\",\r\n          },\r\n          captionIconMarginRight: {\r\n            type: \"number\",\r\n          },\r\n          captionIconTintColor: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {\r\n          status: {\r\n            basic: {\r\n              default: true,\r\n            },\r\n            primary: {\r\n              default: false,\r\n            },\r\n            success: {\r\n              default: false,\r\n            },\r\n            info: {\r\n              default: false,\r\n            },\r\n            warning: {\r\n              default: false,\r\n            },\r\n            danger: {\r\n              default: false,\r\n            },\r\n            control: {\r\n              default: false,\r\n            },\r\n          },\r\n          size: {\r\n            small: {\r\n              default: false,\r\n            },\r\n            medium: {\r\n              default: false,\r\n            },\r\n            large: {\r\n              default: true,\r\n            },\r\n          },\r\n        },\r\n        states: {\r\n          disabled: {\r\n            default: false,\r\n            priority: 0,\r\n            scope: \"all\",\r\n          },\r\n          active: {\r\n            default: false,\r\n            priority: 1,\r\n            scope: \"all\",\r\n          },\r\n        },\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            paddingHorizontal: 8,\r\n            textMarginHorizontal: 8,\r\n            textFontFamily: \"text-font-family\",\r\n            iconWidth: 24,\r\n            iconHeight: 24,\r\n            iconMarginHorizontal: 8,\r\n            labelMarginBottom: 4,\r\n            labelFontSize: \"text-label-font-size\",\r\n            labelFontWeight: \"text-label-font-weight\",\r\n            labelFontFamily: \"text-label-font-family\",\r\n            captionMarginTop: 4,\r\n            captionFontSize: \"text-caption-1-font-size\",\r\n            captionFontWeight: \"text-caption-1-font-weight\",\r\n            captionFontFamily: \"text-caption-1-font-family\",\r\n            captionIconWidth: 10,\r\n            captionIconHeight: 10,\r\n            captionIconMarginRight: 8,\r\n          },\r\n          variantGroups: {\r\n            status: {\r\n              basic: {\r\n                borderColor: \"border-basic-color-4\",\r\n                backgroundColor: \"background-basic-color-2\",\r\n                textColor: \"text-hint-color\",\r\n                labelColor: \"text-hint-color\",\r\n                captionColor: \"text-hint-color\",\r\n                placeholderColor: \"text-hint-color\",\r\n                iconTintColor: \"text-hint-color\",\r\n                captionIconTintColor: \"text-hint-color\",\r\n                state: {\r\n                  active: {\r\n                    borderColor: \"color-primary-default\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                    textColor: \"text-basic-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-2\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              primary: {\r\n                borderColor: \"color-primary-default\",\r\n                backgroundColor: \"background-basic-color-2\",\r\n                textColor: \"text-basic-color\",\r\n                labelColor: \"text-hint-color\",\r\n                captionColor: \"text-primary-color\",\r\n                placeholderColor: \"text-hint-color\",\r\n                iconTintColor: \"text-primary-color\",\r\n                captionIconTintColor: \"text-primary-color\",\r\n                state: {\r\n                  active: {\r\n                    borderColor: \"color-primary-active\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                    textColor: \"text-basic-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-2\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              success: {\r\n                borderColor: \"color-success-default\",\r\n                backgroundColor: \"background-basic-color-2\",\r\n                textColor: \"text-basic-color\",\r\n                labelColor: \"text-hint-color\",\r\n                captionColor: \"text-success-color\",\r\n                placeholderColor: \"text-hint-color\",\r\n                iconTintColor: \"text-success-color\",\r\n                captionIconTintColor: \"text-success-color\",\r\n                state: {\r\n                  active: {\r\n                    borderColor: \"color-success-active\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                    textColor: \"text-basic-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-2\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              info: {\r\n                borderColor: \"color-info-default\",\r\n                backgroundColor: \"background-basic-color-2\",\r\n                textColor: \"text-basic-color\",\r\n                labelColor: \"text-hint-color\",\r\n                captionColor: \"text-info-color\",\r\n                placeholderColor: \"text-hint-color\",\r\n                iconTintColor: \"text-info-color\",\r\n                captionIconTintColor: \"text-info-color\",\r\n                state: {\r\n                  active: {\r\n                    borderColor: \"color-info-active\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                    textColor: \"text-basic-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-2\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              warning: {\r\n                borderColor: \"color-warning-default\",\r\n                backgroundColor: \"background-basic-color-2\",\r\n                textColor: \"text-basic-color\",\r\n                labelColor: \"text-hint-color\",\r\n                captionColor: \"text-warning-color\",\r\n                placeholderColor: \"text-hint-color\",\r\n                iconTintColor: \"text-warning-color\",\r\n                captionIconTintColor: \"text-warning-color\",\r\n                state: {\r\n                  active: {\r\n                    borderColor: \"color-warning-active\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                    textColor: \"text-basic-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-2\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              danger: {\r\n                borderColor: \"color-danger-default\",\r\n                backgroundColor: \"background-basic-color-2\",\r\n                textColor: \"text-basic-color\",\r\n                labelColor: \"text-hint-color\",\r\n                captionColor: \"text-danger-color\",\r\n                placeholderColor: \"text-hint-color\",\r\n                iconTintColor: \"text-danger-color\",\r\n                captionIconTintColor: \"text-danger-color\",\r\n                state: {\r\n                  active: {\r\n                    borderColor: \"color-danger-active\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                    textColor: \"text-basic-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-2\",\r\n                    textColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              control: {\r\n                borderColor: \"color-basic-control-transparent-500\",\r\n                backgroundColor: \"color-basic-control-transparent-300\",\r\n                textColor: \"text-control-color\",\r\n                labelColor: \"text-control-color\",\r\n                captionColor: \"text-control-color\",\r\n                placeholderColor: \"text-control-color\",\r\n                iconTintColor: \"text-control-color\",\r\n                captionIconTintColor: \"text-control-color\",\r\n                state: {\r\n                  active: {\r\n                    borderColor: \"color-control-transparent-active-border\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                    textColor: \"text-basic-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-control-transparent-disabled-border\",\r\n                    backgroundColor: \"color-control-transparent-disabled\",\r\n                    textColor: \"text-control-color\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                },\r\n              },\r\n            },\r\n            size: {\r\n              small: {\r\n                minHeight: \"size-small\",\r\n                borderRadius: \"border-radius\",\r\n                borderWidth: \"border-width\",\r\n                paddingVertical: 3,\r\n                textFontSize: \"text-subtitle-2-font-size\",\r\n                textFontWeight: \"normal\",\r\n              },\r\n              medium: {\r\n                minHeight: \"size-medium\",\r\n                borderRadius: \"border-radius\",\r\n                borderWidth: \"border-width\",\r\n                paddingVertical: 7,\r\n                textFontSize: \"text-subtitle-1-font-size\",\r\n                textFontWeight: \"normal\",\r\n              },\r\n              large: {\r\n                minHeight: \"size-large\",\r\n                borderRadius: \"border-radius\",\r\n                borderWidth: \"border-width\",\r\n                paddingVertical: 11,\r\n                textFontSize: \"text-subtitle-1-font-size\",\r\n                textFontWeight: \"normal\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    Divider: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          height: {\r\n            type: \"number\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {},\r\n        states: {},\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            height: 1,\r\n            backgroundColor: \"background-basic-color-3\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    Drawer: {\r\n      meta: {\r\n        scope: \"mobile\",\r\n        parameters: {\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          headerPaddingHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          headerPaddingVertical: {\r\n            type: \"number\",\r\n          },\r\n          footerPaddingHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          footerPaddingVertical: {\r\n            type: \"number\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n          noDivider: {\r\n            default: false,\r\n          },\r\n        },\r\n        variantGroups: {},\r\n        states: {},\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            backgroundColor: \"background-basic-color-1\",\r\n            headerPaddingHorizontal: 24,\r\n            headerPaddingVertical: 16,\r\n            footerPaddingHorizontal: 24,\r\n            footerPaddingVertical: 8,\r\n          },\r\n        },\r\n        noDivider: {\r\n          mapping: {},\r\n        },\r\n      },\r\n    },\r\n    Input: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          paddingVertical: {\r\n            type: \"number\",\r\n          },\r\n          paddingHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          minHeight: {\r\n            type: \"number\",\r\n          },\r\n          borderRadius: {\r\n            type: \"number\",\r\n          },\r\n          borderWidth: {\r\n            type: \"number\",\r\n          },\r\n          borderColor: {\r\n            type: \"string\",\r\n          },\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          textMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          textFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          textFontSize: {\r\n            type: \"number\",\r\n          },\r\n          textFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          textColor: {\r\n            type: \"string\",\r\n          },\r\n          placeholderColor: {\r\n            type: \"string\",\r\n          },\r\n          iconWidth: {\r\n            type: \"number\",\r\n          },\r\n          iconHeight: {\r\n            type: \"number\",\r\n          },\r\n          iconMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          iconTintColor: {\r\n            type: \"string\",\r\n          },\r\n          labelColor: {\r\n            type: \"string\",\r\n          },\r\n          labelFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          labelFontSize: {\r\n            type: \"number\",\r\n          },\r\n          labelFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          labelMarginBottom: {\r\n            type: \"number\",\r\n          },\r\n          captionMarginTop: {\r\n            type: \"number\",\r\n          },\r\n          captionColor: {\r\n            type: \"string\",\r\n          },\r\n          captionFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          captionFontSize: {\r\n            type: \"number\",\r\n          },\r\n          captionFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          captionIconWidth: {\r\n            type: \"number\",\r\n          },\r\n          captionIconHeight: {\r\n            type: \"number\",\r\n          },\r\n          captionIconMarginRight: {\r\n            type: \"number\",\r\n          },\r\n          captionIconTintColor: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {\r\n          status: {\r\n            basic: {\r\n              default: true,\r\n            },\r\n            primary: {\r\n              default: false,\r\n            },\r\n            success: {\r\n              default: false,\r\n            },\r\n            info: {\r\n              default: false,\r\n            },\r\n            warning: {\r\n              default: false,\r\n            },\r\n            danger: {\r\n              default: false,\r\n            },\r\n            control: {\r\n              default: false,\r\n            },\r\n          },\r\n          size: {\r\n            small: {\r\n              default: false,\r\n            },\r\n            medium: {\r\n              default: false,\r\n            },\r\n            large: {\r\n              default: true,\r\n            },\r\n          },\r\n        },\r\n        states: {\r\n          hover: {\r\n            default: false,\r\n            priority: 0,\r\n            scope: \"all\",\r\n          },\r\n          disabled: {\r\n            default: false,\r\n            priority: 1,\r\n            scope: \"all\",\r\n          },\r\n          focused: {\r\n            default: false,\r\n            priority: 2,\r\n            scope: \"all\",\r\n          },\r\n        },\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            paddingHorizontal: 8,\r\n            textMarginHorizontal: 8,\r\n            textFontFamily: \"text-font-family\",\r\n            iconWidth: 24,\r\n            iconHeight: 24,\r\n            iconMarginHorizontal: 8,\r\n            labelMarginBottom: 4,\r\n            labelFontSize: \"text-label-font-size\",\r\n            labelFontWeight: \"text-label-font-weight\",\r\n            labelFontFamily: \"text-label-font-family\",\r\n            captionMarginTop: 4,\r\n            captionFontSize: \"text-caption-1-font-size\",\r\n            captionFontWeight: \"text-caption-1-font-weight\",\r\n            captionFontFamily: \"text-caption-1-font-family\",\r\n            captionIconWidth: 10,\r\n            captionIconHeight: 10,\r\n            captionIconMarginRight: 8,\r\n          },\r\n          variantGroups: {\r\n            status: {\r\n              basic: {\r\n                borderColor: \"border-basic-color-4\",\r\n                backgroundColor: \"background-basic-color-2\",\r\n                textColor: \"text-basic-color\",\r\n                labelColor: \"text-hint-color\",\r\n                captionColor: \"text-hint-color\",\r\n                placeholderColor: \"text-hint-color\",\r\n                iconTintColor: \"text-hint-color\",\r\n                captionIconTintColor: \"text-hint-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-primary-default\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                    iconTintColor: \"text-primary-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-3\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-2\",\r\n                    textColor: \"text-disabled-color\",\r\n                    labelColor: \"text-disabled-color\",\r\n                    captionColor: \"text-disabled-color\",\r\n                    placeholderColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                    captionIconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              primary: {\r\n                borderColor: \"color-primary-default\",\r\n                backgroundColor: \"background-basic-color-2\",\r\n                textColor: \"text-basic-color\",\r\n                labelColor: \"text-hint-color\",\r\n                captionColor: \"text-primary-color\",\r\n                placeholderColor: \"text-hint-color\",\r\n                iconTintColor: \"text-primary-color\",\r\n                captionIconTintColor: \"text-primary-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-primary-focus\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                    iconTintColor: \"text-primary-focus-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-primary-hover\",\r\n                    backgroundColor: \"background-basic-color-3\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-2\",\r\n                    textColor: \"text-disabled-color\",\r\n                    labelColor: \"text-disabled-color\",\r\n                    captionColor: \"text-disabled-color\",\r\n                    placeholderColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                    captionIconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              success: {\r\n                borderColor: \"color-success-default\",\r\n                backgroundColor: \"background-basic-color-2\",\r\n                textColor: \"text-basic-color\",\r\n                labelColor: \"text-hint-color\",\r\n                captionColor: \"text-success-color\",\r\n                placeholderColor: \"text-hint-color\",\r\n                iconTintColor: \"text-success-color\",\r\n                captionIconTintColor: \"text-success-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-success-focus\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                    iconTintColor: \"text-success-focus-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-success-hover\",\r\n                    backgroundColor: \"background-basic-color-3\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-2\",\r\n                    textColor: \"text-disabled-color\",\r\n                    labelColor: \"text-disabled-color\",\r\n                    captionColor: \"text-disabled-color\",\r\n                    placeholderColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                    captionIconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              info: {\r\n                borderColor: \"color-info-default\",\r\n                backgroundColor: \"background-basic-color-2\",\r\n                textColor: \"text-basic-color\",\r\n                labelColor: \"text-hint-color\",\r\n                captionColor: \"text-info-color\",\r\n                placeholderColor: \"text-hint-color\",\r\n                iconTintColor: \"text-info-color\",\r\n                captionIconTintColor: \"text-info-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-info-focus\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                    iconTintColor: \"text-info-focus-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-info-hover\",\r\n                    backgroundColor: \"background-basic-color-3\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-2\",\r\n                    textColor: \"text-disabled-color\",\r\n                    labelColor: \"text-disabled-color\",\r\n                    captionColor: \"text-disabled-color\",\r\n                    placeholderColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                    captionIconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              warning: {\r\n                borderColor: \"color-warning-default\",\r\n                backgroundColor: \"background-basic-color-2\",\r\n                textColor: \"text-basic-color\",\r\n                labelColor: \"text-hint-color\",\r\n                captionColor: \"text-warning-color\",\r\n                placeholderColor: \"text-hint-color\",\r\n                iconTintColor: \"text-warning-color\",\r\n                captionIconTintColor: \"text-warning-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-warning-focus\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                    iconTintColor: \"text-warning-focus-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-warning-hover\",\r\n                    backgroundColor: \"background-basic-color-3\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-2\",\r\n                    textColor: \"text-disabled-color\",\r\n                    labelColor: \"text-disabled-color\",\r\n                    captionColor: \"text-disabled-color\",\r\n                    placeholderColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                    captionIconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              danger: {\r\n                borderColor: \"color-danger-default\",\r\n                backgroundColor: \"background-basic-color-2\",\r\n                textColor: \"text-basic-color\",\r\n                labelColor: \"text-hint-color\",\r\n                captionColor: \"text-danger-color\",\r\n                placeholderColor: \"text-hint-color\",\r\n                iconTintColor: \"text-danger-color\",\r\n                captionIconTintColor: \"text-danger-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-danger-focus\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                    iconTintColor: \"text-danger-focus-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-danger-hover\",\r\n                    backgroundColor: \"background-basic-color-3\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-2\",\r\n                    textColor: \"text-disabled-color\",\r\n                    labelColor: \"text-disabled-color\",\r\n                    captionColor: \"text-disabled-color\",\r\n                    placeholderColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                    captionIconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              control: {\r\n                borderColor: \"color-basic-control-transparent-500\",\r\n                backgroundColor: \"color-basic-control-transparent-300\",\r\n                textColor: \"text-control-color\",\r\n                labelColor: \"text-control-color\",\r\n                captionColor: \"text-control-color\",\r\n                placeholderColor: \"text-control-color\",\r\n                iconTintColor: \"text-control-color\",\r\n                captionIconTintColor: \"text-control-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-control-transparent-focus-border\",\r\n                    backgroundColor: \"color-basic-control-transparent-500\",\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-control-transparent-hover-border\",\r\n                    backgroundColor: \"color-basic-control-transparent-400\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-control-transparent-disabled-border\",\r\n                    backgroundColor: \"color-control-transparent-disabled\",\r\n                    textColor: \"text-control-color\",\r\n                    labelColor: \"text-control-color\",\r\n                    captionColor: \"text-control-color\",\r\n                    placeholderColor: \"text-control-color\",\r\n                    iconTintColor: \"text-control-color\",\r\n                    captionIconTintColor: \"text-control-color\",\r\n                  },\r\n                },\r\n              },\r\n            },\r\n            size: {\r\n              small: {\r\n                minHeight: \"size-small\",\r\n                borderRadius: \"border-radius\",\r\n                borderWidth: \"border-width\",\r\n                paddingVertical: 3,\r\n                textFontSize: \"text-subtitle-2-font-size\",\r\n                textFontWeight: \"normal\",\r\n              },\r\n              medium: {\r\n                minHeight: \"size-medium\",\r\n                borderRadius: \"border-radius\",\r\n                borderWidth: \"border-width\",\r\n                paddingVertical: 7,\r\n                textFontSize: \"text-subtitle-1-font-size\",\r\n                textFontWeight: \"normal\",\r\n              },\r\n              large: {\r\n                minHeight: \"size-large\",\r\n                borderRadius: \"border-radius\",\r\n                borderWidth: \"border-width\",\r\n                paddingVertical: 11,\r\n                textFontSize: \"text-subtitle-1-font-size\",\r\n                textFontWeight: \"normal\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    Layout: {\r\n      meta: {\r\n        scope: \"mobile\",\r\n        parameters: {\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {\r\n          level: {\r\n            \"1\": {\r\n              default: true,\r\n            },\r\n            \"2\": {\r\n              default: false,\r\n            },\r\n            \"3\": {\r\n              default: false,\r\n            },\r\n            \"4\": {\r\n              default: false,\r\n            },\r\n          },\r\n        },\r\n        states: {},\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {},\r\n          variantGroups: {\r\n            level: {\r\n              \"1\": {\r\n                backgroundColor: \"background-basic-color-1\",\r\n              },\r\n              \"2\": {\r\n                backgroundColor: \"background-basic-color-2\",\r\n              },\r\n              \"3\": {\r\n                backgroundColor: \"background-basic-color-3\",\r\n              },\r\n              \"4\": {\r\n                backgroundColor: \"background-basic-color-4\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    List: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {},\r\n        states: {},\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            backgroundColor: \"background-basic-color-2\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    ListItem: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          paddingVertical: {\r\n            type: \"number\",\r\n          },\r\n          paddingHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          iconWidth: {\r\n            type: \"number\",\r\n          },\r\n          iconHeight: {\r\n            type: \"number\",\r\n          },\r\n          iconMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          iconTintColor: {\r\n            type: \"string\",\r\n          },\r\n          titleMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          titleFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          titleFontSize: {\r\n            type: \"number\",\r\n          },\r\n          titleFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          titleColor: {\r\n            type: \"string\",\r\n          },\r\n          descriptionColor: {\r\n            type: \"string\",\r\n          },\r\n          descriptionFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          descriptionFontSize: {\r\n            type: \"number\",\r\n          },\r\n          descriptionFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          descriptionMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          accessoryMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {},\r\n        states: {\r\n          active: {\r\n            default: false,\r\n            priority: 0,\r\n            scope: \"all\",\r\n          },\r\n        },\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            paddingHorizontal: 8,\r\n            paddingVertical: 12,\r\n            backgroundColor: \"background-basic-color-1\",\r\n            iconWidth: 24,\r\n            iconHeight: 24,\r\n            iconMarginHorizontal: 8,\r\n            iconTintColor: \"text-hint-color\",\r\n            titleMarginHorizontal: 8,\r\n            titleFontSize: \"text-subtitle-2-font-size\",\r\n            titleFontWeight: \"text-subtitle-2-font-weight\",\r\n            titleFontFamily: \"text-subtitle-2-font-family\",\r\n            titleColor: \"text-basic-color\",\r\n            descriptionMarginHorizontal: 8,\r\n            descriptionFontSize: \"text-caption-1-font-size\",\r\n            descriptionFontWeight: \"text-caption-1-font-weight\",\r\n            descriptionFontFamily: \"text-caption-1-font-family\",\r\n            descriptionColor: \"text-hint-color\",\r\n            accessoryMarginHorizontal: 8,\r\n            state: {\r\n              active: {\r\n                backgroundColor: \"color-basic-transparent-active\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    Menu: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {},\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n          noDivider: {\r\n            default: false,\r\n          },\r\n        },\r\n        variantGroups: {},\r\n        states: {},\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {},\r\n        },\r\n        noDivider: {\r\n          mapping: {},\r\n        },\r\n      },\r\n    },\r\n    MenuItem: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          indicatorWidth: {\r\n            type: \"number\",\r\n          },\r\n          indicatorBackgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          paddingVertical: {\r\n            type: \"number\",\r\n          },\r\n          paddingHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          paddingLeft: {\r\n            type: \"number\",\r\n          },\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          iconWidth: {\r\n            type: \"number\",\r\n          },\r\n          iconHeight: {\r\n            type: \"number\",\r\n          },\r\n          iconMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          iconTintColor: {\r\n            type: \"string\",\r\n          },\r\n          titleMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          titleFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          titleFontSize: {\r\n            type: \"number\",\r\n          },\r\n          titleFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          titleColor: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n          grouped: {\r\n            default: false,\r\n          },\r\n        },\r\n        variantGroups: {},\r\n        states: {\r\n          hover: {\r\n            default: false,\r\n            priority: 0,\r\n            scope: \"all\",\r\n          },\r\n          disabled: {\r\n            default: false,\r\n            priority: 1,\r\n            scope: \"all\",\r\n          },\r\n          selected: {\r\n            default: false,\r\n            priority: 2,\r\n            scope: \"all\",\r\n          },\r\n          active: {\r\n            default: false,\r\n            priority: 3,\r\n            scope: \"all\",\r\n          },\r\n          focused: {\r\n            default: false,\r\n            priority: 4,\r\n            scope: \"all\",\r\n          },\r\n        },\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            paddingHorizontal: 8,\r\n            paddingVertical: 12,\r\n            backgroundColor: \"background-basic-color-1\",\r\n            indicatorWidth: 0,\r\n            indicatorBackgroundColor: \"transparent\",\r\n            titleMarginHorizontal: 8,\r\n            titleFontSize: \"text-subtitle-2-font-size\",\r\n            titleFontWeight: \"text-subtitle-2-font-weight\",\r\n            titleFontFamily: \"text-subtitle-2-font-family\",\r\n            titleColor: \"text-basic-color\",\r\n            iconWidth: 20,\r\n            iconHeight: 20,\r\n            iconMarginHorizontal: 8,\r\n            iconTintColor: \"text-hint-color\",\r\n            state: {\r\n              hover: {\r\n                titleColor: \"text-primary-hover-color\",\r\n                iconTintColor: \"text-primary-hover-color\",\r\n              },\r\n              active: {\r\n                backgroundColor: \"color-basic-transparent-active\",\r\n              },\r\n              selected: {\r\n                backgroundColor: \"color-primary-transparent-default\",\r\n                indicatorWidth: 4,\r\n                indicatorBackgroundColor: \"color-primary-default\",\r\n                titleColor: \"text-primary-color\",\r\n                iconTintColor: \"text-primary-color\",\r\n              },\r\n              disabled: {\r\n                titleColor: \"text-disabled-color\",\r\n                iconTintColor: \"text-disabled-color\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n        grouped: {\r\n          mapping: {\r\n            paddingLeft: 16,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    OverflowMenu: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          width: {\r\n            type: \"number\",\r\n          },\r\n          maxHeight: {\r\n            type: \"number\",\r\n          },\r\n          borderRadius: {\r\n            type: \"number\",\r\n          },\r\n          indicatorBackgroundColor: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n          noDivider: {\r\n            default: false,\r\n          },\r\n        },\r\n        states: {},\r\n        variantGroups: {},\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            maxHeight: 256,\r\n            borderRadius: \"border-radius\",\r\n            indicatorBackgroundColor: \"transparent\",\r\n          },\r\n        },\r\n        noDivider: {\r\n          mapping: {},\r\n        },\r\n      },\r\n    },\r\n    Popover: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          borderRadius: {\r\n            type: \"number\",\r\n          },\r\n          borderWidth: {\r\n            type: \"number\",\r\n          },\r\n          borderColor: {\r\n            type: \"number\",\r\n          },\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          indicatorWidth: {\r\n            type: \"number\",\r\n          },\r\n          indicatorHeight: {\r\n            type: \"number\",\r\n          },\r\n          indicatorBackgroundColor: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {},\r\n        states: {},\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            borderRadius: \"border-radius\",\r\n            borderWidth: \"border-width\",\r\n            borderColor: \"border-basic-color-3\",\r\n            backgroundColor: \"background-basic-color-2\",\r\n            indicatorWidth: 6,\r\n            indicatorHeight: 6,\r\n            indicatorBackgroundColor: \"background-basic-color-2\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    Select: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          minWidth: {\r\n            type: \"number\",\r\n          },\r\n          minHeight: {\r\n            type: \"number\",\r\n          },\r\n          paddingHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          paddingVertical: {\r\n            type: \"number\",\r\n          },\r\n          borderRadius: {\r\n            type: \"number\",\r\n          },\r\n          borderColor: {\r\n            type: \"string\",\r\n          },\r\n          borderWidth: {\r\n            type: \"number\",\r\n          },\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          placeholderMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          placeholderFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          placeholderFontSize: {\r\n            type: \"number\",\r\n          },\r\n          placeholderFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          placeholderColor: {\r\n            type: \"string\",\r\n          },\r\n          textMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          textFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          textFontSize: {\r\n            type: \"number\",\r\n          },\r\n          textFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          textColor: {\r\n            type: \"string\",\r\n          },\r\n          iconWidth: {\r\n            type: \"number\",\r\n          },\r\n          iconHeight: {\r\n            type: \"number\",\r\n          },\r\n          iconTintColor: {\r\n            type: \"string\",\r\n          },\r\n          iconMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          popoverMaxHeight: {\r\n            type: \"number\",\r\n          },\r\n          popoverBorderRadius: {\r\n            type: \"number\",\r\n          },\r\n          popoverBorderColor: {\r\n            type: \"string\",\r\n          },\r\n          popoverBorderWidth: {\r\n            type: \"number\",\r\n          },\r\n          labelColor: {\r\n            type: \"string\",\r\n          },\r\n          labelFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          labelFontSize: {\r\n            type: \"number\",\r\n          },\r\n          labelFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          labelMarginBottom: {\r\n            type: \"number\",\r\n          },\r\n          captionMarginTop: {\r\n            type: \"number\",\r\n          },\r\n          captionColor: {\r\n            type: \"string\",\r\n          },\r\n          captionFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          captionFontSize: {\r\n            type: \"number\",\r\n          },\r\n          captionFontWeight: {\r\n            type: \"number\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {\r\n          status: {\r\n            basic: {\r\n              default: true,\r\n            },\r\n            primary: {\r\n              default: false,\r\n            },\r\n            success: {\r\n              default: false,\r\n            },\r\n            info: {\r\n              default: false,\r\n            },\r\n            warning: {\r\n              default: false,\r\n            },\r\n            danger: {\r\n              default: false,\r\n            },\r\n            control: {\r\n              default: false,\r\n            },\r\n          },\r\n          size: {\r\n            small: {\r\n              default: false,\r\n            },\r\n            medium: {\r\n              default: false,\r\n            },\r\n            large: {\r\n              default: true,\r\n            },\r\n          },\r\n        },\r\n        states: {\r\n          hover: {\r\n            default: false,\r\n            priority: 0,\r\n            scope: \"all\",\r\n          },\r\n          disabled: {\r\n            default: false,\r\n            priority: 1,\r\n            scope: \"all\",\r\n          },\r\n          active: {\r\n            default: false,\r\n            priority: 2,\r\n            scope: \"all\",\r\n          },\r\n          focused: {\r\n            default: false,\r\n            priority: 3,\r\n            scope: \"all\",\r\n          },\r\n        },\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            paddingHorizontal: 8,\r\n            iconWidth: 24,\r\n            iconHeight: 24,\r\n            iconMarginHorizontal: 8,\r\n            placeholderMarginHorizontal: 8,\r\n            textMarginHorizontal: 8,\r\n            textFontFamily: \"text-subtitle-2-font-family\",\r\n            placeholderFontFamily: \"text-paragraph-1-font-family\",\r\n            labelMarginBottom: 4,\r\n            labelFontSize: \"text-label-font-size\",\r\n            labelFontWeight: \"text-label-font-weight\",\r\n            labelFontFamily: \"text-label-font-family\",\r\n            captionMarginTop: 4,\r\n            captionFontSize: \"text-caption-1-font-size\",\r\n            captionFontWeight: \"text-caption-1-font-weight\",\r\n            captionFontFamily: \"text-caption-1-font-family\",\r\n            popoverMaxHeight: 220,\r\n            popoverBorderRadius: \"border-radius\",\r\n            popoverBorderWidth: \"border-width\",\r\n            popoverBorderColor: \"border-basic-color-4\",\r\n          },\r\n          variantGroups: {\r\n            status: {\r\n              basic: {\r\n                borderColor: \"border-basic-color-4\",\r\n                backgroundColor: \"background-basic-color-2\",\r\n                textColor: \"text-basic-color\",\r\n                labelColor: \"text-hint-color\",\r\n                captionColor: \"text-hint-color\",\r\n                placeholderColor: \"text-hint-color\",\r\n                iconTintColor: \"text-hint-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-primary-default\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-3\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-primary-default\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-2\",\r\n                    textColor: \"text-disabled-color\",\r\n                    labelColor: \"text-disabled-color\",\r\n                    captionColor: \"text-disabled-color\",\r\n                    placeholderColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                    captionIconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              primary: {\r\n                borderColor: \"color-primary-default\",\r\n                backgroundColor: \"background-basic-color-2\",\r\n                textColor: \"text-basic-color\",\r\n                labelColor: \"text-hint-color\",\r\n                captionColor: \"text-primary-color\",\r\n                placeholderColor: \"text-hint-color\",\r\n                iconTintColor: \"text-hint-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-primary-focus\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-primary-hover\",\r\n                    backgroundColor: \"background-basic-color-3\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-primary-active\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                    iconTintColor: \"text-basic-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-2\",\r\n                    textColor: \"text-disabled-color\",\r\n                    labelColor: \"text-disabled-color\",\r\n                    captionColor: \"text-disabled-color\",\r\n                    placeholderColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                    captionIconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              success: {\r\n                borderColor: \"color-success-default\",\r\n                backgroundColor: \"background-basic-color-2\",\r\n                textColor: \"text-basic-color\",\r\n                labelColor: \"text-hint-color\",\r\n                captionColor: \"text-success-color\",\r\n                placeholderColor: \"text-hint-color\",\r\n                iconTintColor: \"text-hint-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-success-focus\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-success-hover\",\r\n                    backgroundColor: \"background-basic-color-3\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-success-active\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                    iconTintColor: \"text-basic-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-2\",\r\n                    textColor: \"text-disabled-color\",\r\n                    labelColor: \"text-disabled-color\",\r\n                    captionColor: \"text-disabled-color\",\r\n                    placeholderColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                    captionIconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              info: {\r\n                borderColor: \"color-info-default\",\r\n                backgroundColor: \"background-basic-color-2\",\r\n                textColor: \"text-basic-color\",\r\n                labelColor: \"text-hint-color\",\r\n                captionColor: \"text-info-color\",\r\n                placeholderColor: \"text-hint-color\",\r\n                iconTintColor: \"text-hint-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-info-focus\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-info-hover\",\r\n                    backgroundColor: \"background-basic-color-3\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-info-active\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                    iconTintColor: \"text-basic-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-2\",\r\n                    textColor: \"text-disabled-color\",\r\n                    labelColor: \"text-disabled-color\",\r\n                    captionColor: \"text-disabled-color\",\r\n                    placeholderColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                    captionIconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              warning: {\r\n                borderColor: \"color-warning-default\",\r\n                backgroundColor: \"background-basic-color-2\",\r\n                textColor: \"text-basic-color\",\r\n                labelColor: \"text-hint-color\",\r\n                captionColor: \"text-warning-color\",\r\n                placeholderColor: \"text-hint-color\",\r\n                iconTintColor: \"text-hint-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-warning-focus\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-warning-hover\",\r\n                    backgroundColor: \"background-basic-color-3\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-warning-active\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                    iconTintColor: \"text-basic-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-2\",\r\n                    textColor: \"text-disabled-color\",\r\n                    labelColor: \"text-disabled-color\",\r\n                    captionColor: \"text-disabled-color\",\r\n                    placeholderColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                    captionIconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              danger: {\r\n                borderColor: \"color-danger-default\",\r\n                backgroundColor: \"background-basic-color-2\",\r\n                textColor: \"text-basic-color\",\r\n                labelColor: \"text-hint-color\",\r\n                captionColor: \"text-danger-color\",\r\n                placeholderColor: \"text-hint-color\",\r\n                iconTintColor: \"text-hint-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-danger-focus\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-danger-hover\",\r\n                    backgroundColor: \"background-basic-color-3\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-danger-active\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                    iconTintColor: \"text-basic-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-2\",\r\n                    textColor: \"text-disabled-color\",\r\n                    labelColor: \"text-disabled-color\",\r\n                    captionColor: \"text-disabled-color\",\r\n                    placeholderColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                    captionIconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n              control: {\r\n                borderColor: \"color-basic-control-transparent-500\",\r\n                backgroundColor: \"color-basic-control-transparent-300\",\r\n                textColor: \"text-control-color\",\r\n                labelColor: \"text-control-color\",\r\n                captionColor: \"text-control-color\",\r\n                placeholderColor: \"text-control-color\",\r\n                iconTintColor: \"text-control-color\",\r\n                state: {\r\n                  focused: {\r\n                    borderColor: \"color-control-transparent-focus-border\",\r\n                    backgroundColor: \"color-basic-control-transparent-500\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-control-transparent-hover-border\",\r\n                    backgroundColor: \"color-basic-control-transparent-400\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-control-transparent-active-border\",\r\n                    backgroundColor: \"background-basic-color-1\",\r\n                    iconTintColor: \"text-basic-color\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"border-basic-color-4\",\r\n                    backgroundColor: \"background-basic-color-2\",\r\n                    textColor: \"text-disabled-color\",\r\n                    labelColor: \"text-disabled-color\",\r\n                    captionColor: \"text-disabled-color\",\r\n                    placeholderColor: \"text-disabled-color\",\r\n                    iconTintColor: \"text-disabled-color\",\r\n                    captionIconTintColor: \"text-disabled-color\",\r\n                  },\r\n                },\r\n              },\r\n            },\r\n            size: {\r\n              small: {\r\n                borderRadius: \"border-radius\",\r\n                borderWidth: \"border-width\",\r\n                minHeight: \"size-small\",\r\n                paddingVertical: 3,\r\n                textFontSize: \"text-subtitle-2-font-size\",\r\n                textFontWeight: \"text-subtitle-2-font-weight\",\r\n                placeholderFontSize: \"text-paragraph-1-font-size\",\r\n                placeholderFontWeight: \"text-paragraph-1-font-weight\",\r\n              },\r\n              medium: {\r\n                borderRadius: \"border-radius\",\r\n                borderWidth: \"border-width\",\r\n                minHeight: \"size-medium\",\r\n                paddingVertical: 7,\r\n                textFontSize: \"text-subtitle-1-font-size\",\r\n                textFontWeight: \"text-subtitle-1-font-weight\",\r\n                placeholderFontSize: \"text-paragraph-1-font-size\",\r\n                placeholderFontWeight: \"text-paragraph-1-font-weight\",\r\n              },\r\n              large: {\r\n                borderRadius: \"border-radius\",\r\n                borderWidth: \"border-width\",\r\n                minHeight: \"size-large\",\r\n                paddingVertical: 11,\r\n                textFontSize: \"text-subtitle-1-font-size\",\r\n                textFontWeight: \"text-subtitle-1-font-weight\",\r\n                placeholderFontSize: \"text-paragraph-1-font-size\",\r\n                placeholderFontWeight: \"text-paragraph-1-font-weight\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    SelectOption: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          paddingHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          paddingVertical: {\r\n            type: \"number\",\r\n          },\r\n          paddingLeft: {\r\n            type: \"number\",\r\n          },\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          iconWidth: {\r\n            type: \"number\",\r\n          },\r\n          iconHeight: {\r\n            type: \"number\",\r\n          },\r\n          iconMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          iconTintColor: {\r\n            type: \"string\",\r\n          },\r\n          textMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          textFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          textFontSize: {\r\n            type: \"number\",\r\n          },\r\n          textFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          textColor: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n          grouped: {\r\n            default: false,\r\n          },\r\n        },\r\n        variantGroups: {},\r\n        states: {\r\n          hover: {\r\n            default: false,\r\n            priority: 0,\r\n            scope: \"all\",\r\n          },\r\n          disabled: {\r\n            default: false,\r\n            priority: 1,\r\n            scope: \"all\",\r\n          },\r\n          selected: {\r\n            default: false,\r\n            priority: 2,\r\n            scope: \"all\",\r\n          },\r\n          active: {\r\n            default: false,\r\n            priority: 3,\r\n            scope: \"all\",\r\n          },\r\n          focused: {\r\n            default: false,\r\n            priority: 4,\r\n            scope: \"all\",\r\n          },\r\n        },\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            paddingHorizontal: 8,\r\n            paddingVertical: 12,\r\n            backgroundColor: \"background-basic-color-1\",\r\n            textMarginHorizontal: 8,\r\n            textFontSize: \"text-subtitle-1-font-size\",\r\n            textFontWeight: \"text-subtitle-1-font-weight\",\r\n            textFontFamily: \"text-subtitle-1-font-family\",\r\n            textColor: \"text-basic-color\",\r\n            iconWidth: 20,\r\n            iconHeight: 20,\r\n            iconMarginHorizontal: 8,\r\n            iconTintColor: \"text-hint-color\",\r\n            state: {\r\n              hover: {\r\n                iconTintColor: \"text-primary-hover-color\",\r\n                backgroundColor: \"color-basic-transparent-hover\",\r\n              },\r\n              active: {\r\n                backgroundColor: \"color-basic-transparent-active\",\r\n              },\r\n              selected: {\r\n                backgroundColor: \"color-primary-transparent-default\",\r\n                textColor: \"text-basic-color\",\r\n                iconTintColor: \"text-primary-color\",\r\n              },\r\n              \"selected.hover\": {\r\n                \"background-color\": \"color-primary-transparent-100\",\r\n                textColor: \"text-basic-color\",\r\n              },\r\n              disabled: {\r\n                backgroundColor: \"background-basic-color-1\",\r\n                textColor: \"text-disabled-color\",\r\n                iconTintColor: \"text-disabled-color\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n        grouped: {\r\n          mapping: {\r\n            paddingLeft: 16,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    Radio: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          width: {\r\n            type: \"number\",\r\n          },\r\n          height: {\r\n            type: \"number\",\r\n          },\r\n          borderRadius: {\r\n            type: \"number\",\r\n          },\r\n          borderWidth: {\r\n            type: \"number\",\r\n          },\r\n          borderColor: {\r\n            type: \"string\",\r\n          },\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          textColor: {\r\n            type: \"string\",\r\n          },\r\n          textFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          textMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          textFontSize: {\r\n            type: \"number\",\r\n          },\r\n          textFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          iconWidth: {\r\n            type: \"number\",\r\n          },\r\n          iconHeight: {\r\n            type: \"number\",\r\n          },\r\n          iconBorderRadius: {\r\n            type: \"number\",\r\n          },\r\n          iconTintColor: {\r\n            type: \"string\",\r\n          },\r\n          outlineWidth: {\r\n            type: \"number\",\r\n          },\r\n          outlineHeight: {\r\n            type: \"number\",\r\n          },\r\n          outlineBorderRadius: {\r\n            type: \"number\",\r\n          },\r\n          outlineBackgroundColor: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {\r\n          status: {\r\n            basic: {\r\n              default: true,\r\n            },\r\n            primary: {\r\n              default: false,\r\n            },\r\n            success: {\r\n              default: false,\r\n            },\r\n            info: {\r\n              default: false,\r\n            },\r\n            warning: {\r\n              default: false,\r\n            },\r\n            danger: {\r\n              default: false,\r\n            },\r\n            control: {\r\n              default: false,\r\n            },\r\n          },\r\n        },\r\n        states: {\r\n          checked: {\r\n            default: false,\r\n            priority: 0,\r\n            scope: \"all\",\r\n          },\r\n          hover: {\r\n            default: false,\r\n            priority: 1,\r\n            scope: \"all\",\r\n          },\r\n          disabled: {\r\n            default: false,\r\n            priority: 2,\r\n            scope: \"all\",\r\n          },\r\n          active: {\r\n            default: false,\r\n            priority: 3,\r\n            scope: \"all\",\r\n          },\r\n          focused: {\r\n            default: false,\r\n            priority: 4,\r\n            scope: \"all\",\r\n          },\r\n        },\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            width: 20,\r\n            height: 20,\r\n            borderRadius: 10,\r\n            borderWidth: \"border-width\",\r\n            iconWidth: 12,\r\n            iconHeight: 12,\r\n            iconBorderRadius: 6,\r\n            iconTintColor: \"transparent\",\r\n            outlineWidth: 32,\r\n            outlineHeight: 32,\r\n            outlineBorderRadius: 16,\r\n            outlineBackgroundColor: \"transparent\",\r\n            textMarginHorizontal: 12,\r\n            textFontSize: \"text-subtitle-2-font-size\",\r\n            textFontWeight: \"text-subtitle-2-font-weight\",\r\n            textFontFamily: \"text-subtitle-2-font-family\",\r\n          },\r\n          variantGroups: {\r\n            status: {\r\n              basic: {\r\n                borderColor: \"color-basic-transparent-default-border\",\r\n                backgroundColor: \"color-basic-transparent-default\",\r\n                textColor: \"text-basic-color\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-primary-default-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-primary-default\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-primary-transparent-focus-border\",\r\n                    backgroundColor: \"color-primary-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-primary-focus-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-primary-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-primary-transparent-hover-border\",\r\n                    backgroundColor: \"color-primary-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-primary-hover-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-primary-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-primary-transparent-active-border\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-primary-active-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-primary-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-basic-transparent-disabled-border\",\r\n                    backgroundColor: \"color-basic-transparent-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    borderColor: \"color-basic-transparent-600\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-basic-transparent-600\",\r\n                  },\r\n                },\r\n              },\r\n              primary: {\r\n                borderColor: \"color-primary-transparent-default-border\",\r\n                backgroundColor: \"color-primary-transparent-default\",\r\n                textColor: \"text-basic-color\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-primary-default-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-primary-default\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-primary-transparent-focus-border\",\r\n                    backgroundColor: \"color-primary-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-primary-focus-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-primary-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-primary-transparent-hover-border\",\r\n                    backgroundColor: \"color-primary-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-primary-hover-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-primary-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-primary-transparent-active-border\",\r\n                    backgroundColor: \"color-primary-transparent-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-primary-active-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-primary-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-basic-transparent-disabled-border\",\r\n                    backgroundColor: \"color-basic-transparent-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    borderColor: \"color-basic-transparent-600\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-basic-transparent-600\",\r\n                  },\r\n                },\r\n              },\r\n              success: {\r\n                borderColor: \"color-success-transparent-default-border\",\r\n                backgroundColor: \"color-success-transparent-default\",\r\n                textColor: \"text-basic-color\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-success-default-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-success-default\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-success-transparent-focus-border\",\r\n                    backgroundColor: \"color-success-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-success-focus-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-success-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-success-transparent-hover-border\",\r\n                    backgroundColor: \"color-success-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-success-default-hover\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-success-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-success-transparent-active-border\",\r\n                    backgroundColor: \"color-success-transparent-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-success-active-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-success-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-basic-transparent-disabled-border\",\r\n                    backgroundColor: \"color-basic-transparent-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    borderColor: \"color-basic-transparent-600\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-basic-transparent-600\",\r\n                  },\r\n                },\r\n              },\r\n              info: {\r\n                borderColor: \"color-info-transparent-default-border\",\r\n                backgroundColor: \"color-info-transparent-default\",\r\n                textColor: \"text-basic-color\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-info-default-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-info-default\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-info-transparent-focus-border\",\r\n                    backgroundColor: \"color-info-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-info-focus-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-info-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-info-transparent-hover-border\",\r\n                    backgroundColor: \"color-info-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-info-default-hover\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-info-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-info-transparent-active-border\",\r\n                    backgroundColor: \"color-info-transparent-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-info-active-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-info-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-basic-transparent-disabled-border\",\r\n                    backgroundColor: \"color-basic-transparent-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    borderColor: \"color-basic-transparent-600\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-basic-transparent-600\",\r\n                  },\r\n                },\r\n              },\r\n              warning: {\r\n                borderColor: \"color-warning-transparent-default-border\",\r\n                backgroundColor: \"color-warning-transparent-default\",\r\n                textColor: \"text-basic-color\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-warning-default-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-warning-default\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-warning-transparent-focus-border\",\r\n                    backgroundColor: \"color-warning-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-warning-focus-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-warning-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-warning-transparent-hover-border\",\r\n                    backgroundColor: \"color-warning-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-warning-default-hover\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-warning-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-warning-transparent-active-border\",\r\n                    backgroundColor: \"color-warning-transparent-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-warning-active-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-warning-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-basic-transparent-disabled-border\",\r\n                    backgroundColor: \"color-basic-transparent-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    borderColor: \"color-basic-transparent-600\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-basic-transparent-600\",\r\n                  },\r\n                },\r\n              },\r\n              danger: {\r\n                borderColor: \"color-danger-transparent-default-border\",\r\n                backgroundColor: \"color-danger-transparent-default\",\r\n                textColor: \"text-basic-color\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-danger-default-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-danger-default\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-danger-transparent-focus-border\",\r\n                    backgroundColor: \"color-danger-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-danger-focus-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-danger-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-danger-transparent-hover-border\",\r\n                    backgroundColor: \"color-danger-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-danger-default-hover\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-danger-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-danger-transparent-active-border\",\r\n                    backgroundColor: \"color-danger-transparent-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-danger-active-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-danger-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-basic-transparent-disabled-border\",\r\n                    backgroundColor: \"color-basic-transparent-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    borderColor: \"color-basic-transparent-600\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-basic-transparent-600\",\r\n                  },\r\n                },\r\n              },\r\n              control: {\r\n                borderColor: \"color-control-transparent-default-border\",\r\n                backgroundColor: \"color-control-transparent-default\",\r\n                textColor: \"text-control-color\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-control-default-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-control-default\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-control-transparent-focus-border\",\r\n                    backgroundColor: \"color-control-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-control-focus-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-control-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-control-transparent-hover-border\",\r\n                    backgroundColor: \"color-control-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-control-hover-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-control-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-control-transparent-active-border\",\r\n                    backgroundColor: \"color-control-transparent-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-control-active-border\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-control-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-control-transparent-disabled-border\",\r\n                    backgroundColor: \"color-control-transparent-disabled\",\r\n                    textColor: \"text-control-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    borderColor: \"color-basic-transparent-600\",\r\n                    backgroundColor: \"transparent\",\r\n                    iconTintColor: \"color-basic-transparent-600\",\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    RadioGroup: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          itemMarginVertical: {\r\n            type: \"number\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {},\r\n        states: {},\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            itemMarginVertical: 8,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    Spinner: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          width: {\r\n            type: \"number\",\r\n          },\r\n          height: {\r\n            type: \"number\",\r\n          },\r\n          borderWidth: {\r\n            type: \"number\",\r\n          },\r\n          borderRadius: {\r\n            type: \"number\",\r\n          },\r\n          borderColor: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {\r\n          status: {\r\n            basic: {\r\n              default: false,\r\n            },\r\n            primary: {\r\n              default: true,\r\n            },\r\n            success: {\r\n              default: false,\r\n            },\r\n            info: {\r\n              default: false,\r\n            },\r\n            warning: {\r\n              default: false,\r\n            },\r\n            danger: {\r\n              default: false,\r\n            },\r\n            control: {\r\n              default: false,\r\n            },\r\n          },\r\n          size: {\r\n            tiny: {\r\n              default: false,\r\n            },\r\n            small: {\r\n              default: false,\r\n            },\r\n            medium: {\r\n              default: false,\r\n            },\r\n            large: {\r\n              default: true,\r\n            },\r\n            giant: {\r\n              default: false,\r\n            },\r\n          },\r\n        },\r\n        states: {},\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {},\r\n          variantGroups: {\r\n            status: {\r\n              basic: {\r\n                borderColor: \"color-basic-default\",\r\n              },\r\n              primary: {\r\n                borderColor: \"color-primary-default\",\r\n              },\r\n              success: {\r\n                borderColor: \"color-success-default\",\r\n              },\r\n              info: {\r\n                borderColor: \"color-info-default\",\r\n              },\r\n              warning: {\r\n                borderColor: \"color-warning-default\",\r\n              },\r\n              danger: {\r\n                borderColor: \"color-danger-default\",\r\n              },\r\n              control: {\r\n                borderColor: \"color-control-default\",\r\n              },\r\n            },\r\n            size: {\r\n              tiny: {\r\n                width: 16,\r\n                height: 16,\r\n                borderRadius: 8,\r\n                borderWidth: 2.3,\r\n              },\r\n              small: {\r\n                width: 20,\r\n                height: 20,\r\n                borderRadius: 10,\r\n                borderWidth: 2.8,\r\n              },\r\n              medium: {\r\n                width: 24,\r\n                height: 24,\r\n                borderRadius: 12,\r\n                borderWidth: 3.4,\r\n              },\r\n              large: {\r\n                width: 28,\r\n                height: 28,\r\n                borderRadius: 14,\r\n                borderWidth: 3.9,\r\n              },\r\n              giant: {\r\n                width: 32,\r\n                height: 32,\r\n                borderRadius: 16,\r\n                borderWidth: 4.5,\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    Tab: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          textFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          textFontSize: {\r\n            type: \"number\",\r\n          },\r\n          textFontWeight: {\r\n            type: \"number\",\r\n          },\r\n          textMarginVertical: {\r\n            type: \"number\",\r\n          },\r\n          textColor: {\r\n            type: \"string\",\r\n          },\r\n          iconWidth: {\r\n            type: \"number\",\r\n          },\r\n          iconHeight: {\r\n            type: \"number\",\r\n          },\r\n          iconMarginVertical: {\r\n            type: \"number\",\r\n          },\r\n          iconTintColor: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {},\r\n        states: {\r\n          selected: {\r\n            default: false,\r\n            priority: 0,\r\n            scope: \"all\",\r\n          },\r\n          hover: {\r\n            default: false,\r\n            priority: 1,\r\n            scope: \"all\",\r\n          },\r\n          focused: {\r\n            default: false,\r\n            priority: 2,\r\n            scope: \"all\",\r\n          },\r\n        },\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            textMarginVertical: 2,\r\n            textFontSize: 14,\r\n            textFontWeight: \"bold\",\r\n            textFontFamily: \"text-font-family\",\r\n            textColor: \"text-hint-color\",\r\n            iconWidth: 24,\r\n            iconHeight: 24,\r\n            iconMarginVertical: 2,\r\n            iconTintColor: \"text-hint-color\",\r\n            state: {\r\n              hover: {\r\n                textColor: \"text-primary-hover-color\",\r\n                iconTintColor: \"text-primary-hover-color\",\r\n              },\r\n              selected: {\r\n                textColor: \"text-primary-color\",\r\n                iconTintColor: \"text-primary-color\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    TabBar: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          paddingVertical: {\r\n            type: \"number\",\r\n          },\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          indicatorHeight: {\r\n            type: \"number\",\r\n          },\r\n          indicatorBorderRadius: {\r\n            type: \"number\",\r\n          },\r\n          indicatorBackgroundColor: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {},\r\n        states: {},\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            paddingVertical: 4,\r\n            backgroundColor: \"background-basic-color-1\",\r\n            indicatorHeight: 4,\r\n            indicatorBorderRadius: 2,\r\n            indicatorBackgroundColor: \"color-primary-default\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    Text: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          fontFamily: {\r\n            type: \"string\",\r\n          },\r\n          fontSize: {\r\n            type: \"number\",\r\n          },\r\n          fontWeight: {\r\n            type: \"string\",\r\n          },\r\n          color: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n          alternative: {\r\n            default: false,\r\n          },\r\n          hint: {\r\n            default: false,\r\n          },\r\n        },\r\n        variantGroups: {\r\n          category: {\r\n            h1: {\r\n              default: false,\r\n            },\r\n            h2: {\r\n              default: false,\r\n            },\r\n            h3: {\r\n              default: false,\r\n            },\r\n            h4: {\r\n              default: false,\r\n            },\r\n            h5: {\r\n              default: false,\r\n            },\r\n            h6: {\r\n              default: false,\r\n            },\r\n            s1: {\r\n              default: false,\r\n            },\r\n            s2: {\r\n              default: false,\r\n            },\r\n            p1: {\r\n              default: true,\r\n            },\r\n            p2: {\r\n              default: false,\r\n            },\r\n            c1: {\r\n              default: false,\r\n            },\r\n            c2: {\r\n              default: false,\r\n            },\r\n            label: {\r\n              default: false,\r\n            },\r\n          },\r\n          status: {\r\n            basic: {\r\n              default: false,\r\n            },\r\n            primary: {\r\n              default: false,\r\n            },\r\n            success: {\r\n              default: false,\r\n            },\r\n            info: {\r\n              default: false,\r\n            },\r\n            warning: {\r\n              default: false,\r\n            },\r\n            danger: {\r\n              default: false,\r\n            },\r\n            control: {\r\n              default: false,\r\n            },\r\n          },\r\n        },\r\n        states: {},\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            color: \"text-basic-color\",\r\n          },\r\n          variantGroups: {\r\n            category: {\r\n              h1: {\r\n                fontSize: \"text-heading-1-font-size\",\r\n                fontWeight: \"text-heading-1-font-weight\",\r\n                fontFamily: \"text-heading-1-font-family\",\r\n              },\r\n              h2: {\r\n                fontSize: \"text-heading-2-font-size\",\r\n                fontWeight: \"text-heading-2-font-weight\",\r\n                fontFamily: \"text-heading-2-font-family\",\r\n              },\r\n              h3: {\r\n                fontSize: \"text-heading-3-font-size\",\r\n                fontWeight: \"text-heading-3-font-weight\",\r\n                fontFamily: \"text-heading-3-font-family\",\r\n              },\r\n              h4: {\r\n                fontSize: \"text-heading-4-font-size\",\r\n                fontWeight: \"text-heading-4-font-weight\",\r\n                fontFamily: \"text-heading-4-font-family\",\r\n              },\r\n              h5: {\r\n                fontSize: \"text-heading-5-font-size\",\r\n                fontWeight: \"text-heading-5-font-weight\",\r\n                fontFamily: \"text-heading-5-font-family\",\r\n              },\r\n              h6: {\r\n                fontSize: \"text-heading-6-font-size\",\r\n                fontWeight: \"text-heading-6-font-weight\",\r\n                fontFamily: \"text-heading-6-font-family\",\r\n              },\r\n              s1: {\r\n                fontSize: \"text-subtitle-1-font-size\",\r\n                fontWeight: \"text-subtitle-1-font-weight\",\r\n                fontFamily: \"text-subtitle-1-font-family\",\r\n              },\r\n              s2: {\r\n                fontSize: \"text-subtitle-2-font-size\",\r\n                fontWeight: \"text-subtitle-2-font-weight\",\r\n                fontFamily: \"text-subtitle-2-font-family\",\r\n              },\r\n              p1: {\r\n                fontSize: \"text-paragraph-1-font-size\",\r\n                fontWeight: \"text-paragraph-1-font-weight\",\r\n                fontFamily: \"text-paragraph-1-font-family\",\r\n              },\r\n              p2: {\r\n                fontSize: \"text-paragraph-2-font-size\",\r\n                fontWeight: \"text-paragraph-2-font-weight\",\r\n                fontFamily: \"text-paragraph-2-font-family\",\r\n              },\r\n              c1: {\r\n                fontSize: \"text-caption-1-font-size\",\r\n                fontWeight: \"text-caption-1-font-weight\",\r\n                fontFamily: \"text-caption-1-font-family\",\r\n              },\r\n              c2: {\r\n                fontSize: \"text-caption-2-font-size\",\r\n                fontWeight: \"text-caption-2-font-weight\",\r\n                fontFamily: \"text-caption-2-font-family\",\r\n              },\r\n              label: {\r\n                fontSize: \"text-label-font-size\",\r\n                fontWeight: \"text-label-font-weight\",\r\n                fontFamily: \"text-label-font-family\",\r\n              },\r\n            },\r\n            status: {\r\n              basic: {\r\n                color: \"text-basic-color\",\r\n              },\r\n              primary: {\r\n                color: \"text-primary-color\",\r\n              },\r\n              success: {\r\n                color: \"text-success-color\",\r\n              },\r\n              info: {\r\n                color: \"text-info-color\",\r\n              },\r\n              warning: {\r\n                color: \"text-warning-color\",\r\n              },\r\n              danger: {\r\n                color: \"text-danger-color\",\r\n              },\r\n              control: {\r\n                color: \"text-control-color\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n        alternative: {\r\n          mapping: {\r\n            color: \"text-alternate-color\",\r\n          },\r\n        },\r\n        hint: {\r\n          mapping: {\r\n            color: \"text-hint-color\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    Toggle: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          width: {\r\n            type: \"number\",\r\n          },\r\n          height: {\r\n            type: \"number\",\r\n          },\r\n          borderRadius: {\r\n            type: \"number\",\r\n          },\r\n          borderWidth: {\r\n            type: \"number\",\r\n          },\r\n          borderColor: {\r\n            type: \"string\",\r\n          },\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          thumbWidth: {\r\n            type: \"number\",\r\n          },\r\n          thumbHeight: {\r\n            type: \"number\",\r\n          },\r\n          thumbBorderRadius: {\r\n            type: \"number\",\r\n          },\r\n          thumbBackgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          textMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          textFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          textFontSize: {\r\n            type: \"number\",\r\n          },\r\n          textFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          textColor: {\r\n            type: \"string\",\r\n          },\r\n          iconWidth: {\r\n            type: \"number\",\r\n          },\r\n          iconHeight: {\r\n            type: \"number\",\r\n          },\r\n          iconTintColor: {\r\n            type: \"string\",\r\n          },\r\n          outlineWidth: {\r\n            type: \"number\",\r\n          },\r\n          outlineHeight: {\r\n            type: \"number\",\r\n          },\r\n          outlineBorderRadius: {\r\n            type: \"number\",\r\n          },\r\n          outlineBackgroundColor: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {\r\n          status: {\r\n            basic: {\r\n              default: true,\r\n            },\r\n            primary: {\r\n              default: false,\r\n            },\r\n            success: {\r\n              default: false,\r\n            },\r\n            info: {\r\n              default: false,\r\n            },\r\n            warning: {\r\n              default: false,\r\n            },\r\n            danger: {\r\n              default: false,\r\n            },\r\n            control: {\r\n              default: false,\r\n            },\r\n          },\r\n        },\r\n        states: {\r\n          checked: {\r\n            default: false,\r\n            priority: 0,\r\n            scope: \"all\",\r\n          },\r\n          hover: {\r\n            default: false,\r\n            priority: 1,\r\n            scope: \"all\",\r\n          },\r\n          disabled: {\r\n            default: false,\r\n            priority: 2,\r\n            scope: \"all\",\r\n          },\r\n          active: {\r\n            default: false,\r\n            priority: 3,\r\n            scope: \"all\",\r\n          },\r\n          focused: {\r\n            default: false,\r\n            priority: 4,\r\n            scope: \"all\",\r\n          },\r\n        },\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            width: 52,\r\n            height: 32,\r\n            borderRadius: 16,\r\n            borderWidth: \"border-width\",\r\n            thumbWidth: 28,\r\n            thumbHeight: 28,\r\n            thumbBorderRadius: 14,\r\n            outlineWidth: 64,\r\n            outlineHeight: 42,\r\n            outlineBorderRadius: 21,\r\n            textMarginHorizontal: 12,\r\n            textFontSize: \"text-subtitle-2-font-size\",\r\n            textFontWeight: \"text-subtitle-2-font-weight\",\r\n            textFontFamily: \"text-subtitle-2-font-family\",\r\n            iconWidth: 12,\r\n            iconHeight: 12,\r\n          },\r\n          variantGroups: {\r\n            status: {\r\n              basic: {\r\n                borderColor: \"color-basic-transparent-default-border\",\r\n                backgroundColor: \"color-basic-transparent-default\",\r\n                thumbBackgroundColor: \"background-basic-color-1\",\r\n                outlineBackgroundColor: \"transparent\",\r\n                textColor: \"text-basic-color\",\r\n                iconTintColor: \"transparent\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-primary-default-border\",\r\n                    backgroundColor: \"color-primary-default\",\r\n                    iconTintColor: \"text-primary-color\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-primary-transparent-focus-border\",\r\n                    backgroundColor: \"color-primary-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-primary-focus-border\",\r\n                    backgroundColor: \"color-primary-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-primary-transparent-hover-border\",\r\n                    backgroundColor: \"color-primary-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-primary-hover-border\",\r\n                    backgroundColor: \"color-primary-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-primary-transparent-active-border\",\r\n                    backgroundColor: \"color-primary-transparent-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-primary-active-border\",\r\n                    backgroundColor: \"color-primary-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-basic-transparent-disabled-border\",\r\n                    backgroundColor: \"color-basic-transparent-disabled\",\r\n                    thumbBackgroundColor: \"color-basic-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                },\r\n              },\r\n              primary: {\r\n                borderColor: \"color-primary-transparent-default-border\",\r\n                backgroundColor: \"color-primary-transparent-default\",\r\n                thumbBackgroundColor: \"background-basic-color-1\",\r\n                outlineBackgroundColor: \"transparent\",\r\n                textColor: \"text-basic-color\",\r\n                iconTintColor: \"transparent\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-primary-default-border\",\r\n                    backgroundColor: \"color-primary-default\",\r\n                    iconTintColor: \"text-primary-color\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-primary-transparent-focus-border\",\r\n                    backgroundColor: \"color-primary-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-primary-focus-border\",\r\n                    backgroundColor: \"color-primary-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-primary-transparent-hover-border\",\r\n                    backgroundColor: \"color-primary-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-primary-hover-border\",\r\n                    backgroundColor: \"color-primary-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-primary-transparent-active-border\",\r\n                    backgroundColor: \"color-primary-transparent-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-primary-active-border\",\r\n                    backgroundColor: \"color-primary-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-basic-transparent-disabled-border\",\r\n                    backgroundColor: \"color-basic-transparent-disabled\",\r\n                    thumbBackgroundColor: \"color-basic-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                },\r\n              },\r\n              success: {\r\n                borderColor: \"color-success-transparent-default-border\",\r\n                backgroundColor: \"color-success-transparent-default\",\r\n                thumbBackgroundColor: \"background-basic-color-1\",\r\n                outlineBackgroundColor: \"transparent\",\r\n                textColor: \"text-basic-color\",\r\n                iconTintColor: \"transparent\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-success-default-border\",\r\n                    backgroundColor: \"color-success-default\",\r\n                    iconTintColor: \"text-success-color\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-success-transparent-focus-border\",\r\n                    backgroundColor: \"color-success-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-success-focus-border\",\r\n                    backgroundColor: \"color-success-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-success-transparent-hover-border\",\r\n                    backgroundColor: \"color-success-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-success-hover-border\",\r\n                    backgroundColor: \"color-success-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-success-transparent-active-border\",\r\n                    backgroundColor: \"color-success-transparent-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-success-active-border\",\r\n                    backgroundColor: \"color-success-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-basic-transparent-disabled-border\",\r\n                    backgroundColor: \"color-basic-transparent-disabled\",\r\n                    thumbBackgroundColor: \"color-basic-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                },\r\n              },\r\n              info: {\r\n                borderColor: \"color-info-transparent-default-border\",\r\n                backgroundColor: \"color-info-transparent-default\",\r\n                thumbBackgroundColor: \"background-basic-color-1\",\r\n                outlineBackgroundColor: \"transparent\",\r\n                textColor: \"text-basic-color\",\r\n                iconTintColor: \"transparent\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-info-default-border\",\r\n                    backgroundColor: \"color-info-default\",\r\n                    iconTintColor: \"text-info-color\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-info-transparent-focus-border\",\r\n                    backgroundColor: \"color-info-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-info-focus-border\",\r\n                    backgroundColor: \"color-info-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-info-transparent-hover-border\",\r\n                    backgroundColor: \"color-info-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-info-hover-border\",\r\n                    backgroundColor: \"color-info-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-info-transparent-active-border\",\r\n                    backgroundColor: \"color-info-transparent-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-info-active-border\",\r\n                    backgroundColor: \"color-info-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-basic-transparent-disabled-border\",\r\n                    backgroundColor: \"color-basic-transparent-disabled\",\r\n                    thumbBackgroundColor: \"color-basic-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                },\r\n              },\r\n              warning: {\r\n                borderColor: \"color-warning-transparent-default-border\",\r\n                backgroundColor: \"color-warning-transparent-default\",\r\n                thumbBackgroundColor: \"background-basic-color-1\",\r\n                outlineBackgroundColor: \"transparent\",\r\n                textColor: \"text-basic-color\",\r\n                iconTintColor: \"transparent\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-warning-default-border\",\r\n                    backgroundColor: \"color-warning-default\",\r\n                    iconTintColor: \"text-warning-color\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-warning-transparent-focus-border\",\r\n                    backgroundColor: \"color-warning-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-warning-focus-border\",\r\n                    backgroundColor: \"color-warning-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-warning-transparent-hover-border\",\r\n                    backgroundColor: \"color-warning-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-warning-hover-border\",\r\n                    backgroundColor: \"color-warning-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-warning-transparent-active-border\",\r\n                    backgroundColor: \"color-warning-transparent-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-warning-active-border\",\r\n                    backgroundColor: \"color-warning-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-basic-transparent-disabled-border\",\r\n                    backgroundColor: \"color-basic-transparent-disabled\",\r\n                    thumbBackgroundColor: \"color-basic-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                },\r\n              },\r\n              danger: {\r\n                borderColor: \"color-danger-transparent-default-border\",\r\n                backgroundColor: \"color-danger-transparent-default\",\r\n                thumbBackgroundColor: \"background-basic-color-1\",\r\n                outlineBackgroundColor: \"transparent\",\r\n                textColor: \"text-basic-color\",\r\n                iconTintColor: \"transparent\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-danger-default-border\",\r\n                    backgroundColor: \"color-danger-default\",\r\n                    iconTintColor: \"text-danger-color\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-danger-transparent-focus-border\",\r\n                    backgroundColor: \"color-danger-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-danger-focus-border\",\r\n                    backgroundColor: \"color-danger-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-danger-transparent-hover-border\",\r\n                    backgroundColor: \"color-danger-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-danger-hover-border\",\r\n                    backgroundColor: \"color-danger-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-danger-transparent-active-border\",\r\n                    backgroundColor: \"color-danger-transparent-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-danger-active-border\",\r\n                    backgroundColor: \"color-danger-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-basic-transparent-disabled-border\",\r\n                    backgroundColor: \"color-basic-transparent-disabled\",\r\n                    thumbBackgroundColor: \"color-basic-disabled\",\r\n                    textColor: \"text-disabled-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                },\r\n              },\r\n              control: {\r\n                borderColor: \"color-control-transparent-default-border\",\r\n                backgroundColor: \"color-control-transparent-default\",\r\n                thumbBackgroundColor: \"color-control-default\",\r\n                outlineBackgroundColor: \"transparent\",\r\n                textColor: \"text-control-color\",\r\n                iconTintColor: \"transparent\",\r\n                state: {\r\n                  checked: {\r\n                    borderColor: \"color-control-transparent-default-border\",\r\n                    backgroundColor: \"color-control-transparent-default\",\r\n                    iconTintColor: \"color-basic-800\",\r\n                  },\r\n                  focused: {\r\n                    borderColor: \"color-control-transparent-focus-border\",\r\n                    backgroundColor: \"color-control-transparent-focus\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.focused\": {\r\n                    borderColor: \"color-control-transparent-focus-border\",\r\n                    backgroundColor: \"color-control-transparent-focus\",\r\n                  },\r\n                  hover: {\r\n                    borderColor: \"color-control-transparent-hover-border\",\r\n                    backgroundColor: \"color-control-transparent-hover\",\r\n                  },\r\n                  \"checked.hover\": {\r\n                    borderColor: \"color-control-transparent-hover-border\",\r\n                    backgroundColor: \"color-control-transparent-hover\",\r\n                  },\r\n                  active: {\r\n                    borderColor: \"color-control-transparent-active-border\",\r\n                    backgroundColor: \"color-control-transparent-active\",\r\n                    outlineBackgroundColor: \"outline-color\",\r\n                  },\r\n                  \"checked.active\": {\r\n                    borderColor: \"color-control-transparent-active-border\",\r\n                    backgroundColor: \"color-control-transparent-active\",\r\n                  },\r\n                  disabled: {\r\n                    borderColor: \"color-control-transparent-disabled-border\",\r\n                    backgroundColor: \"color-control-transparent-disabled\",\r\n                    thumbBackgroundColor: \"color-basic-transparent-600\",\r\n                    textColor: \"text-control-color\",\r\n                  },\r\n                  \"checked.disabled\": {\r\n                    iconTintColor: \"text-control-color\",\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    Tooltip: {\r\n      meta: {\r\n        scope: \"all\",\r\n        parameters: {\r\n          paddingHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          paddingVertical: {\r\n            type: \"number\",\r\n          },\r\n          borderWidth: {\r\n            type: \"number\",\r\n          },\r\n          borderRadius: {\r\n            type: \"number\",\r\n          },\r\n          borderColor: {\r\n            type: \"string\",\r\n          },\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          indicatorBackgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          iconWidth: {\r\n            type: \"number\",\r\n          },\r\n          iconHeight: {\r\n            type: \"number\",\r\n          },\r\n          iconMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          iconTintColor: {\r\n            type: \"string\",\r\n          },\r\n          textMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          textFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          textFontSize: {\r\n            type: \"number\",\r\n          },\r\n          textFontWeight: {\r\n            type: \"number\",\r\n          },\r\n          textColor: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n        },\r\n        variantGroups: {},\r\n        states: {},\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            borderRadius: \"border-radius\",\r\n            borderColor: \"background-alternative-color-3\",\r\n            backgroundColor: \"background-alternative-color-3\",\r\n            paddingHorizontal: 16,\r\n            paddingVertical: 8,\r\n            indicatorBackgroundColor: \"background-alternative-color-3\",\r\n            textMarginHorizontal: 4,\r\n            textFontSize: \"text-caption-1-font-size\",\r\n            textFontWeight: \"text-caption-1-font-weight\",\r\n            textFontFamily: \"text-caption-1-font-family\",\r\n            textColor: \"text-alternate-color\",\r\n            iconWidth: 14,\r\n            iconHeight: 14,\r\n            iconMarginHorizontal: 4,\r\n            iconTintColor: \"text-alternate-color\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    TopNavigation: {\r\n      meta: {\r\n        scope: \"mobile\",\r\n        parameters: {\r\n          minHeight: {\r\n            type: \"number\",\r\n          },\r\n          paddingVertical: {\r\n            type: \"number\",\r\n          },\r\n          paddingHorizontal: {\r\n            type: \"number\",\r\n          },\r\n          backgroundColor: {\r\n            type: \"string\",\r\n          },\r\n          titleTextAlign: {\r\n            type: \"string\",\r\n          },\r\n          titleFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          titleFontSize: {\r\n            type: \"number\",\r\n          },\r\n          titleFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          titleColor: {\r\n            type: \"string\",\r\n          },\r\n          subtitleTextAlign: {\r\n            type: \"string\",\r\n          },\r\n          subtitleFontFamily: {\r\n            type: \"string\",\r\n          },\r\n          subtitleFontSize: {\r\n            type: \"number\",\r\n          },\r\n          subtitleFontWeight: {\r\n            type: \"string\",\r\n          },\r\n          subtitleColor: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n          control: {\r\n            default: false,\r\n          },\r\n        },\r\n        variantGroups: {\r\n          alignment: {\r\n            start: {\r\n              default: true,\r\n            },\r\n            center: {\r\n              default: false,\r\n            },\r\n          },\r\n        },\r\n        states: {},\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            minHeight: 56,\r\n            paddingVertical: 8,\r\n            paddingHorizontal: 8,\r\n            backgroundColor: \"background-basic-color-1\",\r\n            titleFontSize: \"text-subtitle-1-font-size\",\r\n            titleFontWeight: \"text-subtitle-1-font-weight\",\r\n            titleFontFamily: \"text-subtitle-1-font-family\",\r\n            titleColor: \"text-basic-color\",\r\n            subtitleFontSize: \"text-caption-1-font-size\",\r\n            subtitleFontWeight: \"text-caption-1-font-weight\",\r\n            subtitleFontFamily: \"text-caption-1-font-family\",\r\n            subtitleColor: \"text-hint-color\",\r\n          },\r\n          variantGroups: {\r\n            alignment: {\r\n              start: {\r\n                titleTextAlign: \"left\",\r\n                subtitleTextAlign: \"left\",\r\n              },\r\n              center: {\r\n                titleTextAlign: \"center\",\r\n                subtitleTextAlign: \"center\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n        control: {\r\n          mapping: {\r\n            backgroundColor: \"transparent\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    TopNavigationAction: {\r\n      meta: {\r\n        scope: \"mobile\",\r\n        parameters: {\r\n          iconWidth: {\r\n            type: \"number\",\r\n          },\r\n          iconHeight: {\r\n            type: \"number\",\r\n          },\r\n          iconTintColor: {\r\n            type: \"string\",\r\n          },\r\n          iconMarginHorizontal: {\r\n            type: \"number\",\r\n          },\r\n        },\r\n        appearances: {\r\n          default: {\r\n            default: true,\r\n          },\r\n          control: {\r\n            default: false,\r\n          },\r\n        },\r\n        variantGroups: {},\r\n        states: {\r\n          hover: {\r\n            default: false,\r\n            priority: 0,\r\n            scope: \"all\",\r\n          },\r\n          active: {\r\n            default: false,\r\n            priority: 1,\r\n            scope: \"all\",\r\n          },\r\n          focused: {\r\n            default: false,\r\n            priority: 2,\r\n            scope: \"all\",\r\n          },\r\n        },\r\n      },\r\n      appearances: {\r\n        default: {\r\n          mapping: {\r\n            iconWidth: 24,\r\n            iconHeight: 24,\r\n            iconMarginHorizontal: 8,\r\n            iconTintColor: \"text-basic-color\",\r\n            state: {\r\n              hover: {\r\n                iconTintColor: \"text-hint-color\",\r\n              },\r\n              focused: {\r\n                iconTintColor: \"text-hint-color\",\r\n              },\r\n              active: {\r\n                iconTintColor: \"text-hint-color\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n        control: {\r\n          mapping: {\r\n            iconTintColor: \"color-control-default\",\r\n            state: {\r\n              hover: {\r\n                iconTintColor: \"color-control-hover\",\r\n              },\r\n              focused: {\r\n                iconTintColor: \"color-control-focus\",\r\n              },\r\n              active: {\r\n                iconTintColor: \"color-control-active\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n}\r\n","import { Dimensions } from \"react-native\";\r\n\r\n/**\r\n * NOTE TO DEVS:\r\n *\r\n * Spacing should consistent and whitespace thought of as a first class technique up\r\n * there with color and typefaces.\r\n *\r\n * Which type of scale you use is based on the design.\r\n *\r\n * If you've got simpler app, you may only need 6 items.  Or maybe you want a spacing scale\r\n * to be named:\r\n *\r\n * export const spacing = {\r\n *   tiny: 4,\r\n *   small: 8,\r\n *   medium: 12,\r\n *   large: 24,\r\n *   huge: 64\r\n * }\r\n *\r\n * Whatever you choose, try to stick with these, and not freestyle it everywhere.\r\n *\r\n * Feel free to delete this block.\r\n */\r\n\r\n/**\r\n * The available spacing.\r\n *\r\n * Here's the rough guideline.  Customize this for you usage.  It's ok to put exceptions\r\n * within the components themselves if they are truly exceptions.\r\n *\r\n * 0 = none    - nothing. only here to bust out of a zero-based array.\r\n *\r\n * 1 = tiny    - elements contextually close to each other\r\n *\r\n * 2 = smaller - for groups of closely related items or perhaps borders\r\n *\r\n * 3 = small   - ?\r\n *\r\n * 4 = medium  - ?\r\n *\r\n * 5 = medium+ - ?\r\n *\r\n * 6 = large   - between groups of content that aren't related?\r\n *\r\n * 7 = huge    - ?\r\n *\r\n * 8 = massive - an uncomfortable amount of whitespace\r\n */\r\n\r\nexport const spacing = (\r\n  rate: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9,\r\n  direction: \"h\" | \"v\" = \"h\",\r\n  width?: number,\r\n  height?: number\r\n) => {\r\n  const _height = height || Dimensions.get(\"screen\").height;\r\n  const _width = width || Dimensions.get(\"screen\").width;\r\n  return Math.pow(direction == \"h\" ? _height : _width, rate / 10);\r\n};\r\n// export const spacing = [\r\n//   IS_WEB ? scale(0) : scale(0),\r\n//   IS_WEB ? scale(104) : scale(4),\r\n//   IS_WEB ? scale(108) : scale(8),\r\n//   IS_WEB ? scale(112) : scale(12),\r\n//   IS_WEB ? scale(116) : scale(16),\r\n//   IS_WEB ? scale(124) : scale(24),\r\n//   IS_WEB ? scale(132) : scale(32),\r\n//   IS_WEB ? scale(148) : scale(48),\r\n//   IS_WEB ? scale(164) : scale(64),\r\n// ];\r\n","// import * as RNLocalize from \"react-native-localize\";\r\nimport i18n from \"i18n-js\";\r\n// import en from \"./en.json\";\r\n// import vi from \"./vi.json\";\r\nimport { useSheets } from \"engines\";\r\nimport * as R from \"ramda\";\r\nimport Tabletop from \"tabletop\";\r\ntype i18nResolve = { code: \"I18N_DONE\"; lang: { en: object; vi: object } };\r\n\r\n/**\r\n * Fetch i18n tr() from sheets\r\n *\r\n * ---\r\n * @version 0.10.19\r\n * @author nguyenkhooi\r\n */\r\nexport async function fetchi18n() {\r\n  // const { data } = useSheets(0, \"i18n\");\r\n  const sheetData = await Tabletop.init({\r\n    key: \"1QkECelCYiVVxopwsZD2UsLYZdmd1vFzFc0-pLb71rX8\",\r\n    /** set `wanted` with specific `sheetName` to get data only from that sheet */\r\n    wanted: [\"i18n\"],\r\n    simpleSheet: true,\r\n  });\r\n  return new Promise<i18nResolve>((resolve, reject) => {\r\n    try {\r\n      if (!!sheetData) {\r\n        const i18nCodes = R.pluck(\"code\")(sheetData);\r\n        const i18nEns = R.pluck(\"en\")(sheetData);\r\n        const i18nVis = R.pluck(\"vi\")(sheetData);\r\n        let en = R.zipObj(i18nCodes, i18nEns);\r\n        let vi = R.zipObj(i18nCodes, i18nVis);\r\n        i18n.translations = { en, vi };\r\n        resolve({ code: \"I18N_DONE\", lang: { en, vi } });\r\n      }\r\n    } catch (error) {\r\n      console.warn(\"err useSheets: \", error);\r\n      return null;\r\n    }\r\n  });\r\n}\r\n\r\ni18n.fallbacks = true;\r\n//* In case such keyword is not in the list yet, return the keyword itself\r\ni18n.missingTranslation = function (keyword) {\r\n  return keyword;\r\n};\r\n\r\n// const fallback = { languageTag: \"en\", isRTL: false };\r\n// const { languageTag } =\r\n//   RNLocalize.findBestAvailableLanguage(Object.keys(i18n.translations)) ||\r\n//   fallback;\r\n// i18n.locale = languageTag;\r\n// i18n.locale = \"vi\";\r\n","import { useAppContext } from \"engines\";\r\nimport i18n from \"i18n-js\";\r\n\r\n/**\r\n * Translates text based on keyword (== \"en\")\r\n * If no translation found yet, it'll return the keyword\r\n * ---\r\n * @example\r\n * ```js\r\n * <Text>{tr(\"Hello\")}</Text>\r\n * ```\r\n * ---\r\n * @version 0.10.19\r\n * - *(add enumKey)*\r\n * - *(reduce function name for cleaner code)*\r\n * @author nguyenkhooi\r\n */\r\nexport function use18(key: enumKey | string, options?: i18n.TranslateOptions) {\r\n  const { lang, setLang } = useAppContext();\r\n  return lang[key] ? lang[key] : key;\r\n}\r\n\r\ntype enumKey = \"tba\";\r\n\r\nexport enum LANG {\r\n  EN = \"en\",\r\n  VI = \"vi\",\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  StyleProp,\r\n  StyleSheet,\r\n  Text,\r\n  TextStyle,\r\n  TouchableWithoutFeedback,\r\n  View,\r\n  ViewStyle\r\n} from \"react-native\";\r\n\r\nexport interface ToastOptions {\r\n  icon?: JSX.Element;\r\n  type?: \"normal\" | \"success\" | \"danger\" | \"warning\" | \"loading\";\r\n  duration?: number;\r\n  style?: StyleProp<ViewStyle>;\r\n  textStyle?: StyleProp<TextStyle>;\r\n\r\n  successIcon?: JSX.Element;\r\n  dangerIcon?: JSX.Element;\r\n  warningIcon?: JSX.Element;\r\n  loadingIcon?: JSX.Element;\r\n\r\n  successColor?: string;\r\n  dangerColor?: string;\r\n  warningColor?: string;\r\n\r\n  onPress?(id: string): void;\r\n}\r\n\r\nexport interface ToastProps extends ToastOptions {\r\n  id: string;\r\n  onClose(): void;\r\n  message: string | JSX.Element;\r\n  placement?: \"top\" | \"bottom\";\r\n}\r\n\r\nexport function Toast(props: ToastProps) {\r\n  const {\r\n    id,\r\n    onClose,\r\n    icon,\r\n    type = \"normal\",\r\n    message,\r\n    duration = 3000,\r\n    style,\r\n    textStyle,\r\n\r\n    successIcon,\r\n    dangerIcon,\r\n    warningIcon,\r\n    loadingIcon = <ActivityIndicator size=\"small\" color=\"white\" />,\r\n\r\n    successColor,\r\n    dangerColor,\r\n    warningColor,\r\n\r\n    placement,\r\n\r\n    onPress,\r\n  } = props;\r\n  const refCtnr = useRef<View>(null);\r\n  const [animation] = useState(new Animated.Value(0));\r\n\r\n  let _icon: JSX.Element;\r\n\r\n  useEffect(() => {\r\n    Animated.timing(animation, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n      duration: 250,\r\n    }).start();\r\n\r\n    let closeTimeout: NodeJS.Timeout | null = null;\r\n\r\n    if (duration !== 0 && typeof duration === \"number\") {\r\n      closeTimeout = global.setTimeout(() => {\r\n        Animated.timing(animation, {\r\n          toValue: 0,\r\n          useNativeDriver: true,\r\n          duration: 250,\r\n        }).start(() => onClose());\r\n      }, duration);\r\n    }\r\n\r\n    return () => {\r\n      closeTimeout && global.clearTimeout(closeTimeout);\r\n    };\r\n  }, []);\r\n\r\n  if (icon === undefined) {\r\n    switch (type) {\r\n      case \"success\": {\r\n        !!successIcon && (_icon = successIcon);\r\n        break;\r\n      }\r\n\r\n      case \"danger\": {\r\n        !!dangerIcon && (_icon = dangerIcon);\r\n        break;\r\n      }\r\n      case \"warning\": {\r\n        !!warningIcon && (_icon = warningIcon);\r\n        break;\r\n      }\r\n      case \"loading\": {\r\n        !!loadingIcon && (_icon = loadingIcon);\r\n      }\r\n    }\r\n  } else _icon = icon;\r\n\r\n  const animationStyle = {\r\n    opacity: animation,\r\n    transform: [\r\n      {\r\n        translateY: animation.interpolate({\r\n          inputRange: [0, 1],\r\n          outputRange: placement === \"bottom\" ? [20, 0] : [0, 20], // 0 : 150, 0.5 : 75, 1 : 0\r\n        }),\r\n      },\r\n    ],\r\n  };\r\n\r\n  let backgroundColor = \"#333\";\r\n  switch (type) {\r\n    case \"success\":\r\n      backgroundColor = successColor || \"#00C851\";\r\n      break;\r\n    case \"danger\":\r\n      backgroundColor = dangerColor || \"#ff4444\";\r\n      break;\r\n    case \"warning\":\r\n      backgroundColor = warningColor || \"#ffbb33\";\r\n    default:\r\n      backgroundColor = \"#333\";\r\n  }\r\n\r\n  const renderToast = () => (\r\n    <Animated.View\r\n      ref={refCtnr}\r\n      style={[styles.container, animationStyle, { backgroundColor }, style]}\r\n    >\r\n      {_icon ? <View style={styles.iconContainer}>{_icon}</View> : null}\r\n      {React.isValidElement(message) ? (\r\n        message\r\n      ) : (\r\n        <Text style={[styles.message, textStyle]}>{message}</Text>\r\n      )}\r\n    </Animated.View>\r\n  );\r\n\r\n  return onPress ? (\r\n    <TouchableWithoutFeedback onPress={() => onPress(id)}>\r\n      {renderToast()}\r\n    </TouchableWithoutFeedback>\r\n  ) : (\r\n    renderToast()\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 12,\r\n    borderRadius: 5,\r\n    marginVertical: 5,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  message: {\r\n    color: \"#fff\",\r\n    fontWeight: \"500\",\r\n  },\r\n  iconContainer: {\r\n    marginRight: 5,\r\n  },\r\n});\r\n\r\n// export default Toast;\r\n","import { sstyled, Txt } from \"components\";\r\nimport { useAppContext } from \"engines\";\r\nimport * as R from \"ramda\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  ActivityIndicator,\r\n  FlatList,\r\n  ImageStyle,\r\n  ScrollView,\r\n  View,\r\n} from \"react-native\";\r\nimport * as Animatable from \"react-native-animatable\";\r\n// import { ScrollView } from \"react-native-gesture-handler\";\r\nimport RNMasonryScroll from \"react-native-masonry-scrollview\";\r\nimport { Navigation } from \"screens\";\r\nimport { spacing, useDimension } from \"utils\";\r\nimport { S_SockdartHi } from \"./s-sockdart-hi-3d\";\r\nimport { C_ContentCard } from \"./c-content-card\";\r\nimport { S_Koiwave } from \"./s-koiwave-3d\";\r\nimport { S_RingadingDeck } from \"./s-ringading-deck\";\r\nimport { S_LuccMain } from \"./s-lucc-concept-3d\";\r\nimport { S_LuccJacket } from \"./s-lucc-jacket-3d\";\r\n\r\nfunction ProjectScreen(props) {\r\n  const { route } = props;\r\n  const { WIDTH } = useDimension();\r\n  const [screenShown, showScreen] = useState(false);\r\n\r\n  const {\r\n    project: { color: projectColor, headline },\r\n  } = route.params;\r\n  const [_contents, setContents] = React.useState([\"\"]);\r\n  const [_imgContents, setImgContents] = React.useState([\"\"]);\r\n\r\n  React.useEffect(function sortContents() {\r\n    const dbContents = [\r\n      route.params.project.body00,\r\n      route.params.project.image00,\r\n      route.params.project.body01,\r\n      route.params.project.image01,\r\n      route.params.project.body02,\r\n      route.params.project.image02,\r\n      route.params.project.body03,\r\n      route.params.project.image03,\r\n      route.params.project.body04,\r\n      route.params.project.image04,\r\n      route.params.project.body05,\r\n      route.params.project.image05,\r\n      route.params.project.body06,\r\n      route.params.project.image06,\r\n      route.params.project.body07,\r\n      route.params.project.image07,\r\n      route.params.project.body08,\r\n      route.params.project.image08,\r\n      route.params.project.body09,\r\n      route.params.project.image09,\r\n    ];\r\n    const newContents = R.reject(\r\n      (content) => !content || content == \"\",\r\n      dbContents\r\n    );\r\n    const imgContents = R.filter(\r\n      (content: string) => content.includes(\"http\"),\r\n      newContents\r\n    ).reduce((a, c) => [...a, { url: c }], []);\r\n    setContents(newContents);\r\n    setImgContents(imgContents);\r\n    global.setTimeout(() => {\r\n      showScreen(true);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return screenShown ? (\r\n    <SS.Sctnr\r\n      contentContainerStyle={{ justifyContent: \"center\", alignItems: \"center\" }}\r\n    >\r\n      <SS.Headline {...props}>{headline}</SS.Headline>\r\n\r\n      <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <RNMasonryScroll\r\n          showsHorizontalScrollIndicator={false}\r\n          showsVerticalScrollIndicator={false}\r\n          removeClippedSubviews={true}\r\n          columns={WIDTH < 1000 ? 1 : 3}\r\n          evenColumnStyle={{}}\r\n          oddColumnStyle={{ marginTop: 60 }}\r\n          horizontal={false}\r\n        >\r\n          {_contents.map((image, imageIndex) => {\r\n            return (\r\n              <C_ContentCard\r\n                key={imageIndex}\r\n                text={image}\r\n                imageIndex={imageIndex}\r\n                onImagePress={() => {\r\n                  let imgIndex = R.findIndex(R.propEq(\"url\", image))(\r\n                    _imgContents\r\n                  );\r\n                  // console.log(\"img index: \", imgIndex);\r\n                  Navigation.navigate(\"Gallery\", {\r\n                    images: _imgContents,\r\n                    imgIndex,\r\n                  });\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </RNMasonryScroll>\r\n      </View>\r\n      <$_RingadingDeck\r\n        {...props}\r\n        visible={route.params[\"project\"][\"title\"] == \"Ringading\"}\r\n      />\r\n      <$_LuccMain\r\n        {...props}\r\n        visible={route.params[\"project\"][\"title\"].includes(\"LUCC Kit\")}\r\n      />\r\n      <$_LuccJacket\r\n        {...props}\r\n        visible={route.params[\"project\"][\"title\"].includes(\"LUCC Winter Jacket\")}\r\n      />\r\n      <$_Koiwave\r\n        {...props}\r\n        visible={route.params[\"project\"][\"title\"] == \"Koiwave\"}\r\n      />\r\n      <$_Sockdart\r\n        {...props}\r\n        visible={\r\n          route.params[\"project\"][\"title\"] == \"Koi x Nike Sock Dart High\"\r\n        }\r\n      />\r\n    </SS.Sctnr>\r\n  ) : (\r\n    <SS.CtnrLoading>\r\n      <ActivityIndicator size=\"large\" color={projectColor} />\r\n    </SS.CtnrLoading>\r\n  );\r\n}\r\n\r\nexport default ProjectScreen;\r\n\r\nconst $_LuccMain = S_LuccMain;\r\nconst $_LuccJacket = S_LuccJacket;\r\nconst $_Koiwave = S_Koiwave;\r\nconst $_Sockdart = S_SockdartHi;\r\nconst $_RingadingDeck = S_RingadingDeck;\r\n\r\nexport const SS = {\r\n  Sctnr: sstyled(ScrollView)((p) => ({\r\n    backgroundColor: p.C.background,\r\n    paddingTop: spacing(5),\r\n  })),\r\n  CtnrImg: sstyled(Animatable.View)((p) => ({\r\n    margin: 10,\r\n    borderRadius: 10,\r\n    overflow: \"hidden\",\r\n    backgroundColor: p.C.surface,\r\n  })),\r\n  CtnrLabel: sstyled(Animatable.View)(() => ({\r\n    margin: 10,\r\n    borderRadius: 10,\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"transparent\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  })),\r\n  CtnrLoading: sstyled(View)((p) => ({\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flex: 1,\r\n    backgroundColor: p.C.background,\r\n  })),\r\n  //*----Txt-SECTION ----------\r\n  Headline: sstyled(Txt.H6)((p) => ({\r\n    // fontSize: 26,\r\n    color: p.C.text,\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n    marginBottom: spacing(2),\r\n    paddingHorizontal: spacing(6),\r\n  })),\r\n  Label: sstyled(Txt.P2)((p) => ({ width: p.chieuRong, textAlign: \"center\" })),\r\n  S: {\r\n    IMG_CTNR: {\r\n      margin: 10,\r\n      borderRadius: 10,\r\n      overflow: \"hidden\",\r\n    } as ImageStyle,\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { useDimension } from \"utils\";\r\n\r\nexport function S_SockdartHi(props: dKoiwave) {\r\n  const { visible } = props;\r\n  const { WIDTH } = useDimension();\r\n  return (\r\n    visible && (\r\n      <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <div>\r\n          <iframe\r\n            title=\"A 3D model\"\r\n            width={WIDTH}\r\n            height=\"480\"\r\n            src=\"https://sketchfab.com/models/a24b84781d3947798ae14385b34c82ca/embed?autospin=0.6&amp;autostart=0&amp;ui_controls=1&amp;ui_infos=1&amp;ui_inspector=1&amp;ui_stop=1&amp;ui_watermark=1&amp;ui_watermark_link=1\"\r\n            //@ts-ignore\r\n            frameborder=\"0\"\r\n            allow=\"autoplay; fullscreen; vr\"\r\n            mozallowfullscreen=\"true\"\r\n            webkitallowfullscreen=\"true\"\r\n          ></iframe>\r\n        </div>\r\n      </View>\r\n    )\r\n  );\r\n}\r\n","import { sstyled, Txt } from \"components\";\r\nimport React from \"react\";\r\nimport { ImageStyle, ScrollView, TouchableOpacity, View } from \"react-native\";\r\nimport Image from \"react-native-scalable-image\";\r\nimport { spacing, useDimension } from \"utils\";\r\nimport * as Animatable from \"react-native-animatable\";\r\n\r\nexport function C_ContentCard(props: {\r\n  text: string;\r\n  imageIndex: number;\r\n  onImagePress?(): void;\r\n}) {\r\n  const { text, imageIndex, onImagePress } = props;\r\n  const { WIDTH } = useDimension();\r\n\r\n  // const imageWidth: number = height * 0.4 - 20;\r\n  const imageWidth: number = WIDTH < 1000 ? WIDTH * 0.8 : WIDTH * 0.3;\r\n\r\n  const imageProp = { width: imageWidth };\r\n  // const isContentImg = startsWith(\"https://\", text);\r\n  const isContentImg = text.includes(\"https\");\r\n  switch (isContentImg) {\r\n    case true:\r\n      return (\r\n        <TouchableOpacity onPress={onImagePress}>\r\n          {imageIndex == 0 ? (\r\n            <Image\r\n              source={{ uri: text }}\r\n              {...imageProp}\r\n              key={imageIndex}\r\n              style={SS.S.IMG_CTNR}\r\n            />\r\n          ) : (\r\n            <SS.CtnrImg animation={\"fadeInUp\"} delay={100 * imageIndex}>\r\n              <Image source={{ uri: text }} {...imageProp} key={imageIndex} />\r\n            </SS.CtnrImg>\r\n          )}\r\n        </TouchableOpacity>\r\n      );\r\n      break;\r\n    case false:\r\n      return (\r\n        <SS.CtnrLabel animation={\"fadeInUp\"} delay={100 * imageIndex}>\r\n          <SS.Label\r\n            chieuRong={imageWidth}\r\n            adjustsFontSizeToFit\r\n            key={imageIndex}\r\n          >\r\n            {text}\r\n          </SS.Label>\r\n        </SS.CtnrLabel>\r\n      );\r\n      break;\r\n  }\r\n}\r\n\r\nexport const SS = {\r\n  CtnrImg: sstyled(Animatable.View)((p) => ({\r\n    margin: 10,\r\n    borderRadius: 10,\r\n    overflow: \"hidden\",\r\n    backgroundColor: p.C.surface,\r\n  })),\r\n  CtnrLabel: sstyled(Animatable.View)(() => ({\r\n    margin: 10,\r\n    borderRadius: 10,\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"transparent\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  })),\r\n\r\n  Label: sstyled(Txt.P2)((p) => ({ width: p.chieuRong, textAlign: \"center\" })),\r\n  S: {\r\n    IMG_CTNR: {\r\n      margin: 10,\r\n      borderRadius: 10,\r\n      overflow: \"hidden\",\r\n    } as ImageStyle,\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { useDimension } from \"utils\";\r\n\r\nexport function S_Koiwave(props: dKoiwave) {\r\n  const { visible } = props;\r\n  const { WIDTH } = useDimension();\r\n  return (\r\n    visible && (\r\n      <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <div>\r\n          <iframe\r\n            title=\"A 3D model\"\r\n            width={WIDTH}\r\n            height=\"640\"\r\n            src=\"https://sketchfab.com/models/f0c987ac5c9b4fb0a40576a6ae46b92e/embed?autospin=0.6&amp;autostart=0&amp;ui_controls=1&amp;ui_infos=1&amp;ui_inspector=1&amp;ui_stop=1&amp;ui_watermark=1&amp;ui_watermark_link=1\"\r\n            //@ts-ignore\r\n            frameborder=\"0\"\r\n            allow=\"autoplay; fullscreen; vr\"\r\n            mozallowfullscreen=\"true\"\r\n            webkitallowfullscreen=\"true\"\r\n          ></iframe>\r\n        </div>\r\n      </View>\r\n    )\r\n  );\r\n}\r\n","import { SwipeDeck, Txt } from \"components\";\r\nimport { useSheets } from \"engines\";\r\nimport React from \"react\";\r\nimport {\r\n  Linking,\r\n\r\n  View\r\n} from \"react-native\";\r\nimport * as Animatable from \"react-native-animatable\";\r\nimport { spacing, useDimension } from \"utils\";\r\n\r\nexport function S_RingadingDeck(props) {\r\n  const { visible } = props;\r\n  const { data } = useSheets(0, \"Ringading_Exp\");\r\n  const { WIDTH } = useDimension();\r\n  React.useEffect(\r\n    function fetchData() {\r\n      setDeckData(data);\r\n    },\r\n    [data]\r\n  );\r\n  const [deckData, setDeckData] = React.useState(data);\r\n  return (\r\n    visible &&\r\n    !!deckData[0] && (\r\n      <Animatable.View\r\n        animation=\"fadeInUp\"\r\n        delay={1000}\r\n        style={{\r\n          // padding: spacing(5),\r\n          flexDirection: WIDTH < 1000 ? \"column\" : \"row\",\r\n          alignItems: \"center\",\r\n          alignContent: \"center\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            // flex: 1,\r\n            justifyContent: \"flex-start\",\r\n            width: spacing(8),\r\n\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Txt.H6\r\n            category=\"h1\"\r\n            style={{ color: \"white\", textAlign: \"center\" }}\r\n            onPress={() => Linking.openURL(\r\n              \"https://snack.expo.io/@nguyenkhooi/swipedeck-mods\"\r\n            )}\r\n          >\r\n            Try it!\r\n          </Txt.H6>\r\n          <Txt.P1\r\n            category=\"p1\"\r\n            style={{ color: \"white\", fontSize: 28, textAlign: \"center\" }}\r\n          >\r\n            Try to swipe the deck, yup who you like and nah who you don't\r\n          </Txt.P1>\r\n          <Txt.P1\r\n            category=\"h6\"\r\n            appearance=\"info\"\r\n            style={{ textAlign: \"center\" }}\r\n            onPress={() => setDeckData(data)}\r\n          >\r\n            Reset Deck\r\n          </Txt.P1>\r\n        </View>\r\n        <SwipeDeck\r\n          {...props}\r\n          containerStyle={{\r\n            width: WIDTH < 1000 ? WIDTH * 0.8 : WIDTH * 0.4,\r\n            height: WIDTH < 1000 ? WIDTH * 0.8 : WIDTH * 0.4,\r\n          }}\r\n          cardStyle={{\r\n            width: WIDTH < 1000 ? WIDTH * 0.6 : WIDTH * 0.2,\r\n            height: WIDTH < 1000 ? WIDTH * 0.8 : WIDTH * 0.4,\r\n          }}\r\n          data={deckData} />\r\n      </Animatable.View>\r\n    )\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { useDimension } from \"utils\";\r\n\r\nexport function S_LuccMain(props: dLuccMain) {\r\n  const { visible } = props;\r\n  const { WIDTH } = useDimension();\r\n  return (\r\n    visible && (\r\n      <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <div>\r\n          <iframe\r\n            title=\"A 3D model\"\r\n            width={WIDTH}\r\n            height=\"640\"\r\n            src=\"https://sketchfab.com/models/9bc977137c0f4ec5af858a0c45eaf4d2/embed?autospin=0.2&amp;autostart=0&amp;ui_controls=1&amp;ui_infos=1&amp;ui_inspector=1&amp;ui_stop=1&amp;ui_theme=dark&amp;ui_watermark=1&amp;ui_watermark_link=1\"\r\n            //@ts-ignore\r\n            frameborder=\"0\"\r\n            allow=\"autoplay; fullscreen; vr\"\r\n            mozallowfullscreen=\"true\"\r\n            webkitallowfullscreen=\"true\"\r\n          ></iframe>\r\n        </div>\r\n      </View>\r\n    )\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { useDimension } from \"utils\";\r\n\r\nexport function S_LuccJacket(props: dLuccJacket) {\r\n  const { visible } = props;\r\n  const { WIDTH } = useDimension();\r\n  return (\r\n    visible && (\r\n      <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <div>\r\n          <iframe\r\n            title=\"A 3D model\"\r\n            width={WIDTH}\r\n            height=\"640\"\r\n            src=\"https://sketchfab.com/models/1002c84db1ca45dc9d77c9e8e12a6437/embed?autospin=0.2&amp;autostart=0&amp;ui_controls=1&amp;ui_infos=1&amp;ui_inspector=1&amp;ui_stop=1&amp;ui_watermark=1&amp;ui_watermark_link=1\"\r\n            //@ts-ignore\r\n            frameborder=\"0\"\r\n            allow=\"autoplay; fullscreen; vr\"\r\n            mozallowfullscreen=\"true\"\r\n            webkitallowfullscreen=\"true\"\r\n          ></iframe>\r\n        </div>\r\n      </View>\r\n    )\r\n  );\r\n}\r\n","import { sstyled, Txt } from \"components\";\r\nimport { useAppContext, useSheets } from \"engines\";\r\nimport * as R from \"ramda\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  ActivityIndicator,\r\n  ImageStyle,\r\n  ScrollView,\r\n  View,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport * as Animatable from \"react-native-animatable\";\r\n// import { ScrollView } from \"react-native-gesture-handler\";\r\nimport RNMasonryScroll from \"react-native-masonry-scrollview\";\r\nimport Image from \"react-native-scalable-image\";\r\nimport { spacing, use18, useDimension } from \"utils\";\r\nimport ImageViewer from \"react-native-image-zoom-viewer\";\r\nimport { Navigation } from \"screens/_navigation\";\r\n\r\nexport default function AboutScreen(props) {\r\n  const { C } = useAppContext();\r\n  const { WIDTH } = useDimension();\r\n  const [screenShown, showScreen] = useState(false);\r\n  const { data } = useSheets(0, \"About\");\r\n  const headline = data[0]?.headline;\r\n  const [_contents, setContents] = React.useState([\"\"]);\r\n  const [_imgContents, setImgContents] = React.useState([\"\"]);\r\n\r\n  React.useEffect(\r\n    function sortContents() {\r\n      const dbContents = [\r\n        data[0]?.body00,\r\n        data[0]?.image00,\r\n        data[0]?.body01,\r\n        data[0]?.image01,\r\n        data[0]?.body02,\r\n        data[0]?.image02,\r\n        data[0]?.body03,\r\n        data[0]?.image03,\r\n        data[0]?.body04,\r\n        data[0]?.image04,\r\n        data[0]?.body05,\r\n        data[0]?.image05,\r\n        data[0]?.body06,\r\n        data[0]?.image06,\r\n        data[0]?.body07,\r\n        data[0]?.image07,\r\n        data[0]?.body08,\r\n        data[0]?.image08,\r\n        data[0]?.body09,\r\n        data[0]?.image09,\r\n        data[0]?.body10,\r\n        data[0]?.image10,\r\n      ];\r\n      const newContents = R.reject(\r\n        (content) => !content || content == \"\",\r\n        dbContents\r\n      );\r\n      const imgContents = R.filter(\r\n        (content: string) => content.includes(\"http\"),\r\n        newContents\r\n      ).reduce((a, c) => [...a, { url: c }], []);\r\n      setContents(newContents);\r\n      setImgContents(imgContents);\r\n      global.setTimeout(() => {\r\n        showScreen(true);\r\n        // console.log(\"data: \", imgContents);\r\n      }, 1000);\r\n    },\r\n    [data]\r\n  );\r\n\r\n  return screenShown ? (\r\n    <SS.Sctnr\r\n      horizontal\r\n      contentContainerStyle={{ justifyContent: \"center\", alignItems: \"center\" }}\r\n    >\r\n      <Animatable.View\r\n        animation=\"fadeIn\"\r\n        style={{ width: WIDTH * 0.95, alignItems: \"center\" }}\r\n      >\r\n        <SS.Headline\r\n          onPress={() =>\r\n            Navigation.navigate(\"Gallery\", {\r\n              images: _imgContents,\r\n              imgIndex: 3,\r\n            })\r\n          }\r\n          {...props}\r\n        >\r\n          {use18(headline)}\r\n        </SS.Headline>\r\n        <Animatable.Text\r\n          style={{ color: C.grey600 }}\r\n          animation=\"pulse\"\r\n          iterationCount=\"infinite\"\r\n        >\r\n          {use18(\"Let's scroll\") + \" ⟶\"}\r\n        </Animatable.Text>\r\n      </Animatable.View>\r\n      <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <RNMasonryScroll\r\n          showsHorizontalScrollIndicator={false}\r\n          showsVerticalScrollIndicator={false}\r\n          removeClippedSubviews={true}\r\n          columns={WIDTH < 1000 ? 1 : 3}\r\n          evenColumnStyle={{}}\r\n          oddColumnStyle={{ marginLeft: 60 }}\r\n          horizontal={true}\r\n        >\r\n          {_contents.map((image, imageIndex) => {\r\n            return (\r\n              <C_ContentCard\r\n                key={imageIndex}\r\n                text={image}\r\n                imageIndex={imageIndex}\r\n                onImagePress={() => {\r\n                  let imgIndex = R.findIndex(R.propEq(\"url\", image))(\r\n                    _imgContents\r\n                  );\r\n                  // console.log(\"img index: \", imgIndex);\r\n                  Navigation.navigate(\"Gallery\", {\r\n                    images: _imgContents,\r\n                    imgIndex,\r\n                  });\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </RNMasonryScroll>\r\n      </View>\r\n    </SS.Sctnr>\r\n  ) : (\r\n    <SS.CtnrLoading>\r\n      <ActivityIndicator size=\"large\" color={C.primary} />\r\n    </SS.CtnrLoading>\r\n  );\r\n}\r\n\r\nconst C_ContentCard = (props: {\r\n  text: string;\r\n  imageIndex: number;\r\n  onImagePress?(): void;\r\n}) => {\r\n  const { text, imageIndex, onImagePress } = props;\r\n  const { WIDTH } = useDimension();\r\n\r\n  // const imageWidth: number = height * 0.4 - 20;\r\n  const imageWidth: number = WIDTH < 1000 ? WIDTH * 0.8 : WIDTH * 0.3;\r\n\r\n  const imageProp = { height: imageWidth };\r\n  // const isContentImg = startsWith(\"https://\", text);\r\n  const isContentImg = text.includes(\"https\");\r\n  switch (isContentImg) {\r\n    case true:\r\n      return (\r\n        <TouchableOpacity onPress={onImagePress}>\r\n          {imageIndex == 0 ? (\r\n            <Image\r\n              source={{ uri: text }}\r\n              {...imageProp}\r\n              key={imageIndex}\r\n              style={SS.S.IMG_CTNR}\r\n            />\r\n          ) : (\r\n            <SS.CtnrImg animation={\"fadeIn\"} delay={100 * imageIndex}>\r\n              <Image source={{ uri: text }} {...imageProp} key={imageIndex} />\r\n            </SS.CtnrImg>\r\n          )}\r\n        </TouchableOpacity>\r\n      );\r\n      break;\r\n    case false:\r\n      return (\r\n        <SS.CtnrLabel animation={\"fadeIn\"} delay={100 * imageIndex}>\r\n          <SS.Label\r\n            chieuRong={imageWidth}\r\n            adjustsFontSizeToFit\r\n            key={imageIndex}\r\n            // numberOfLines={20}\r\n            // ellipsizeMode={\"head\"}\r\n          >\r\n            {use18(text)}\r\n          </SS.Label>\r\n        </SS.CtnrLabel>\r\n      );\r\n      break;\r\n  }\r\n};\r\n\r\nconst SS = {\r\n  Sctnr: sstyled(ScrollView)((p) => ({\r\n    backgroundColor: p.C.background,\r\n    paddingTop: spacing(5),\r\n  })),\r\n  CtnrImg: sstyled(Animatable.View)((p) => ({\r\n    margin: 10,\r\n    borderRadius: 10,\r\n    overflow: \"hidden\",\r\n    backgroundColor: p.C.surface,\r\n  })),\r\n  CtnrLabel: sstyled(Animatable.View)(() => ({\r\n    margin: 10,\r\n    borderRadius: 10,\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"transparent\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  })),\r\n  CtnrLoading: sstyled(View)((p) => ({\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flex: 1,\r\n    backgroundColor: p.C.background,\r\n  })),\r\n  //*----Txt-SECTION ----------\r\n  Headline: sstyled(Txt.H6)((p) => ({\r\n    // fontSize: 26,\r\n    color: p.C.text,\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n    marginBottom: spacing(2),\r\n    paddingHorizontal: spacing(6),\r\n  })),\r\n  Label: sstyled(Txt.P2)((p) => ({ width: p.chieuRong, textAlign: \"center\" })),\r\n  S: {\r\n    IMG_CTNR: {\r\n      margin: 10,\r\n      borderRadius: 10,\r\n      overflow: \"hidden\",\r\n    } as ImageStyle,\r\n  },\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/x-icon.e89ccce9.png\";","module.exports = __webpack_public_path__ + \"static/media/khoi.944db799.jpg\";","module.exports = __webpack_public_path__ + \"static/media/khoi-shades.05bfbfcb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shades.ea0ed223.png\";","module.exports = __webpack_public_path__ + \"static/media/waving_hand_sign_512.9b891f92.gif\";","module.exports = __webpack_public_path__ + \"static/media/sparkles_512.5ca6a294.gif\";","module.exports = __webpack_public_path__ + \"static/media/nguyenkhoi.914473fc.gif\";","// import * as storage from \"./storage\"\r\n// export { storage }\r\nexport * from \"./styles\"\r\nexport * from \"./helpers\"\r\nexport * from \"./i18n\"\r\nexport * from \"./errors\"\r\nexport * from \"./typings\"\r\n","//@ts-check\r\nexport * from \"./_navigation\";\r\nexport { default as HomeScreen } from \"./home-screen/HomeScreen\";\r\nexport * from \"./gallery-screen/GalleryScreen\";\r\n","import { NavigationContainerRef } from \"@react-navigation/native\";\r\nimport { Toasty } from \"components\";\r\nimport { AppProvider } from \"engines/providers/app-provider\";\r\nimport * as React from \"react\";\r\nimport {\r\n  AppNavigator,\r\n  canExit,\r\n  setRootNavigation,\r\n  useBackButtonHandler,\r\n  useNavigationPersistence,\r\n} from \"screens\";\r\n\r\nfunction App() {\r\n  //* ----RNAV-SECTION -------------------------------\r\n  const navigationRef = React.useRef<NavigationContainerRef>(null);\r\n  setRootNavigation(navigationRef);\r\n  useBackButtonHandler(navigationRef, canExit);\r\n  const {\r\n    initialNavigationState,\r\n    onNavigationStateChange,\r\n  } = useNavigationPersistence();\r\n\r\n  return (\r\n    <AppProvider>\r\n      <AppNavigator\r\n        ref={navigationRef}\r\n        initialState={initialNavigationState}\r\n        onStateChange={onNavigationStateChange}\r\n      />\r\n      <Toasty ref={(ref) => Toasty.setRef(ref)} />\r\n    </AppProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { registerRootComponent } from 'expo';\r\n\r\nimport App from './App';\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in the Expo client or in a native build,\r\n// the environment is set up appropriately\r\nregisterRootComponent(App);\r\n","import * as eva from \"@eva-design/eva\";\r\nimport { ApplicationProvider } from \"@ui-kitten/components\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport {\r\n  colors,\r\n  dColors,\r\n  fetchi18n,\r\n  LANG,\r\n  THEME,\r\n  themeDark,\r\n  themeLight,\r\n} from \"utils\";\r\nimport I18n from \"i18n-js\";\r\n\r\n/** \r\n * App Provider,\r\n * providing `theme`, frbs `userDoc(_)`, and `Kitten's provider`\r\n * @version 0.11.29\r\n * - *Add roles: string[_]*\r\n * @author nguyenkhooi\r\n * ---\r\n * @example\r\n *  In `app.tsx`\r\n *    import {AppProvider} from `engines`\r\n *    ...\r\n *    const [_theme,setTheme] = React.useState<eTheme>(`themeLight`)\r\n *    ...\r\n *    return (\r\n        <RootStoreProvider value={rootStore}>\r\n          <AppProvider theme={_theme} setTheme={setTheme}> <--- here\r\n            <...>\r\n          </AppProvider> <--- and here\r\n        </RootStoreProvider>\r\n      )\r\n    `To setup theme switcher`\r\n      import {useAppContext} from \"engines\"\r\n      ...\r\n      const ThemeSwitcherButton = (props) => {\r\n        const {C, dark, setTheme} = useAppContext()\r\n        return (\r\n          <Button onPress={()=> setTheme(dark? `themeLight` : `themeDark`)} >\r\n            {dark? `Switch to Light Theme` : `Switch to Dark Theme`}\r\n          </Button>\r\n        )\r\n      }\r\n */\r\nexport function AppProvider({ children }) {\r\n  const [_isReady, shouldReady] = React.useState(false);\r\n\r\n  //*----THEME-SECTION --------------------\r\n  const [_theme, setTheme] = useState<THEME>(THEME.LIGHT);\r\n  const [_colors, setColors] = React.useState(\r\n    _theme == THEME.DARK ? themeDark : themeLight\r\n  );\r\n  const [_dark, setDark] = React.useState(_theme === THEME.DARK ? true : false);\r\n\r\n  React.useEffect(\r\n    function setupTheme() {\r\n      switch (_theme) {\r\n        case THEME.LIGHT:\r\n          setColors(themeLight);\r\n          setDark(false);\r\n          // setTheme(THEME.LIGHT);\r\n          // storage.save(\"@app_preferences\", { theme: \"themeLight\" });\r\n          // AsyncStorage.setItem(\"@preferences\", JSON.stringify({ theme: \"themeLight\" }))\r\n          break;\r\n        case THEME.DARK:\r\n          setColors(themeDark);\r\n          setDark(true);\r\n          // setTheme(THEME.DARK);\r\n          // AsyncStorage.setItem(\"@preferences\", JSON.stringify({ theme: \"themeDark\" }))\r\n          break;\r\n        default:\r\n          setColors(themeLight);\r\n          setDark(false);\r\n          // setTheme(THEME.LIGHT);\r\n          // AsyncStorage.setItem(\"@preferences\", JSON.stringify({ theme: \"themeLight\" }))\r\n          break;\r\n      }\r\n      console.log(\"💋 Current theme: \", _theme.toString());\r\n\r\n      // setTimeout(() => {\r\n      //   //* Base theme value to frbs\r\n      //   userDocState?.path &&\r\n      //     _theme !== userDocState?.doc?.theme &&\r\n      //     db.doc(userDocState.path).update({\r\n      //       theme: _theme,\r\n      //     });\r\n      // }, 1000);\r\n    },\r\n    [_theme]\r\n  );\r\n\r\n  //*---- I18N-SECTION ---------------\r\n  const [i18n, setI18N] = React.useState<LANG>(LANG.EN);\r\n  const [lang, setLang] = React.useState({});\r\n  const vi = React.useRef({});\r\n  const en = React.useRef({});\r\n  React.useEffect(function ini18() {\r\n    fetchi18n().then((r) => {\r\n      if (r.code == \"I18N_DONE\") {\r\n        const _vi = r.lang.vi;\r\n        const _en = r.lang.en;\r\n        vi.current = _vi;\r\n        en.current = _en;\r\n        setLang(_en);\r\n        shouldReady(true);\r\n      }\r\n    });\r\n  }, []);\r\n  React.useEffect(\r\n    function toggleI18N() {\r\n      I18n.locale = i18n;\r\n      setLang(i18n === LANG.EN ? en.current : vi.current);\r\n    },\r\n    [i18n]\r\n  );\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        C: _colors,\r\n        dark: _dark,\r\n        setTheme: setTheme,\r\n        i18n,\r\n        setI18N,\r\n        lang,\r\n        setLang,\r\n        isReady: _isReady,\r\n      }}\r\n    >\r\n      <ApplicationProvider\r\n        {...eva}\r\n        theme={_theme == THEME.LIGHT ? themeLight : themeDark}\r\n      >\r\n        {children}\r\n      </ApplicationProvider>\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport const AppContext = React.createContext<dAppContext>({\r\n  C: colors,\r\n  dark: false,\r\n  setTheme: () => {},\r\n});\r\n\r\n/**\r\n * App context hook\r\n *\r\n * ---\r\n * @example\r\n * ```\r\n * const { C, dark, setTheme } = useAppContext()\r\n * ```\r\n *\r\n * @version 0.11.29\r\n * - *Add roles: string[_] to userDoc*\r\n * @author nguyenkhooi\r\n */\r\nexport const useAppContext = () => useContext(AppContext);\r\n\r\ninterface dAppContext {\r\n  C: dColors;\r\n  dark: boolean;\r\n  setTheme(name: THEME): void;\r\n  i18n: LANG;\r\n  setI18N(locale: LANG): void;\r\n  lang: object;\r\n  setLang(lang: object): void;\r\n  isReady: boolean;\r\n}\r\n","import {\r\n  DefaultNavigatorOptions,\r\n  LinkingOptions,\r\n  NavigationContainerRef,\r\n  NavigationState,\r\n  PartialState,\r\n  RouteProp\r\n} from \"@react-navigation/native\";\r\nimport { StackNavigationOptions } from \"@react-navigation/stack\";\r\nimport { TransitionSpec } from \"@react-navigation/stack/lib/typescript/src/types\";\r\nimport { Linking } from \"expo\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { BackHandler } from \"react-native\";\r\n// import { enum_HomeStack } from \"./home-navigator\";\r\nimport { enum_PrimaryStack } from \"./primary.navigator\";\r\nimport { enum_RootStack } from \"./root.navigator\";\r\n\r\ntype navigationRoute = enum_PrimaryStack | enum_RootStack;\r\n\r\n/**\r\n * Type of stacked screen item\r\n */\r\nexport type dStackedScreenItem = {\r\n  component: (props) => JSX.Element;\r\n  // options: StackNavigationOptions;\r\n  options?: DefaultNavigatorOptions<StackNavigationOptions>[\"screenOptions\"];\r\n};\r\n\r\nconst prefix = Linking.makeUrl(\"/\");\r\nexport const linking: LinkingOptions = {\r\n  prefixes: [prefix],\r\n  config: {\r\n    screens: {\r\n      Primary: \"0\",\r\n      Home: \"home\",\r\n      About: \"about\",\r\n      Project: {\r\n        path: \"project/:title/\",\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\n// ScreenOptions | ((props: {\r\n//   route: RouteProp<ParamListBase, string>;\r\n//   navigation: any;\r\n// }) => ScreenOptions)\r\n\r\n/**\r\n * Setup navigation-service\r\n * \r\n * @example\r\n * import {\r\n    AppNavigator,\r\n    canExit,\r\n    setRootNavigation,\r\n    useBackButtonHandler,\r\n    useNavigationPersistence\r\n  } from \"screens\";\r\n  \r\n  function App() {\r\n    [...]\r\n    const navigationRef = React.useRef<NavigationContainerRef>();\r\n\r\n    setRootNavigation(navigationRef);\r\n    useBackButtonHandler(navigationRef, canExit);\r\n    const {\r\n      initialNavigationState,\r\n      onNavigationStateChange,\r\n    } = useNavigationPersistence();\r\n    [...]\r\n  }\r\n */\r\nexport const Navigation = {\r\n  navigate(name: navigationRoute, param?: any) {\r\n    name; // eslint-disable-line no-unused-expressions\r\n  },\r\n  goBack() {}, // eslint-disable-line @typescript-eslint/no-empty-function\r\n  resetRoot(state?: PartialState<NavigationState> | NavigationState) {}, // eslint-disable-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\r\n  getRootState(): NavigationState {\r\n    return {} as any;\r\n  },\r\n};\r\n\r\nexport const setRootNavigation = (\r\n  ref: React.RefObject<NavigationContainerRef>\r\n) => {\r\n  for (const method in Navigation) {\r\n    Navigation[method] = (...args: any) => {\r\n      if (ref.current) {\r\n        return ref.current[method](...args);\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Gets the current screen from any navigation state.\r\n */\r\nexport function getActiveRouteName(\r\n  state: NavigationState | PartialState<NavigationState>\r\n) {\r\n  const route = state.routes[state.index];\r\n\r\n  // Found the active route -- return the name\r\n  if (!route.state) return route.name;\r\n\r\n  // Recursive call to deal with nested routers\r\n  return getActiveRouteName(route.state);\r\n}\r\n\r\n/**\r\n * Hook that handles Android back button presses and forwards those on to\r\n * the navigation or allows exiting the app.\r\n */\r\nexport function useBackButtonHandler(\r\n  ref: React.RefObject<NavigationContainerRef>,\r\n  canExit: (routeName: string) => boolean\r\n) {\r\n  const canExitRef = useRef(canExit);\r\n\r\n  useEffect(() => {\r\n    canExitRef.current = canExit;\r\n  }, [canExit]);\r\n\r\n  useEffect(() => {\r\n    // We'll fire this when the back button is pressed on Android.\r\n    const onBackPress = () => {\r\n      const navigation = ref.current;\r\n\r\n      if (navigation == null) {\r\n        return false;\r\n      }\r\n\r\n      // grab the current route\r\n      const routeName = getActiveRouteName(navigation.getRootState());\r\n\r\n      // are we allowed to exit?\r\n      if (canExitRef.current(routeName)) {\r\n        // let the system know we've not handled this event\r\n        return false;\r\n      }\r\n\r\n      // we can't exit, so let's turn this into a back action\r\n      if (navigation.canGoBack()) {\r\n        navigation.goBack();\r\n\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    // Subscribe when we come to life\r\n    BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\r\n\r\n    // Unsubscribe when we're done\r\n    return () =>\r\n      BackHandler.removeEventListener(\"hardwareBackPress\", onBackPress);\r\n  }, [ref]);\r\n}\r\n\r\n/**\r\n * Custom hook for persisting navigation state.\r\n */\r\nexport function useNavigationPersistence(\r\n  storage?: any,\r\n  persistenceKey?: string\r\n) {\r\n  const [initialNavigationState, setInitialNavigationState] = useState();\r\n  const [isRestoringNavigationState, setIsRestoringNavigationState] = useState(\r\n    true\r\n  );\r\n\r\n  const routeNameRef = useRef();\r\n  const onNavigationStateChange = (state) => {\r\n    const previousRouteName = routeNameRef.current;\r\n    const currentRouteName = getActiveRouteName(state);\r\n\r\n    if (previousRouteName !== currentRouteName) {\r\n      // track screens.\r\n      __DEV__ && console.info(\"🗺️ Current route: \", currentRouteName);\r\n    }\r\n\r\n    // Save the current route name for later comparision\r\n    routeNameRef.current = currentRouteName;\r\n\r\n    // Persist state to storage\r\n    // storage.save(persistenceKey, state);\r\n  };\r\n\r\n  const restoreState = async () => {\r\n    try {\r\n      // const state = await storage.load(persistenceKey);\r\n      // if (state) setInitialNavigationState(state);\r\n    } finally {\r\n      setIsRestoringNavigationState(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isRestoringNavigationState) restoreState();\r\n  }, [isRestoringNavigationState]);\r\n\r\n  return { onNavigationStateChange, restoreState, initialNavigationState };\r\n}\r\n\r\n/**\r\n * A list of routes from which we're allowed to leave the app when\r\n * the user presses the back button on Android.\r\n *\r\n * Anything not on this list will be a standard `back` action in\r\n * react-navigation.\r\n *\r\n * `canExit` is used in ./app/app.tsx in the `useBackButtonHandler` hook.\r\n */\r\nconst exitRoutes: navigationRoute[] = [\"About\"];\r\nexport const canExit = (routeName: navigationRoute) =>\r\n  exitRoutes.includes(routeName);\r\n\r\n/**\r\n * Preset Navigation Config\r\n *\r\n * ---\r\n * @version 0.12.18\r\n *  - *correct type `durationSpec`*\r\n */\r\nexport const presetNavConfig = {\r\n  durationSpec: {\r\n    config: { duration: 1000 },\r\n    animation: \"timing\",\r\n  } as TransitionSpec,\r\n  noHeader: { headerShown: false },\r\n  headerTitle: ({\r\n    route,\r\n    param,\r\n    key,\r\n  }: {\r\n    route: RouteProp<any, any>;\r\n    param: string;\r\n    key?: string | number;\r\n  }) => ({\r\n    title: !!key ? route.params[param][key] : route.params[param],\r\n  }),\r\n  // backButtonAsX:\r\n  noTitle: {\r\n    headerTitleStyle: {\r\n      fontSize: 0,\r\n    },\r\n  },\r\n};\r\n","import {\r\n  createStackNavigator,\r\n  StackNavigationOptions,\r\n  TransitionPresets,\r\n} from \"@react-navigation/stack\";\r\nimport { IconOooh, img } from \"assets\";\r\nimport Color from \"color\";\r\nimport { useAppContext } from \"engines/providers/app-provider\";\r\nimport * as R from \"ramda\";\r\nimport React from \"react\";\r\nimport { Image, TextStyle, View } from \"react-native\";\r\nimport { GalleryScreen } from \"screens/gallery-screen/GalleryScreen\";\r\nimport ProjectScreen from \"screens/project-screen/ProjectScreen\";\r\nimport { IPSCR, KeyOf, spacing } from \"utils\";\r\nimport AboutScreen from \"../about-screen/AboutScreen\";\r\nimport HomeScreen from \"../home-screen/HomeScreen\";\r\nimport { Navigation, presetNavConfig } from \"./navigation-utils\";\r\nconst screenProps: {\r\n  [name: string]: { component: any; options: StackNavigationOptions };\r\n} = {\r\n  // const screenProps = {\r\n  Home: {\r\n    component: HomeScreen,\r\n    options: { ...presetNavConfig.noHeader, title: \"Khoi Tran\" },\r\n  },\r\n  About: {\r\n    component: AboutScreen,\r\n    options: {\r\n      title: \"About\",\r\n      headerTransparent: true,\r\n    },\r\n  },\r\n  Project: {\r\n    component: ProjectScreen,\r\n    options: ({ route }) =>\r\n      presetNavConfig.headerTitle({ route, param: \"project\", key: \"title\" }),\r\n  },\r\n  Gallery: {\r\n    component: GalleryScreen,\r\n    options: { headerTitle: \"\", headerTransparent: true },\r\n  },\r\n};\r\n\r\nconst __PRIMARY = R.keys(screenProps);\r\nexport type enum_PrimaryStack = KeyOf<typeof screenProps>;\r\n\r\nexport const PrimaryStack = (props: IPSCR) => {\r\n  const { C } = useAppContext();\r\n  const Stack = createStackNavigator<typeof screenProps>();\r\n\r\n  const config: StackNavigationOptions = {\r\n    ...TransitionPresets.ModalPresentationIOS,\r\n    gestureEnabled: true,\r\n    cardOverlayEnabled: true,\r\n    animationEnabled: true,\r\n    headerStyle: {\r\n      elevation: 0,\r\n      backgroundColor: C.background,\r\n      borderBottomWidth: 0,\r\n    },\r\n    headerTitleStyle: {\r\n      color: C.text,\r\n    } as TextStyle,\r\n    headerBackImage: (props) => (\r\n      <IconOooh\r\n        name=\"x\"\r\n        color={C.hazardYellow}\r\n        containerStyle={{ marginLeft: spacing(4) }}\r\n      />\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName=\"Home\"\r\n      headerMode=\"float\"\r\n      mode=\"modal\"\r\n      screenOptions={config}\r\n    >\r\n      {__PRIMARY.map((screen) => (\r\n        <Stack.Screen\r\n          name={screen}\r\n          {...screenProps[screen]}\r\n          key={screen}\r\n          // options={screen == \"Home\" ? screenOptions : screen.options}\r\n        />\r\n      ))}\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n","import {\r\n  NavigationContainer,\r\n  NavigationContainerRef,\r\n} from \"@react-navigation/native\";\r\nimport {\r\n  createStackNavigator,\r\n  TransitionPresets,\r\n} from \"@react-navigation/stack\";\r\nimport { StackNavigationOptions } from \"@react-navigation/stack/lib/typescript/src/types\";\r\nimport { Text, Toggle } from \"@ui-kitten/components\";\r\nimport { useAppContext } from \"engines\";\r\nimport * as R from \"ramda\";\r\nimport * as React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { KeyOf, spacing, THEME } from \"utils\";\r\n// import { HomeScreen } from \"../home-screen/HomeScreen\";\r\nimport { linking, presetNavConfig } from \"./navigation-utils\";\r\n// import { PrimaryStack } from \"./primary-navigator\";\r\nimport { PrimaryStack } from \"./primary.navigator\";\r\n\r\nconst screenProps = {\r\n  Primary: { component: PrimaryStack },\r\n};\r\nconst __ROOT = R.keys(screenProps);\r\nconst Stack = createStackNavigator<typeof screenProps>();\r\nexport type enum_RootStack = KeyOf<typeof screenProps>;\r\n\r\nexport const RootStack = (props) => {\r\n  const { C, dark, setTheme } = useAppContext();\r\n  const screenOptions: StackNavigationOptions = {\r\n    ...TransitionPresets.FadeFromBottomAndroid,\r\n    transitionSpec: {\r\n      open: presetNavConfig.durationSpec,\r\n      close: presetNavConfig.durationSpec,\r\n    },\r\n    headerStyle: {\r\n      elevation: 0,\r\n      backgroundColor: C.background,\r\n      borderBottomWidth: 0,\r\n    },\r\n    headerTitleStyle: {\r\n      //   fontFamily: CIRCULAR_BOLD,\r\n      fontSize: 0,\r\n    },\r\n\r\n    headerTitleAlign: \"center\",\r\n  };\r\n\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName=\"Primary\"\r\n      headerMode=\"none\"\r\n      screenOptions={screenOptions}\r\n    >\r\n      {__ROOT.map((screen) => (\r\n        <Stack.Screen name={screen} {...screenProps[screen]} key={screen} />\r\n      ))}\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\n/**\r\n * The root navigator is used to switch between major navigation flows of your app.\r\n * Generally speaking, it will contain an auth flow (registration, login, forgot password)\r\n * and a \"main\" flow (which is contained in your PrimaryNavigator) which the user\r\n * will use once logged in.\r\n */\r\nexport const AppNavigator = React.forwardRef<\r\n  NavigationContainerRef,\r\n  Partial<React.ComponentProps<typeof NavigationContainer>>\r\n>((props, ref) => {\r\n  const { isReady } = useAppContext();\r\n  return (\r\n    isReady && (\r\n      <NavigationContainer {...props} ref={ref} linking={linking}>\r\n        <RootStack />\r\n      </NavigationContainer>\r\n    )\r\n  );\r\n});\r\n\r\nAppNavigator.displayName = \"AppNavigator\";\r\n","//@ts-check\r\nexport * from \"./images\";\r\nexport * from \"./icons\";\r\n"],"sourceRoot":""}