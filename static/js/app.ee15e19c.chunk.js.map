{"version":3,"sources":["src/engines/hooks/useSheets.ts","src/screens/gallery-screen/GalleryScreen.tsx","src/components/generals/buttoon/Buttoon.tsx","src/components/generals/sstyled/sstyled.tsx","src/components/generals/toasty/src/Toasty.tsx","src/components/generals/toasty/src/hook/context.ts","src/components/generals/touchable-web/touchie.tsx","src/components/generals/touchable-web/TouchableWeb.tsx","src/components/generals/txt/Txt.tsx","src/components/generals/ima/Ima.tsx","src/components/decks/SwipeDeck.tsx","src/screens/home-screen/s-contact.tsx","src/screens/home-screen/s-experimental-grid.tsx","src/screens/home-screen/s-intro.tsx","src/screens/home-screen/s-portfolio-grid.tsx","src/screens/home-screen/HomeScreen.tsx","src/engines/functions/web-functions/Linking.ts","src/screens/project-screen/c-content-card.tsx","src/assets/images/index.js","src/assets/icons/index.js","src/assets/icons/oooh-icon.tsx","src/utils/helpers/device.helpers.ts","src/utils/helpers/scaling.helpers.ts","src/utils/typings/index.js","src/utils/typings/utils-typings.ts","src/utils/typings/photos-typings.ts","src/engines/functions/js-functions/core.ts","src/engines/functions/js-functions/table-manipulation.ts","src/engines/functions/js-functions/array-manipulation.ts","src/engines/functions/index.js","src/utils/styles/eva-dark-v1.ts","src/utils/styles/eva-light-v1.ts","src/utils/styles/color.ts","src/utils/styles/eva-config.ts","src/utils/styles/spacing.ts","src/utils/i18n/i18n.ts","src/utils/i18n/translate.ts","src/components/generals/toasty/src/toast.tsx","src/screens/project-screen/ProjectScreen.tsx","src/screens/project-screen/s-sockdart-hi-3d.tsx","src/screens/project-screen/s-koiwave-3d.tsx","src/screens/project-screen/s-ringading-deck.tsx","src/screens/project-screen/s-lucc-concept-3d.tsx","src/screens/project-screen/s-lucc-jacket-3d.tsx","src/screens/about-screen/AboutScreen.tsx","src/assets/images/x-icon.png","src/assets/images/khoi.jpg","src/assets/images/khoi-3d.jpg","src/assets/images/khoi-3d-round.jpg","src/assets/images/shades.png","src/assets/images/waving_hand_sign_512.gif","src/assets/images/sparkles_512.gif","src/assets/images/nguyenkhoi.gif","src/utils/index.js","src/screens/index.js","App.tsx","webpack:////Users/khoitran/Pictures/_WORKS/nguyenkhooi/index.js?3881","src/assets/index.js","src/engines/providers/app-provider.tsx","src/screens/_navigation/navigation-utils.tsx","src/screens/_navigation/primary.navigator.tsx","src/screens/_navigation/root.navigator.tsx"],"names":["useSheets","sheetName","_key","key","React","_fields","setFields","_data","setData","Tabletop","wanted","simpleSheet","a","async","R","googleData","console","data","fields","GalleryScreen","props","imageUrls","imageIndex","C","useAppContext","index","useNativeDriver","backgroundColor","Buttoon","icon","compact","appearance","disabled","onPress","progress","_loading","setLoading","_accessory","accessoryRight","color","p","preset","name","size","accessoryLeft","Keyboard","style","alignSelf","borderRadius","scale","borderWidth","width","height","margin","sstyled","dim","useDimension","finalStyle","isFunction","customStyle","externalProps","dims","Dimensions","Toasty","id","Math","onClose","requestAnimationFrame","toasts","t","message","toast","this","placement","offset","bottom","top","justifyContent","flexDirection","behavior","Platform","styles","pointerEvents","ref","_ref","p_","Component","defaultProps","StyleSheet","container","flex","position","maxWidth","alignItems","zIndex","left","right","TouchableWithoutFeedback","value","activeOpacity","hitSlop","useDefaultHitSlop","TouchableWeb","touchableProps","outlineWidth","H1","fontSize","fontWeight","H2","H3","H4","H5","H6","S1","S2","P1","letterSpacing","P2","C1","C2","$Title","paddingLeft","spacing","Txt","imageOpacity","Animated","thumbnailOpacity","state","toValue","duration","resizeMode","source","opacity","onLoad","blurRadius","image","SwipeDeck","containerStyle","cardStyle","_currentIndex","setCurrentIndex","WIDTH","HEIGHT","_containerStyle","Number","_cardStyle","_swipeDistance","_position","_rotateAndTranslate","transform","rotate","inputRange","outputRange","extrapolate","_likeOpacity","_dislikeOpacity","_nextCardOpacity","_currentCardOpacity","_nextCardScale","DeckPanResponder","PanResponder","onStartShouldSetPanResponder","onPanResponderMove","x","gestureState","y","onPanResponderRelease","friction","i","item","uri","YupTxt","padding","NahTxt","SS","CtnrContact","Animatable","borderColor","GridCtnr","type","_borderWidth","setBorderWidth","onMouseEnter","onMouseLeave","SSS","overflow","Animation","CtnrFilter","marginVertical","borderBottomWidth","marginLeft","GRID_CTNR","marginTop","marginHorizontal","ITEM_CTNR","itemName","itemCode","NiAvatar","dark","animation","img","NiStar","$_FlagRing","setI18N","animated","starColor","starSize","moderateScale","shieldSize","flagColor","tension","LANG","solid","Ctnr","paddingHorizontal","CtnrIntro","paddingRight","Avatar","TxtLink","S","CTNR_FLAG","FLAG_BCKGRD","CTNR_SHADES","CtnrGrid","useLinkTo","$_PortfolioGrid","refList","_workLayout","setWorkLayout","setExpLayout","scrollToSection","section","scrollToWork","scrollToExp","onLayout","ogData","refGrid","selectedIndex","setSelectedIndex","linkTo","use18","horizontal","onSelect","title","Set","cat","itemDimension","renderItem","delay","Navigation","project","$_ExperimentalGrid","keyExtractor","$_Intro","setTheme","_color","setColor","_weight","setFontWeight","THEME","adjustsFontSizeToFit","textDecorationLine","LinkURL","$_Contact","visible","setVisible","setUnderline","textAlign","fn","window","RNLinking","C_ContentCard","text","onImagePress","imageWidth","imageProp","chieuRong","CtnrImg","CtnrLabel","Label","IMG_CTNR","require","khoi","khoi3d","khoi3dRound","shades","wavingHand","sparkles","nguyenkhoi","iconOptions","admin","arrow_left","arrow_right","arrow_down","award","bars","ban","bell","flag","calendar","chat_bubble","chevron_right","check","compass","content_share","cog","contacts","dot","dots_horizontal","dots_vertical","email","eye","eye_slash","exclamation_circle","folder","hand_peace","heart","home","install","linkedin","list","lock","medal","minus","notification","pen","plus","placeholder","profile","rocket","refresh","share","sms","tools","send","star","trash","tv","videocam","people","unlock","discover","jcb","mastercard","visa","IconOooh","presets","_iconStyle","BrandedIcon","getType","default","safe","header","circular","isIphoneX","dimen","getBottomSpace","useWindowDimensions","guidelineBaseWidth","guidelineBaseHeight","shortDimension","longDimension","s","vs","ms","factor","mvs","ID","isDateZero","date","formatTime","showSeconds","capitalize","filterByValues","o","joinByType","collection","vLookup","getValue","hLookup","xLookup","ARR","lookupKey","RES","arrayMergeNoDup","filterKey","smartMerging","js","web","evaDark","evaLight","themeLight","hichPurple","maturePurple","grey900","grey600","grey500","pitchWhite","transparent","primary","primaryDarker","accent","accentDarker","background","background01","surface","surface01","line","text01","errorRed","hazardYellow","infoBlue","awakenVolt","storybookDarkBg","storybookTextColor","themeDark","colors","direction","_height","_width","rate","sheetData","Promise","i18nCodes","i18nEns","i18nVis","en","vi","i18n","resolve","code","lang","keyword","Toast","textStyle","successIcon","dangerIcon","warningIcon","loadingIcon","successColor","dangerColor","warningColor","refCtnr","useRef","useState","useEffect","closeTimeout","global","_icon","animationStyle","translateY","renderToast","paddingVertical","iconContainer","marginRight","route","screenShown","showScreen","projectColor","headline","_contents","setContents","_bodyContents","setBodyContents","_imgContents","setImgContents","dbContents","dbBodyContents","newContents","content","newBodyContents","imgContents","url","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","removeClippedSubviews","columns","evenColumnStyle","oddColumnStyle","imgIndex","images","$_LuccMain","$_LuccJacket","$_Koiwave","$_Sockdart","$_RingadingDeck","Sctnr","paddingTop","CtnrLoading","Headline","marginBottom","S_SockdartHi","src","frameborder","allow","mozallowfullscreen","webkitallowfullscreen","S_Koiwave","S_RingadingDeck","setDeckData","deckData","alignContent","category","Linking","S_LuccMain","S_LuccJacket","AboutScreen","contentContainerStyle","iterationCount","module","exports","navigationRef","setRootNavigation","useBackButtonHandler","useNavigationPersistence","initialNavigationState","onNavigationStateChange","initialState","onStateChange","registerRootComponent","App","AppProvider","children","_isReady","shouldReady","_theme","_colors","setColors","_dark","setDark","setLang","fetchi18n","r","_vi","_en","I18n","AppContext","isReady","theme","useContext","linking","prefixes","config","screens","Primary","Home","About","Project","path","navigate","goBack","resetRoot","getRootState","method","getActiveRouteName","canExitRef","onBackPress","navigation","routeName","BackHandler","isRestoringNavigationState","setIsRestoringNavigationState","routeNameRef","restoreState","currentRouteName","exitRoutes","canExit","presetNavConfig","durationSpec","noHeader","headerShown","headerTitle","param","noTitle","headerTitleStyle","screenProps","component","options","headerTransparent","Gallery","__PRIMARY","PrimaryStack","Stack","createStackNavigator","TransitionPresets","gestureEnabled","cardOverlayEnabled","animationEnabled","headerStyle","elevation","headerBackImage","initialRouteName","headerMode","mode","screenOptions","__ROOT","RootStack","transitionSpec","open","close","headerTitleAlign","AppNavigator"],"mappings":"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","file":"static/js/app.ee15e19c.chunk.js","sourcesContent":["import * as R from \"ramda\";\nimport * as React from \"react\";\nimport Tabletop from \"tabletop\";\n\n/**\n * Hook that use Tabletop to fetch data from google Sheets\n * @version 0.10.4\n * @see https://medium.com/@ryan.mcnierney/using-react-google-sheets-as-your-cms-294c02561d59\n *\n */\nexport function useSheets(\n  /** 0 for default Sheets file */\n  key: 0 | string,\n  sheetName: \"Work\" | \"Exp\" | \"About\" | \"Ringading_Exp\" = \"Work\"\n) {\n  const _key = key == 0 ? \"1QkECelCYiVVxopwsZD2UsLYZdmd1vFzFc0-pLb71rX8\" : key;\n  const [_fields, setFields] = React.useState<dFields>([]);\n  const [_data, setData] = React.useState<rSheets[] | null>([]);\n  React.useEffect(function fetchData() {\n    Tabletop.init({\n      key: _key,\n      /** set `wanted` with specific `sheetName` to get data only from that sheet */\n      wanted: [sheetName],\n      simpleSheet: true,\n    }).then(async (googleData: null | rSheets[]) => {\n      try {\n        !!googleData && setData(googleData) && setFields(R.keys(googleData[0]));\n      } catch (error) {\n        console.warn(\"err useSheets: \", error);\n      }\n    });\n  }, []);\n\n  return { data: _data, fields: _fields };\n}\n\ntype dFields = (string | number | symbol)[];\nexport type rSheets = {\n  _id: string;\n  title: string;\n  thumbnail: string;\n  color: string;\n  label: string;\n  headline: string;\n  body: string;\n  body00?: string;\n  body01?: string;\n  body02?: string;\n  body03?: string;\n  body04?: string;\n  body05?: string;\n  body06?: string;\n  body07?: string;\n  body08?: string;\n  body09?: string;\n  body10?: string;\n  image00?: string;\n  image01?: string;\n  image02?: string;\n  image03?: string;\n  image04?: string;\n  image05?: string;\n  image06?: string;\n  image07?: string;\n  image08?: string;\n  image09?: string;\n  image10?: string;\n};\n","import { useAppContext } from \"engines\";\nimport React from \"react\";\n// import { ScrollView } from \"react-native-gesture-handler\";\nimport ImageViewer from \"react-native-image-zoom-viewer\";\n\nexport function GalleryScreen(props) {\n  const imageUrls = React.useMemo(() => props.route.params.images, [\n    props.route.params,\n  ]);\n  const imageIndex = React.useMemo(() => props.route.params.imgIndex, [\n    props.route.params,\n  ]);\n  const { C } = useAppContext();\n\n  return (\n    <ImageViewer\n      imageUrls={imageUrls}\n      index={imageIndex}\n      useNativeDriver={true}\n      backgroundColor={C.background01}\n    />\n  );\n}\n\n// const images = [\n//   {\n//     url: \"https://avatars2.githubusercontent.com/u/7970947?v=3&s=460\",\n//   },\n//   {\n//     url: \"https://avatars2.githubusercontent.com/u/7970947?v=3&s=460\",\n//   },\n//   {\n//     url: \"https://avatars2.githubusercontent.com/u/7970947?v=3&s=460\",\n//   },\n//   {\n//     url: \"https://avatars2.githubusercontent.com/u/7970947?v=3&s=460\",\n//   },\n// ];\n","import { Button, ButtonProps } from \"@ui-kitten/components\";\nimport { dIconOooh, IconOooh } from \"assets\";\nimport { dAccessory } from \"components\";\nimport * as React from \"react\";\nimport { ActivityIndicator, Keyboard } from \"react-native\";\nimport { scale } from \"utils\";\n\n/**\n * ### This is button component\n * ---\n * @example\n *  <Buttoon\n      onPress={() => {}}\n      appearance=\"ghost\"\n      icon={{ name: \"chevron_right\"}}\n      status=\"basic\"\n      \n    >\n      Nine-nine!\n    </Buttoon>\n *\n * @version 0.11.25\n * -  *fix _accessory to return null if !accessoryLeft/Right*\n */\nexport function Buttoon(props: P) {\n  const {\n    icon,\n    compact = false,\n    appearance,\n    disabled,\n    onPress,\n    progress,\n  } = props;\n  const [_loading, setLoading] = React.useState(false);\n\n  /**\n   * Internal onPress(),\n   * handling progress loading state\n   */\n  function _onPress() {\n    !!progress && setLoading(progress);\n    Keyboard.dismiss();\n    //@ts-ignore\n    onPress && onPress(() => setLoading(false));\n  }\n  /**\n   * Setup Button's accessory prop to be\n   * either `accessoryLeft` or `accessoryRight`,\n   * depending on `!!icon.right`\n   */\n  const _accessory = !!!icon\n    ? null\n    : !!icon?.right\n    ? {\n        accessoryRight: (p: dAccessory) => {\n          return _loading ? (\n            <ActivityIndicator color={p.style.tintColor} />\n          ) : (\n            // <></>\n            <IconOooh\n              preset={\"default\"}\n              name={`arrow_left`}\n              size={p.style.width * 0.8}\n              color={p.style.tintColor}\n              {...icon}\n            />\n          );\n        },\n      }\n    : {\n        accessoryLeft: (p: dAccessory) => {\n          return _loading ? (\n            <ActivityIndicator color={p.style.tintColor} />\n          ) : (\n            // <></>\n            <IconOooh\n              preset={\"default\"}\n              name={`arrow_left`}\n              size={p.style.width * 0.8}\n              color={p.style.tintColor}\n              {...icon}\n            />\n          );\n        },\n      };\n  return (\n    //@ts-ignore as _accessory's expected Image, but i can use any <_>\n    <Button\n      {...props}\n      onPress={_onPress}\n      style={[\n        props.style,\n        // { margin: spacing(1) },\n        compact && { alignSelf: \"center\" },\n        disabled && appearance == \"ghost\" && { backgroundColor: \"transparent\" },\n        appearance == \"icon\" && {\n          borderRadius: scale(100),\n          borderWidth: 0,\n          width: scale(20),\n          height: scale(20),\n          margin: scale(3),\n        },\n      ]}\n      {..._accessory}\n    />\n  );\n}\n\n// const Confirmation = (props: P) => {\n//   const [_label, setLabel] = React.useState(props.children);\n//   return <Buttoon {...props} />;\n// };\n\ninterface P extends ButtonProps {\n  icon?: dIconOooh & {\n    /** Is icon on the right? */\n    right?: boolean;\n  };\n\n  /**\n   * Should button be wrapped around its children (\"compact\")?\n   */\n  compact?: boolean;\n\n  progress?: boolean;\n}\n","// import { useAppContext } from \"engines\";\nimport { useAppContext } from \"engines\";\nimport { isFunction } from \"lodash\";\nimport React, { ReactNode } from \"react\";\nimport { dColors, dDime, useDimension } from \"utils\";\n\n/**\n * ### \"Super\" styled component. \n * -  Mimicking `styled-components`, \n * with RN props (and Typescript),\n * now including dynamic dimension for rn-web\n * ---\n * \n * @example\n * ```\n * const RoundedButton = sstyled(Button)((p)=> {\n    borderRadius: p.ms(10),\n    backgroundColor: p.C.primary,\n    });\n  ```\n * ---\n * @description Under the hood is the scoped functions,\n * -  Get externalProps, pass it to customStyle to use if needed\n * -  Pass theme's colors and dim to make customStyle dynamic af\n * ```\n * <Comp1 {\"external_props\"} /> = sstyled(Comp0)(({\"external_props_is_here_too\", ...dim, C})=> ({\"custom_style\"}))\n * ```\n * @version 1.12.8\n * - *Fix typed error*\n * - *Clean up*\n * @author nguyenkhooi\n */\nexport function sstyled<C extends React.ElementType>(GivenComp: C) {\n  /**\n   * Props of GivenComp (externalProps) are combined with customStyle\n   * to create finalStyle\n   */\n  return (\n    customStyle: dCustomStyle<C, dDime & { C: dColors }>\n  ): React.FC<React.ComponentProps<C>> => {\n    return (externalProps) => {\n      //*----Dimension & Colors-------\n      const dim = useDimension();\n      const { C } = useAppContext();\n\n      let finalStyle = {\n        ...(isFunction(customStyle)\n          ? /**\n             * If customeStyle is function:\n             * customStyle(_) will TAKE external props, dim, and C;\n             * return a dynamic `finalStyle`\n             * ...\n             */\n            customStyle({\n              ...externalProps,\n              ...dim,\n              C,\n            })\n          : /**\n             * ...else, just return customStyle {}\n             */\n            customStyle),\n\n        ...externalProps.style, //* In case u defines style in externalProps\n      };\n      return React.createElement(GivenComp, {\n        ...externalProps,\n        style: finalStyle,\n      });\n    };\n  };\n}\n\ntype dCustomStyle<C extends React.ElementType, ExtraProps> =\n  | (React.ComponentProps<C> & ExtraProps)\n  | React.ComponentProps<C>[\"style\"]\n  | ((\n      props: React.ComponentProps<C> & ExtraProps\n    ) => React.ComponentProps<C>[\"style\"]);\n","import React, { Component } from \"react\";\r\nimport {\r\n  Dimensions,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  StyleSheet,\r\n  ViewStyle\r\n} from \"react-native\";\r\nimport { Toast, ToastOptions, ToastProps } from \"./toast\";\r\n\r\nconst dims = Dimensions.get(\"window\");\r\n\r\nexport interface Props extends ToastOptions {\r\n  offset?: number;\r\n  placement: \"top\" | \"bottom\";\r\n}\r\n\r\ninterface State {\r\n  toasts: Array<ToastProps>;\r\n}\r\n\r\n/**\r\n * A Toast component for react-native, supports Android, IOS, Web, Windows\r\n *\r\n * ---\r\n * @example\r\n *\r\n * ```\r\n * <Text onPress={()=> Toasty.show(\"Hello mf\", { type: \"success\" })}>Toast!</Text>\r\n * ```\r\n * - In `App.tsx`, add: `<Toasty ref={(ref) => Toasty.setRef(ref)} />`\r\n * ---\r\n * @version 0.10.23\r\n * - *(Preset icon)*\r\n * - *(Add `update()`)*\r\n * - *(Build this up)*\r\n *\r\n * @author nguyenkhooi\r\n * @see https://github.com/arnnis/react-native-fast-toast\r\n */\r\nexport default class Toasty extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      toasts: [],\r\n    };\r\n  }\r\n\r\n  static defaultProps = {\r\n    placement: \"bottom\",\r\n    offset: 60,\r\n  };\r\n  refToast = React.createRef<Toasty>();\r\n\r\n  static _ref: null | Toasty = null;\r\n\r\n  /**\r\n   * In `App.tsx`, add: `<Toasty ref={(ref) => Toasty.setRef(ref)} />`\r\n   */\r\n  static setRef(ref: null | Toasty = null) {\r\n    this._ref = ref;\r\n  }\r\n\r\n  static getRef() {\r\n    return this._ref;\r\n  }\r\n\r\n  static clearRef() {\r\n    this._ref = null;\r\n  }\r\n\r\n  /**\r\n   * Show toasty with message and option\r\n   *\r\n   * ---\r\n   * @example\r\n   * <Text onPress={()=> Toasty.show(\"Hello mf\", { type: \"success\" })}>Toast!</Text>\r\n   */\r\n  static show(message: string, p_: ToastOptions) {\r\n    let id = this._ref?._show(message, p_);\r\n    return id;\r\n  }\r\n\r\n  /**\r\n   * Update current toasty with new message and option\r\n   *\r\n   * ---\r\n   * @example\r\n   * const __toast = Toasty.show(\"...\", { type: \"loading\" });\r\n\r\n    !!__toast &&\r\n      Toasty.update(__toast, \"Done!\", { type: \"success\" });\r\n   */\r\n  static update(id: string, message: string, p_: ToastOptions) {\r\n    this._ref?._update(id, message, p_);\r\n  }\r\n\r\n  /**\r\n   * Hide the current toasty\r\n   *\r\n   * ---\r\n   *  @example\r\n   * const __toast = Toasty.show(\"Sup dude\", { type: \"success\" });\r\n\r\n    !!__toast && Toasty.hide(__toast);\r\n   */\r\n  static hide(id: string) {\r\n    this._ref?._hide(id);\r\n  }\r\n\r\n  private _show = (\r\n    message: string | JSX.Element,\r\n    toastOptions?: ToastOptions\r\n  ) => {\r\n    let id = Math.random().toString();\r\n    const onClose = () => this._hide(id);\r\n\r\n    requestAnimationFrame(() => {\r\n      this.setState({ toasts: this.state.toasts.filter((t) => t.id !== id) });\r\n      this.setState({\r\n        toasts: [\r\n          {\r\n            id,\r\n            onClose,\r\n            message,\r\n            ...toastOptions,\r\n          },\r\n          ...this.state.toasts,\r\n        ],\r\n      });\r\n    });\r\n\r\n    return id;\r\n  };\r\n\r\n  private _update = (\r\n    id: string,\r\n    message: string | JSX.Element,\r\n    toastOptions?: ToastOptions\r\n  ) => {\r\n    this.setState({\r\n      toasts: this.state.toasts.map((toast) =>\r\n        toast.id === id ? { ...toast, message, ...toastOptions } : toast\r\n      ),\r\n    });\r\n  };\r\n\r\n  private _hide = (id: string) => {\r\n    this.setState({ toasts: this.state.toasts.filter((t) => t.id !== id) });\r\n  };\r\n\r\n  render() {\r\n    const { toasts } = this.state;\r\n    let { placement, offset } = this.props;\r\n\r\n    let style: ViewStyle = {\r\n      bottom: placement === \"bottom\" ? offset : undefined,\r\n      top: placement === \"top\" ? offset : undefined,\r\n      justifyContent: placement === \"bottom\" ? \"flex-end\" : \"flex-start\",\r\n      flexDirection: placement === \"bottom\" ? \"column\" : \"column-reverse\",\r\n    };\r\n\r\n    return (\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === \"ios\" ? \"position\" : undefined}\r\n        style={[styles.container, style]}\r\n        pointerEvents=\"box-none\"\r\n      >\r\n        {toasts.map((toast) => (\r\n          <Toast key={toast.id} {...this.props} {...toast} />\r\n        ))}\r\n      </KeyboardAvoidingView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 0,\r\n    position: \"absolute\",\r\n    maxWidth: dims.width * 10 * 9,\r\n    bottom: 100,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    borderRadius: 5,\r\n    zIndex: 999,\r\n    left: \"10%\",\r\n    right: \"10%\",\r\n  },\r\n  message: {\r\n    color: \"#333\",\r\n  },\r\n});\r\n\r\n// export default Toasty;\r\n","import React from \"react\";\r\nimport Toasty from \"../Toasty\";\r\n\r\ntype Toast = React.RefObject<Toasty>[\"current\"];\r\n\r\nexport const ToastyContext = React.createContext(null as Toast);\r\n\r\n// export default ToastyContext;\r\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from \"react\";\nimport {\n    Insets,\n    StyleSheet,\n    TouchableOpacity,\n    TouchableOpacityProps,\n    ViewStyle\n} from \"react-native\";\n\nexport interface TouchableWithoutFeedbackProps extends TouchableOpacityProps {\n  useDefaultHitSlop?: boolean;\n  children?: React.ReactNode;\n}\n\nexport type TouchableWithoutFeedbackElement = React.ReactElement<\n  TouchableWithoutFeedbackProps\n>;\n\n/**\n * Helper component for the Touchable component with no opacity feedback.\n *\n * Applies recommended hitSlop by default.\n * @see https://reactnative.dev/docs/view#hitslop\n *\n * Allows passing ReactNode as children whereas original TouchableWithoutFeedback not.\n */\nexport class TouchableWithoutFeedback extends React.Component<\n  TouchableWithoutFeedbackProps\n> {\n  private createHitSlopInsets = (): Insets => {\n    const flatStyle: ViewStyle = StyleSheet.flatten(this.props.style || {});\n\n    // @ts-ignore: `width` is restricted to be a number\n    const value: number = 40 - flatStyle.height || 0;\n\n    return {\n      left: value,\n      top: value,\n      right: value,\n      bottom: value,\n    };\n  };\n\n  public render(): React.ReactElement {\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        hitSlop={this.props.useDefaultHitSlop && this.createHitSlopInsets()}\n        {...this.props}\n      />\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from \"react\";\nimport {\n    NativeSyntheticEvent,\n    Platform,\n    StyleSheet,\n    TargetedEvent\n} from \"react-native\";\nimport {\n    TouchableWithoutFeedback,\n    TouchableWithoutFeedbackProps\n} from \"./touchie\";\n\nexport interface TouchableWebProps extends TouchableWithoutFeedbackProps {\n  onMouseEnter?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n  onMouseLeave?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n  onFocus?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n  onBlur?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n}\n\nexport type TouchableWebElement = React.ReactElement<TouchableWebProps>;\n\n/**\n * Helper component for the Touchable component rendered on the web.\n * \n * @example\n *  const [_color, setColor] = React.useState(\"dodgerblue\")\n *  \n *  <TouchableWeb\n        onMouseEnter={(e) => {\n          setColor(\"tomato\");\n        }}\n        onMouseLeave={(e) => {\n          setColor(\"dodgerblue\");\n        }}\n      >\n        <Text style={{color: _color }>Hi, I'm Khoi 👋</Text>\n    </TouchableWeb>\n */\nexport class TouchableWeb extends React.Component<TouchableWebProps> {\n  public render(): React.ReactElement {\n    const { style, ...touchableProps } = this.props;\n\n    return (\n      <TouchableWithoutFeedback\n        {...touchableProps}\n        style={[styles.container, style]}\n      />\n    );\n  }\n}\n\nconst styles =\n  Platform.OS === \"web\" &&\n  StyleSheet.create({\n    container: {\n      // @ts-ignore\n      outlineWidth: 0,\n    },\n  });\n","import { Text, TextProps } from \"@ui-kitten/components\";\nimport { spacing } from \"utils\";\nimport { sstyled } from \"../sstyled/sstyled\";\n\nconst H1 = sstyled(Text)((p) => ({\n  fontSize: p.ms(36),\n  fontWeight: \"800\",\n}));\nconst H2 = sstyled(Text)((p) => ({\n  fontSize: p.ms(32),\n  fontWeight: \"800\",\n}));\nconst H3 = sstyled(Text)((p) => ({\n  fontSize: p.ms(30),\n  fontWeight: \"800\",\n}));\nconst H4 = sstyled(Text)((p) => ({\n  fontSize: p.ms(26),\n  fontWeight: \"800\",\n}));\nconst H5 = sstyled(Text)((p) => ({\n  fontSize: p.ms(22),\n  fontWeight: \"800\",\n}));\nconst H6 = sstyled(Text)((p) => ({\n  fontSize: p.ms(18),\n  fontWeight: \"800\",\n}));\nconst S1 = sstyled(Text)((p) => ({\n  fontSize: p.ms(15),\n  fontWeight: \"600\",\n}));\nconst S2 = sstyled(Text)((p) => ({\n  fontSize: p.ms(13),\n  fontWeight: \"600\",\n}));\nconst P1 = sstyled(Text)((p) => ({\n  fontSize: p.ms(14),\n  fontWeight: \"400\",\n  letterSpacing: 0.5,\n}));\nconst P2 = sstyled(Text)((p) => ({\n  fontSize: p.ms(12),\n  fontWeight: \"400\",\n  letterSpacing: 0.5,\n}));\nconst C1 = sstyled(Text)((p) => ({\n  fontSize: p.ms(12),\n  fontWeight: \"400\",\n}));\nconst C2 = sstyled(Text)((p) => ({\n  fontSize: p.ms(12),\n  fontWeight: \"400\",\n}));\nconst $Title = sstyled(H6)((p) => ({\n  paddingLeft: spacing(5),\n  color: p.C.grey600,\n}));\n\n/**\n * A text component of the project,\n * depending on ui-kitten's Text\n * ---\n * @example\n * ```\n * <Txt>👋</Txt>\n * ```\n * ---\n * @version 0.11.25\n * - *No more `ms(size)` to reduce font size*\n */\nexport const Txt: dTxtC0 = P1;\nTxt.H1 = H1;\nTxt.H2 = H2;\nTxt.H3 = H3;\nTxt.H4 = H4;\nTxt.H5 = H5;\nTxt.H6 = H6;\nTxt.S1 = S1;\nTxt.S2 = S2;\nTxt.P1 = P1;\nTxt.P2 = P2;\nTxt.C1 = C1;\nTxt.C2 = C2;\nTxt.$Title = $Title;\n\nexport interface dTxtC0 extends React.FC<TextProps> {\n  /** Heading 1 */\n  H1?: React.FC<TextProps>;\n  H2?: React.FC<TextProps>;\n  H3?: React.FC<TextProps>;\n  H4?: React.FC<TextProps>;\n  H5?: React.FC<TextProps>;\n  H6?: React.FC<TextProps>;\n  /** Subheading 1 */\n  S1?: React.FC<TextProps>;\n  S2?: React.FC<TextProps>;\n  P1?: React.FC<TextProps>;\n  P2?: React.FC<TextProps>;\n  C1?: React.FC<TextProps>;\n  C2?: React.FC<TextProps>;\n  /** Section Title */\n  $Title?: React.FC<TextProps>;\n}\n// export const Txt = Text;\n","import React, { Component } from \"react\";\nimport { Animated, View, Image, StyleSheet } from \"react-native\";\n\nexport class Ima extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageOpacity: new Animated.Value(0),\n      thumbnailOpacity: new Animated.Value(0),\n    };\n  }\n\n  onLoadThumbnail() {\n    Animated.timing(this.state.thumbnailOpacity, {\n      toValue: 1,\n      duration: this.props.thumbnailFadeDuration,\n      useNativeDriver: true,\n    }).start();\n    !!this.props.onLoadThumbnail && this.props.onLoadThumbnail();\n  }\n\n  onLoadImage() {\n    Animated.timing(this.state.imageOpacity, {\n      toValue: 1,\n      duration: this.props.imageFadeDuration,\n      useNativeDriver: true,\n    }).start();\n    !!this.props.onLoadImage && this.props.onLoadImage();\n  }\n\n  render() {\n    return (\n      <View style={this.props.style}>\n        <Image\n          resizeMode=\"cover\"\n          style={[styles.image, this.props.style]}\n          source={this.props.placeHolderSource}\n        />\n        <Animated.Image\n          resizeMode=\"cover\"\n          style={[\n            styles.image,\n            { opacity: this.state.thumbnailOpacity },\n            this.props.style,\n          ]}\n          source={this.props.thumbnailSource}\n          onLoad={() => this.onLoadThumbnail()}\n          blurRadius={this.props.thumbnailBlurRadius}\n        />\n        <Animated.Image\n          resizeMode=\"cover\"\n          style={[\n            styles.image,\n            { opacity: this.state.imageOpacity },\n            this.props.style,\n          ]}\n          source={this.props.imageSource}\n          onLoad={() => this.onLoadImage()}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  image: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n});\n","import { Text } from \"@ui-kitten/components\";\nimport { sstyled } from \"components/generals\";\nimport React from \"react\";\nimport {\n  Animated,\n  Image,\n  PanResponder,\n  PanResponderInstance,\n  View,\n  ViewStyle,\n} from \"react-native\";\nimport { useDimension } from \"utils\";\n\nexport const useComponentWillMount = (func, condition: any[]) => {\n  React.useMemo(func, []);\n};\n\ninterface dCOMPSwipeDeck {\n  data: any[];\n  containerStyle?: ViewStyle;\n  cardStyle?: ViewStyle;\n}\n\n/**\n * A SwipeDeck to yay or nay sth\n * \n * @example\n * <SwipeDeck\n      {...props}\n      data={[\n        {\n          id: '1',\n          uri:\n            'https://s.aolcdn.com/hss/storage/midas/e7998a2022772944bf34580700e3586e/203932724/leaguewallpaper.jpg',\n        },\n        {\n          id: '2',\n          uri: 'https://images4.alphacoders.com/600/thumb-1920-600528.png',\n        },\n        {\n          id: '3',\n          uri:\n            'https://image.winudf.com/v2/image/Y29tLnRkZy5sb2x3YWxscGFwZXJzX3NjcmVlbl85XzE1MzA3MTgwNThfMDY2/screen-9.jpg?fakeurl=1&type=.jpg',\n        },\n      ]}\n    />\n */\nexport function SwipeDeck(props: dCOMPSwipeDeck) {\n  const {\n    data,\n    containerStyle = { width: 1200, height: 1800 },\n    cardStyle = { width: 600, height: 900 },\n  } = props;\n  const [_currentIndex, setCurrentIndex] = React.useState(0);\n  const [_data, setData] = React.useState(data);\n  const { WIDTH, HEIGHT } = useDimension();\n\n  const _containerStyle: ViewStyle = {\n    ...containerStyle,\n    width: Number(containerStyle.width),\n    height: Number(containerStyle.height),\n  };\n\n  const _cardStyle: ViewStyle = {\n    ...cardStyle,\n    left: !!containerStyle?.width\n      ? Number(containerStyle.width) / 2 - Number(cardStyle?.width) / 2\n      : WIDTH / 2 - Number(cardStyle?.width) / 2,\n    top: !!containerStyle?.height\n      ? Number(containerStyle.height) / 2 - Number(cardStyle?.height) / 2\n      : HEIGHT / 2 - Number(cardStyle.height) / 2,\n  };\n\n  const _swipeDistance = Number(_containerStyle.width) / 2;\n\n  let _position = new Animated.ValueXY();\n  let _rotate = _position.x.interpolate({\n    inputRange: [-_swipeDistance, 0, _swipeDistance],\n    outputRange: [\"-10deg\", \"0deg\", \"10deg\"],\n    extrapolate: \"clamp\",\n  });\n\n  let _rotateAndTranslate = {\n    transform: [\n      {\n        rotate: _rotate,\n      },\n      ..._position.getTranslateTransform(),\n    ],\n  };\n\n  let _likeOpacity = _position.x.interpolate({\n    inputRange: [-_swipeDistance, 0, _swipeDistance],\n    outputRange: [0, 0, 1],\n    extrapolate: \"clamp\",\n  });\n  let _dislikeOpacity = _position.x.interpolate({\n    inputRange: [-_swipeDistance, 0, _swipeDistance],\n    outputRange: [1, 0, 0],\n    extrapolate: \"clamp\",\n  });\n\n  let _nextCardOpacity = _position.x.interpolate({\n    inputRange: [-_swipeDistance, 0, _swipeDistance],\n    outputRange: [1, 0, 1],\n    extrapolate: \"clamp\",\n  });\n  let _currentCardOpacity = _position.x.interpolate({\n    inputRange: [-_swipeDistance, 0, _swipeDistance],\n    outputRange: [0.1, 1, 0.1],\n    extrapolate: \"clamp\",\n  });\n  let _nextCardScale = _position.x.interpolate({\n    inputRange: [-_swipeDistance, 0, _swipeDistance],\n    outputRange: [1, 0.8, 1],\n    extrapolate: \"clamp\",\n  });\n\n  function onRestartDeck() {}\n\n  let DeckPanResponder: PanResponderInstance;\n  function applyPanResponder() {\n    console.log(\"mounting..\");\n    DeckPanResponder = PanResponder.create({\n      onStartShouldSetPanResponder: (evt, gestureState) => true,\n      onPanResponderMove: (evt, gestureState) => {\n        _position.setValue({ x: gestureState.dx, y: gestureState.dy });\n      },\n      onPanResponderRelease: (evt, gestureState) => {\n        switch (gestureState.dx > 120) {\n          /** Swipe Right */\n          case true:\n            setCurrentIndex(_currentIndex + 1);\n            return Animated.spring(_position, {\n              toValue: { x: WIDTH + 100, y: gestureState.dy },\n              useNativeDriver: true,\n            }).start(() => {\n              /** Post swipe right */\n              _position.setValue({ x: 0, y: 0 });\n            });\n            break;\n          /** Swipe Left */\n          case false:\n            setCurrentIndex(_currentIndex + 1);\n            return Animated.spring(_position, {\n              toValue: { x: -WIDTH - 100, y: gestureState.dy },\n              useNativeDriver: true,\n            }).start(() => {\n              /** Post swipe left */\n              _position.setValue({ x: 0, y: 0 });\n            });\n            break;\n          /** If user doesn't complete a swipe */\n          default:\n            return Animated.spring(_position, {\n              toValue: { x: 0, y: 0 },\n              friction: 4,\n              useNativeDriver: true,\n            }).start();\n            break;\n        }\n\n        // if (gestureState.dx > 120) {\n        //   setCurrentIndex(_currentIndex + 1);\n        //   Animated.spring(_position, {\n        //     toValue: { x: width + 100, y: gestureState.dy },\n        //     useNativeDriver: true,\n        //   }).start(() => {\n        //     /** Post swipe right */\n        //     _position.setValue({ x: 0, y: 0 });\n        //   });\n        // } else if (gestureState.dx < -120) {\n        //   /** Swipe Left */\n        //   setCurrentIndex(_currentIndex + 1);\n        //   Animated.spring(_position, {\n        //     toValue: { x: -width - 100, y: gestureState.dy },\n        //     useNativeDriver: true,\n        //   }).start(() => {\n        //     /** Post swipe left */\n        //     _position.setValue({ x: 0, y: 0 });\n        //   });\n        // } else {\n        //   /** If user doesn't complete a swipe */\n        //   Animated.spring(_position, {\n        //     toValue: { x: 0, y: 0 },\n        //     friction: 4,\n        //     useNativeDriver: true,\n        //   }).start();\n        // }\n      },\n    });\n  }\n\n  /**\n   * Apply and re-apply panResponder when either:\n   *    currentIndex changes (post swipe), or\n   *    dimension changes (making cardStyle changes)\n   *\n   */\n  React.useMemo(applyPanResponder, [_currentIndex, _cardStyle]);\n\n  function renderUsers() {\n    return _data\n      .map((item, i: number) => {\n        if (i < _currentIndex) {\n          return null; //* has to be null to have it disappeared\n        } else if (i == _currentIndex) {\n          return (\n            <Animated.View\n              {...DeckPanResponder?.panHandlers}\n              key={item._id}\n              style={[\n                _rotateAndTranslate,\n                _cardStyle,\n                { position: \"absolute\" },\n              ]}\n            >\n              <Animated.View\n                style={{\n                  opacity: _likeOpacity,\n                  transform: [{ rotate: \"-30deg\" }],\n                  position: \"absolute\",\n                  top: 50,\n                  left: 40,\n                  zIndex: 1000,\n                }}\n              >\n                <YupTxt {...props}>Yup</YupTxt>\n              </Animated.View>\n\n              <Animated.View\n                style={{\n                  opacity: _dislikeOpacity,\n                  transform: [{ rotate: \"30deg\" }],\n                  position: \"absolute\",\n                  top: 50,\n                  right: 40,\n                  zIndex: 1000,\n                }}\n              >\n                <NahTxt {...props}>Nah</NahTxt>\n              </Animated.View>\n\n              <Animated.Image\n                style={{\n                  flex: 1,\n                  resizeMode: \"cover\",\n                  borderRadius: 20,\n                  opacity: _currentCardOpacity,\n                }}\n                source={{ uri: item.photo00 }}\n              />\n            </Animated.View>\n          );\n        } else {\n          return (\n            <Animated.View\n              key={item.id}\n              style={[\n                _cardStyle,\n                {\n                  opacity: _nextCardOpacity,\n                  transform: [{ scale: _nextCardScale }],\n                  position: \"absolute\",\n                },\n              ]}\n            >\n              <Image\n                style={{\n                  flex: 1,\n                  resizeMode: \"cover\",\n                  borderRadius: 20,\n                }}\n                source={{ uri: item.photo00 }}\n              />\n            </Animated.View>\n          );\n        }\n      })\n      .reverse();\n  }\n  return (\n    <View style={[_containerStyle]}>\n      {/* <Text\n        style={{\n          borderWidth: 1,\n          borderColor: \"green\",\n          color: \"green\",\n          fontSize: 32,\n          fontWeight: \"800\",\n          padding: 10,\n        }}\n      >\n        {JSON.stringify(_currentIndex)}\n      </Text> */}\n      {renderUsers()}\n    </View>\n  );\n}\n\nconst YupTxt = sstyled(Text)({\n  color: \"#39FF14\",\n  fontSize: 32,\n  fontWeight: \"600\",\n  padding: 10,\n});\n\nconst NahTxt = sstyled(Text)({\n  color: \"tomato\",\n  fontSize: 32,\n  fontWeight: \"600\",\n  padding: 10,\n});\n","import { img } from \"assets\";\nimport { Buttoon, sstyled, TouchableWeb, Txt } from \"components\";\nimport { fn, useAppContext } from \"engines\";\nimport React from \"react\";\nimport { Image, View } from \"react-native\";\nimport * as Animatable from \"react-native-animatable\";\nimport { IPSCR, spacing, use18, useDimension } from \"utils\";\n\ninterface d$_Intro extends IPSCR {\n  scrollToWork(): void;\n  scrollToExp(): void;\n}\nexport function S_Contact(props: d$_Intro) {\n  const { scrollToWork, scrollToExp } = props;\n  const { C, dark, setTheme } = useAppContext();\n  const { HEIGHT } = useDimension(\"window\");\n  const [visible, setVisible] = React.useState(false);\n  const [_underline, setUnderline] = React.useState<\"none\" | \"underline\">(\n    \"none\"\n  );\n\n  return (\n    <View\n      style={{\n        // height: HEIGHT,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <SS.CtnrContact animation=\"fadeIn\" delay={1000}>\n        <TouchableWeb\n          style={{ justifyContent: \"flex-start\" }}\n          onMouseEnter={() => {\n            setVisible(true);\n            setUnderline(\"underline\");\n          }}\n          onMouseLeave={() => {\n            setVisible(false);\n            setUnderline(\"none\");\n          }}\n        >\n          <Txt.H6 style={{ textAlign: \"center\", color: C[\"color-basic-1100\"] }}>\n            {use18(\"contact-title\")}\n          </Txt.H6>\n          <View\n          // style={{ flexDirection: \"row\", justifyContent: \"space-around\" }}\n          >\n            <Buttoon\n              appearance=\"ghost\"\n              compact\n              size=\"giant\"\n              style={{ borderRadius: 100 }}\n              icon={{\n                name: \"email\",\n                color: visible ? C.errorRed : C.primary,\n              }}\n              onPress={() => {\n                fn.web.LinkURL(\n                  `mailto:drkhoi16@gmail.com?subject=Hi Khoi&body=`,\n                  true\n                );\n              }}\n            >\n              drkhoi16atgmail\n            </Buttoon>\n            <Buttoon\n              appearance=\"ghost\"\n              compact\n              icon={{\n                name: \"linkedin\",\n                color: visible ? C.infoBlue : C.primary,\n              }}\n              size=\"giant\"\n              style={{ borderRadius: 100 }}\n              onPress={() => {\n                fn.web.LinkURL(`https://www.linkedin.com/in/ktran5`, true);\n              }}\n            >\n              linkedinatktran5\n            </Buttoon>\n          </View>\n        </TouchableWeb>\n        <Image\n          source={img.nguyenkhoi}\n          style={{\n            width: 714 * 0.5,\n            height: 288 * 0.5,\n            borderRadius: 10,\n            overflow: \"hidden\",\n            opacity: 1\n          }}\n        />\n      </SS.CtnrContact>\n      <Txt.C2\n        style={{\n          color: C.grey500,\n          marginVertical: spacing(5),\n          fontSize: 12,\n          fontWeight: \"700\",\n        }}\n      >\n        <Txt.C2\n          style={{ color: C.grey500, fontSize: 12, fontWeight: \"700\" }}\n          onPress={() =>\n            fn.web.LinkURL(\n              \"https://github.com/nguyenkhooi/nguyenkhooi.github.io\",\n              true\n            )\n          }\n        >\n          {use18(\"Proudly created with\") + \" ❤️, \"}\n        </Txt.C2>\n        <Txt.C2\n          style={{ color: C.grey500, fontSize: 12, fontWeight: \"700\" }}\n          onPress={() =>\n            fn.web.LinkURL(\n              \"https://akveo.github.io/react-native-ui-kitten/\",\n              true\n            )\n          }\n        >\n          {use18(\"ui kitten\") + \"😸, \"}\n        </Txt.C2>\n        {use18(\"and yup\") + \", \"}\n        <Txt.C2\n          style={{ color: C.grey500, fontSize: 12, fontWeight: \"700\" }}\n          onPress={() =>\n            fn.web.LinkURL(\n              \"http://necolas.github.io/react-native-web/docs/?path=/docs/overview-getting-started--page\",\n              true\n            )\n          }\n        >\n          {use18(\"react native web\") + \"⚛️🕸️. \"}\n        </Txt.C2>\n      </Txt.C2>\n      {/* <Txt.C2\n        style={{\n          color: C.grey500,\n          textDecorationLine: \"underline\",\n          fontSize: 12,\n          fontWeight: \"700\",\n        }}\n        onPress={() => Toasty.show(\"Yessir!\", { type: \"normal\" })}\n      >\n        {use18(\"Wait, really?\")}\n      </Txt.C2> */}\n    </View>\n  );\n}\n\nconst SS = {\n  CtnrContact: sstyled(Animatable.View)((p) => ({\n    padding: spacing(6),\n    alignItems: \"center\",\n    backgroundColor: p.C[\"color-basic-200\"],\n    alignSelf: \"center\",\n    borderRadius: 5,\n    borderWidth: 2,\n    borderColor: p.C.dim,\n  })),\n};\n","import { IndexPath, Menu, MenuItem, Text } from \"@ui-kitten/components\";\nimport { Txt, TouchableWeb, TouchableWebProps, sstyled } from \"components\";\nimport { useSheets } from \"engines/hooks\";\nimport { useAppContext } from \"engines\";\nimport * as R from \"ramda\";\nimport React from \"react\";\nimport {\n  ActivityIndicator,\n  ImageBackground,\n  TextStyle,\n  View,\n  ViewStyle,\n} from \"react-native\";\nimport { FlatGrid } from \"react-native-super-grid\";\nimport { Placeholder, ShineOverlay, PlaceholderMedia } from \"rn-placeholder\";\nimport { Navigation } from \"screens/_navigation\";\nimport { dColors, IPSCR, scale, spacing, use18, useDimension } from \"utils\";\nimport * as Animatable from \"react-native-animatable\";\nimport { useLinkTo } from \"@react-navigation/native\";\n\nexport function S_ExperimentalGrid(props: IPSCR) {\n  const { C } = useAppContext();\n  const { data } = useSheets(0, \"Exp\");\n  // console.log(\"data: \", data);\n  const { WIDTH } = useDimension(\"window\");\n\n  const ogData = React.useMemo(() => data, [data]);\n  const [_data, setData] = React.useState([]);\n\n  const refGrid = React.useRef<Animatable.View>();\n  const [selectedIndex, setSelectedIndex] = React.useState(new IndexPath(0));\n  const linkTo = useLinkTo();\n  return (\n    <View style={{ marginVertical: spacing(4) }}>\n      {/* <Text>{JSON.stringify(keys)}</Text> */}\n      <Txt.$Title>{use18(\"Experiments\")}</Txt.$Title>\n      <SS.CtnrFilter\n        horizontal={true}\n        selectedIndex={selectedIndex}\n        onSelect={(index) => setSelectedIndex(index)}\n      >\n        <MenuItem\n          onPress={() => {\n            setData(ogData);\n            setSelectedIndex(new IndexPath(0));\n          }}\n          title={use18(\"All\")}\n        />\n        {[...new Set(R.pluck(\"cat\", ogData))].map((cat, index) => (\n          <MenuItem\n            key={cat + index}\n            onPress={() => {\n              setData([...ogData.filter((item) => item.cat === cat)]);\n              setSelectedIndex(new IndexPath(index + 1));\n              refGrid.current.fadeInUp(800);\n            }}\n            title={cat}\n          />\n        ))}\n      </SS.CtnrFilter>\n      {!!data ? (\n        <Animatable.View ref={refGrid} animation=\"fadeInUp\">\n          <FlatGrid\n            itemDimension={WIDTH <= 1000 ? WIDTH * 0.9 : WIDTH * 0.3}\n            data={R.isEmpty(_data) ? data : _data}\n            keyExtractor={(item, index) => `${item._id} - ${index}`}\n            style={[SSS().GRID_CTNR]}\n            // staticDimension={300}\n            // fixed\n            spacing={10}\n            renderItem={({ item, index }) => (\n              <Animatable.View animation=\"fadeIn\" delay={100 * index}>\n                <GridCtnr\n                  {...props}\n                  onPress={() => {\n                    linkTo(\"/project/\" + item.title);\n                    Navigation.navigate(\"Project\", {\n                      project: item,\n                    });\n                  }}\n                  item={item}\n                />\n              </Animatable.View>\n            )}\n          />\n        </Animatable.View>\n      ) : (\n        <View\n          style={{ ...SSS().GRID_CTNR, alignSelf: \"flex-start\", width: 500 }}\n        >\n          <GridCtnr {...props} type=\"placeholder\" />\n        </View>\n      )}\n    </View>\n  );\n}\n\ninterface dGridCtnr extends TouchableWebProps, IPSCR {\n  item?: { thumbnail: string; title: string; color: string; label: string };\n  type?: \"placeholder\";\n}\nconst GridCtnr = (props: dGridCtnr) => {\n  const { onPress, item, type } = props;\n  const { C } = useAppContext();\n  const [_borderWidth, setBorderWidth] = React.useState(0);\n  const { WIDTH } = useDimension(\"window\");\n  return type != \"placeholder\" ? (\n    <TouchableWeb\n      onMouseEnter={(e) => {\n        setBorderWidth(6);\n      }}\n      onMouseLeave={(e) => {\n        setBorderWidth(0);\n      }}\n      onPress={onPress}\n    >\n      <ImageBackground\n        source={{ uri: item?.thumbnail }}\n        style={[\n          SSS().ITEM_CTNR,\n          {\n            backgroundColor: item?.color,\n            overflow: \"hidden\",\n            borderWidth: _borderWidth,\n            borderColor: item?.color,\n          },\n        ]}\n      >\n        <Txt.S1 style={SSS().itemName}>{item?.title}</Txt.S1>\n        <Txt.P2 style={SSS().itemCode}>{item?.label}</Txt.P2>\n      </ImageBackground>\n    </TouchableWeb>\n  ) : (\n    <Placeholder Animation={ShineOverlay}>\n      <PlaceholderMedia\n        style={[\n          SSS().ITEM_CTNR,\n          { width: WIDTH <= 1000 ? WIDTH * 0.9 : WIDTH * 0.3 },\n        ]}\n      ></PlaceholderMedia>\n    </Placeholder>\n  );\n};\n\nconst SS = {\n  CtnrFilter: sstyled(Menu)((p) => ({\n    flexDirection: \"row\",\n    marginVertical: spacing(5),\n    borderRadius: 5,\n    borderWidth: 0,\n    borderBottomWidth: 1,\n    alignSelf: \"flex-start\",\n    overflow: \"hidden\",\n    borderColor: p.C.dim,\n    marginLeft: spacing(5),\n  })),\n};\n\nconst SSS = (C?: dColors) => {\n  return {\n    GRID_CTNR: {\n      marginTop: 10,\n      marginHorizontal: spacing(5),\n      // flex: 1,\n    } as ViewStyle,\n    ITEM_CTNR: {\n      justifyContent: \"flex-end\",\n      borderRadius: 5,\n      padding: 10,\n      height: 300,\n    } as ViewStyle,\n    itemName: {\n      color: \"#fff\",\n      // fontSize: scale(18),\n      // fontWeight: \"600\",\n    } as TextStyle,\n    itemCode: {\n      // fontWeight: \"600\",\n      // fontSize: scale(12),\n      color: \"#fff\",\n    } as TextStyle,\n  };\n};\n","import { img } from \"assets\";\nimport { sstyled, Toasty, TouchableWeb, Txt } from \"components\";\nimport { useAppContext } from \"engines\";\nimport { LinkURL } from \"engines/functions/web-functions\";\nimport React from \"react\";\nimport { Animated, ImageStyle, View, ViewStyle } from \"react-native\";\nimport * as Animatable from \"react-native-animatable\";\nimport FA5 from \"react-native-vector-icons/FontAwesome5\";\nimport { Navigation } from \"screens\";\nimport {\n  IPSCR,\n  LANG,\n  moderateScale,\n  scale,\n  spacing,\n  THEME,\n  use18,\n  useDimension,\n} from \"utils\";\n\ninterface d$_Intro extends IPSCR {\n  scrollToWork(): void;\n  scrollToExp(): void;\n}\nexport function S_Intro(props: d$_Intro) {\n  const { scrollToWork, scrollToExp } = props;\n  const { C, dark, setTheme } = useAppContext();\n  const { HEIGHT } = useDimension(\"window\");\n  const [_color, setColor] = React.useState(C.text);\n  const [_weight, setFontWeight] = React.useState<\"500\" | \"bold\">(\"500\");\n\n  return (\n    <View\n      style={{\n        height: HEIGHT,\n        justifyContent: \"center\",\n      }}\n    >\n      <NiAvatar />\n      <SS.CtnrIntro animation=\"fadeIn\" delay={1000}>\n        <TouchableWeb\n          onMouseEnter={() => {\n            setColor(C.dim);\n            setFontWeight(\"bold\");\n          }}\n          onMouseLeave={() => {\n            setColor(C.text);\n            setFontWeight(\"500\");\n          }}\n        >\n          <Txt.H6\n            onPress={() => {\n              setTheme(dark ? THEME.LIGHT : THEME.DARK);\n            }}\n          >\n            {use18(\"intro-1\")} {\"👋\"}{\" \"}\n          </Txt.H6>\n\n          <Txt.S1\n            style={{ color: _color, fontWeight: \"500\" }}\n            adjustsFontSizeToFit={true}\n          >\n            {use18(\"intro-2\")}{\" \"}\n            <SS.TxtLink\n              style={{\n                textDecorationLine: \"underline\",\n                fontWeight: _weight,\n              }}\n              onPress={scrollToWork}\n            >\n              {use18(\"intro-3\")}\n            </SS.TxtLink>{\" \"}\n            {use18(\"intro-4\")}{\" \"}\n            <SS.TxtLink\n              style={{\n                textDecorationLine: \"underline\",\n                fontWeight: _weight,\n              }}\n              onPress={scrollToExp}\n            >\n              {use18(\"intro-5\")}\n            </SS.TxtLink>{\" \"}\n            {\"\\n\"}\n            {use18(\"intro-6\")}{\" \"}\n            <SS.TxtLink\n              style={{\n                textDecorationLine: \"underline\",\n                fontWeight: _weight,\n              }}\n              onPress={() =>\n                LinkURL(\"https://www.instagram.com/nguyenkhooi/?hl=en\", true)\n              }\n            >\n              {use18(\"intro-7\")}\n            </SS.TxtLink>{\" \"}\n            {use18(\"intro-8\")}{\" \"}\n            <SS.TxtLink\n              style={{\n                textDecorationLine: \"underline\",\n                fontWeight: _weight,\n              }}\n              onPress={() => Navigation.navigate(\"About\")}\n            >\n              {use18(\"intro-9\")}\n            </SS.TxtLink>\n          </Txt.S1>\n        </TouchableWeb>\n      </SS.CtnrIntro>\n    </View>\n  );\n}\n\nconst NiAvatar = () => {\n  const { WIDTH } = useDimension();\n  const { dark } = useAppContext();\n  //   const refShades = React.useRef<Animatable.View>();\n  //   React.useEffect(\n  //     function movingShades() {\n  //       dark ? refShades.current.bounce(500) : refShades.current.fadeOut(500);\n  //     },\n  //     [dark]\n  //   );\n\n  const [] = React.useState<\"Let's hi-five!\" | \"Noice\">(\"Let's hi-five!\");\n  return (\n    <SS.Ctnr>\n      <SS.Avatar animation={\"zoomIn\"} source={dark ? img.khoi : img.khoi3d} />\n      <$_FlagRing />\n    </SS.Ctnr>\n  );\n};\n\n/**\n * Can't use IconOooh here as createAnimatedComponent(_) requires class <_>\n */\nconst NiStar = Animated.createAnimatedComponent(FA5);\n\nconst $_FlagRing = () => {\n  const { C, setI18N } = useAppContext();\n  const animated = React.useRef(new Animated.Value(1)).current;\n  const rotate = animated.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\"0deg\", \"-180deg\"],\n  });\n\n  const starColor = animated.interpolate({\n    inputRange: [0, 1],\n    outputRange: [C.hazardYellow, C.text01],\n  });\n\n  const starSize = animated.interpolate({\n    inputRange: [0, 1],\n    outputRange: [moderateScale(10), moderateScale(10) * 0.9],\n  });\n  const shieldSize = animated.interpolate({\n    inputRange: [0, 1],\n    outputRange: [1, 1 * 0.8],\n  });\n\n  const flagColor = animated.interpolate({\n    inputRange: [0, 1],\n    outputRange: [C.errorRed, C.infoBlue],\n  });\n\n  const rotateOpposit = animated.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\"0deg\", \"180deg\"],\n  });\n\n  function rotatee() {\n    animated._value == 1 &&\n      (Toasty.show(\"Chuyển sang tiếng Việt...\", {\n        type: \"loading\",\n        duration: 1000,\n      }),\n      Animated.spring(animated, {\n        toValue: 0,\n        tension: 2,\n        friction: 10,\n        useNativeDriver: true,\n      }).start(() => {\n        setI18N(LANG.VI);\n      }));\n\n    animated._value == 0 &&\n      (Toasty.show(\"Change to English...\", { type: \"loading\", duration: 1000 }),\n      Animated.spring(animated, {\n        toValue: 1,\n        tension: 2,\n        friction: 10,\n        useNativeDriver: true,\n      }).start(() => {\n        setI18N(LANG.EN);\n      }));\n  }\n\n  const transform = [{ rotate: rotate }];\n  const transform1 = [{ rotate: rotateOpposit, scale: starSize }];\n  return (\n    <Animated.View\n      style={[SS.S.CTNR_FLAG, { transform: [{ rotate: \"-90deg\" }] }]}\n    >\n      <Animated.View\n        style={[\n          {\n            transform: [{ rotate: \"90deg\" }],\n            backgroundColor: C.errorRed,\n            ...SS.S.FLAG_BCKGRD,\n          },\n        ]}\n      >\n        <Animated.View\n          style={[\n            {\n              transform: [{ scale: shieldSize }],\n              backgroundColor: flagColor,\n              ...SS.S.FLAG_BCKGRD,\n            },\n          ]}\n        >\n          <NiStar\n            name=\"star\"\n            color={starColor}\n            size={moderateScale(10)}\n            onPress={() => rotatee()}\n            solid\n          />\n        </Animated.View>\n      </Animated.View>\n    </Animated.View>\n  );\n};\n\nconst SS = {\n  Ctnr: sstyled(View)(() => ({\n    width: moderateScale(100),\n    height: moderateScale(100),\n    paddingHorizontal: spacing(6),\n  })),\n  CtnrIntro: sstyled(Animatable.View)((p) => ({\n    paddingHorizontal: spacing(6),\n    paddingRight: p.WIDTH < 1000 ? spacing(6) : spacing(9),\n  })),\n  Avatar: sstyled(Animatable.Image)(() => ({\n    width: scale(95),\n    height: scale(95),\n    borderRadius: 200,\n    transform: [{ rotate: \"-10deg\" }],\n  })),\n  TxtLink: sstyled(Txt.S1)({\n    // fontSize: 29,\n    fontWeight: \"500\",\n    // fontStyle: \"italic\",\n  }),\n\n  S: {\n    CTNR_FLAG: {\n      // borderWidth: 1,\n      marginLeft: spacing(6),\n      position: \"absolute\",\n      padding: moderateScale(5),\n      top: moderateScale(0),\n      left: moderateScale(0),\n      width: moderateScale(100),\n      height: moderateScale(100), // this is the diameter of circle\n    } as ViewStyle,\n    FLAG_BCKGRD: {\n      width: moderateScale(20),\n      height: moderateScale(20),\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      borderRadius: 100,\n    } as ViewStyle,\n    CTNR_SHADES: {\n      top: moderateScale(22.5),\n      left: moderateScale(65.3), //118\n      width: moderateScale(40),\n      height: moderateScale(40),\n      transform: [{ rotate: \"-10deg\" }],\n    } as ImageStyle,\n  },\n};\n","import {\n  ButtonGroup,\n  IndexPath,\n  Menu,\n  MenuItem,\n  Text,\n} from \"@ui-kitten/components\";\nimport {\n  Txt,\n  TouchableWeb,\n  TouchableWebProps,\n  Buttoon,\n  sstyled,\n} from \"components\";\nimport { useSheets } from \"engines/hooks\";\nimport { useAppContext } from \"engines/providers/app-provider\";\nimport * as R from \"ramda\";\nimport React from \"react\";\nimport {\n  ActivityIndicator,\n  ImageBackground,\n  TextStyle,\n  View,\n  ViewStyle,\n} from \"react-native\";\nimport { FlatGrid } from \"react-native-super-grid\";\nimport {\n  Fade,\n  Placeholder,\n  PlaceholderLine,\n  PlaceholderMedia,\n  ShineOverlay,\n} from \"rn-placeholder\";\nimport { Navigation } from \"screens/_navigation\";\nimport { dColors, IPSCR, scale, spacing, use18, useDimension } from \"utils\";\nimport * as Animatable from \"react-native-animatable\";\nimport { useLinkTo } from \"@react-navigation/native\";\n\nexport function S_PortfolioGrid(props: IPSCR) {\n  const { C } = useAppContext();\n  const { data } = useSheets(0, \"Work\");\n  // console.log(\"data: \", data);\n  const { WIDTH } = useDimension(\"window\");\n  const ogData = React.useMemo(() => data, [data]);\n  const [_data, setData] = React.useState([]);\n\n  const refGrid = React.useRef<Animatable.View>();\n  const [selectedIndex, setSelectedIndex] = React.useState(new IndexPath(0));\n  const linkTo = useLinkTo();\n  return (\n    <View style={{ marginVertical: spacing(4) }}>\n      <Txt.$Title>{use18(\"Work\")}</Txt.$Title>\n      <SS.CtnrFilter\n        horizontal={true}\n        selectedIndex={selectedIndex}\n        onSelect={(index) => setSelectedIndex(index)}\n      >\n        <MenuItem\n          onPress={() => {\n            setData(ogData);\n            setSelectedIndex(new IndexPath(0));\n          }}\n          title={use18(\"All\")}\n        />\n        {[...new Set(R.pluck(\"cat\", ogData))].map((cat, index) => (\n          <MenuItem\n            key={cat + index}\n            onPress={() => {\n              setData([...ogData.filter((item) => item.cat === cat)]);\n              setSelectedIndex(new IndexPath(index + 1));\n              refGrid.current.fadeInUp(800);\n            }}\n            title={cat}\n          />\n        ))}\n      </SS.CtnrFilter>\n      {!!_data ? (\n        <Animatable.View ref={refGrid} animation=\"fadeInUp\">\n          <FlatGrid\n            itemDimension={WIDTH <= 1000 ? WIDTH * 0.9 : WIDTH * 0.3}\n            data={R.isEmpty(_data) ? data : _data}\n            style={SSS().GRID_CTNR}\n            // staticDimension={300}\n            // fixed\n            spacing={10}\n            renderItem={({ item, index }) => (\n              <Animatable.View animation=\"fadeIn\" delay={100 * index}>\n                <CtnrGrid\n                  {...props}\n                  onPress={() => {\n                    linkTo(\"/project/\" + item.title);\n                    Navigation.navigate(\"Project\", {\n                      project: item,\n                    });\n                  }}\n                  item={item}\n                />\n              </Animatable.View>\n            )}\n          />\n        </Animatable.View>\n      ) : (\n        <View style={{ ...SSS().GRID_CTNR }}>\n          <CtnrGrid {...props} type=\"placeholder\" />\n        </View>\n      )}\n    </View>\n  );\n}\n\ninterface dGridCtnr extends TouchableWebProps, IPSCR {\n  item?: { thumbnail: string; title: string; color: string; label: string };\n  type?: \"placeholder\";\n}\nconst CtnrGrid = (props: dGridCtnr) => {\n  const { type, onPress, item } = props;\n  const { C } = useAppContext();\n  const [_borderWidth, setBorderWidth] = React.useState(0);\n  const { WIDTH: width } = useDimension(\"window\");\n  const linkTo = useLinkTo();\n  return type != \"placeholder\" ? (\n    <TouchableWeb\n      onMouseEnter={(e) => {\n        setBorderWidth(6);\n      }}\n      onMouseLeave={(e) => {\n        setBorderWidth(0);\n      }}\n      onPress={onPress}\n    >\n      <ImageBackground\n        source={{ uri: item?.thumbnail }}\n        style={[\n          SSS().ITEM_CTNR,\n          {\n            backgroundColor: item?.color,\n            overflow: \"hidden\",\n            borderWidth: _borderWidth,\n            borderColor: item?.color,\n          },\n        ]}\n      >\n        <Txt.S1 style={SSS().itemName}>{item?.title}</Txt.S1>\n        <Txt.P2 style={SSS().itemCode}>{item?.label}</Txt.P2>\n      </ImageBackground>\n    </TouchableWeb>\n  ) : (\n    <Placeholder Animation={ShineOverlay}>\n      <PlaceholderMedia\n        style={[\n          SSS().ITEM_CTNR,\n          { width: width <= 1000 ? width * 0.9 : width * 0.3 },\n        ]}\n      ></PlaceholderMedia>\n    </Placeholder>\n  );\n};\n\nconst SS = {\n  CtnrFilter: sstyled(Menu)((p) => ({\n    flexDirection: \"row\",\n    marginVertical: spacing(5),\n    borderRadius: 5,\n    borderWidth: 0,\n    borderBottomWidth: 1,\n    alignSelf: \"flex-start\",\n    overflow: \"hidden\",\n    borderColor: p.C.dim,\n    marginLeft: spacing(5),\n  })),\n};\n\nconst SSS = (C?: dColors) => {\n  return {\n    GRID_CTNR: {\n      marginTop: 10,\n      marginHorizontal: spacing(5),\n      // flex: 1,\n    } as ViewStyle,\n    ITEM_CTNR: {\n      justifyContent: \"flex-end\",\n      borderRadius: 5,\n      padding: 10,\n      height: 300,\n    } as ViewStyle,\n    itemName: {\n      color: \"#fff\",\n      // fontSize: scale(18),\n      // fontWeight: \"600\",\n    } as TextStyle,\n    itemCode: {\n      // fontWeight: \"600\",\n      // fontSize: scale(12),\n      color: \"#fff\",\n    } as TextStyle,\n  };\n};\n","import { useAppContext } from \"engines\";\nimport * as React from \"react\";\nimport { LayoutChangeEvent, ScrollView, View } from \"react-native\";\nimport { IPSCR, useDimension } from \"utils\";\nimport { S_Contact } from \"./s-contact\";\nimport { S_ExperimentalGrid } from \"./s-experimental-grid\";\nimport { S_Intro } from \"./s-intro\";\nimport { S_PortfolioGrid } from \"./s-portfolio-grid\";\n\nexport default (props: IPSCR) => {\n  const { C } = useAppContext();\n  const { HEIGHT } = useDimension();\n\n  const refList = React.useRef<ScrollView>(null);\n\n  const [_workLayout, setWorkLayout] = React.useState<LayoutChangeEvent>();\n  // console.log(\"🖐️ work layout: \", _workLayout?.nativeEvent?.layout?.height);\n  const [_ExpLayout, setExpLayout] = React.useState<LayoutChangeEvent>();\n  // console.log(\"🖐️ Exp layout: \", _ExpLayout?.nativeEvent?.layout?.height);\n\n  const scrollToSection = (section: \"work\" | \"exp\") => {\n    section == \"exp\"\n      ? refList.current.scrollTo(HEIGHT + _workLayout.nativeEvent.layout.height)\n      : refList.current.scrollTo(HEIGHT);\n  };\n\n  return (\n    <ScrollView ref={refList} style={{ backgroundColor: C.background }}>\n      <$_Intro\n        {...props}\n        scrollToWork={() => {\n          scrollToSection(\"work\");\n        }}\n        scrollToExp={() => {\n          scrollToSection(\"exp\");\n        }}\n      />\n      <View onLayout={setWorkLayout}>\n        <$_PortfolioGrid {...props} />\n      </View>\n      <View onLayout={setExpLayout}>\n        <$_ExperimentalGrid {...props} />\n      </View>\n      <View>\n        <$_Contact {...props} />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst $_PortfolioGrid = S_PortfolioGrid;\nconst $_ExperimentalGrid = S_ExperimentalGrid;\nconst $_Intro = S_Intro;\nconst $_Contact = S_Contact;\n\n// import React from \"react\";\n// import {\n//   Animated,\n//   Dimensions,\n//   NativeSyntheticEvent,\n//   PanResponder,\n//   StyleSheet,\n//   View\n// } from \"react-native\";\n\n// export default function Drag() {\n//   const dropZoneValues = React.useRef(null);\n//   const pan = React.useRef(new Animated.ValueXY());\n//   const [bgColor, setBgColor] = React.useState(\"#2c3e50\");\n\n//   const isDropZone = React.useCallback(\n//     (evt) => {\n//       const dz = dropZoneValues.current;\n//       return evt.pageY > dz.y && evt.pageY < dz.y + dz.height;\n//     },\n//     []\n//   );\n\n//   const onMove = React.useCallback(\n//     (event: NativeSyntheticEvent<unknown>) => {\n//       // console.log(\n//       //   \"locXY: \",\n//       //   event.nativeEvent.locationX + \" - \" + event.nativeEvent.locationY\n//       // );\n//       // console.log(\n//       //   \"pageXY: \",\n//       //   event.nativeEvent.pageX + \" - \" + event.nativeEvent.pageY\n//       // );\n//       if (isDropZone(event.nativeEvent)) setBgColor(\"red\");\n//       else setBgColor(\"#2c3e50\");\n//     },\n//     [isDropZone]\n//   );\n\n//   const setDropZoneValues = React.useCallback((event) => {\n//     dropZoneValues.current = event.nativeEvent.layout;\n//   }, []);\n\n//   const panResponder = React.useMemo(\n//     () =>\n//       PanResponder.create({\n//         onStartShouldSetPanResponder: () => true,\n//         onMoveShouldSetPanResponderCapture: () => true,\n\n//         onPanResponderGrant: (evt, gestureState) => {\n//           pan.current.setOffset({\n//             x: pan.current.x._value,\n//             y: pan.current.y._value,\n//           });\n//           pan.current.setValue({ x: 0, y: 0 });\n//         },\n\n//         onPanResponderMove: Animated.event(\n//           [\n//             null,\n//             {\n//               dx: pan.current.x,\n//               dy: pan.current.y,\n//             },\n//           ],\n//           {\n//             listener: onMove,\n//             useNativeDriver: true,\n//           }\n//         ),\n//         onPanResponderRelease: (e, gesture) => {\n//           if (!isDropZone(gesture)) {\n//             Animated.spring(pan.current, {\n//               toValue: {\n//                 x: 0 - pan.current.x._offset,\n//                 y: 0 - pan.current.y._offset,\n//               },\n//               useNativeDriver: true,\n//             }).start(() => {\n//               // pan.current.setValue({ x: 0, y: 0 });\n//               pan.current.setOffset({ x: 0, y: 0 });\n//             });\n//           } else {\n//             pan.current.flattenOffset();\n//           }\n//         },\n//       }),\n//     []\n//   );\n\n//   return (\n//     <View style={styles.mainContainer}>\n//       <View\n//         onLayout={setDropZoneValues}\n//         style={[styles.dropZone, { backgroundColor: bgColor }]}\n//       ></View>\n//       <View style={styles.draggableContainer}>\n//         <Animated.View\n//           {...panResponder.panHandlers}\n//           style={[pan.current.getLayout(), styles.circle]}\n//         ></Animated.View>\n//       </View>\n//     </View>\n//   );\n// }\n\n// let CIRCLE_RADIUS = 36;\n// let Window = Dimensions.get(\"window\");\n// let styles = StyleSheet.create({\n//   mainContainer: {\n//     flex: 1,\n//   },\n//   dropZone: {\n//     height: 100,\n//     backgroundColor: \"#2c3e50\",\n//   },\n//   text: {\n//     marginTop: 25,\n//     marginLeft: 5,\n//     marginRight: 5,\n//     textAlign: \"center\",\n//     color: \"#fff\",\n//   },\n//   draggableContainer: {\n//     position: \"absolute\",\n//     top: Window.height / 2 - CIRCLE_RADIUS,\n//     left: Window.width / 2 - CIRCLE_RADIUS,\n//   },\n//   circle: {\n//     backgroundColor: \"#1abc9c\",\n//     width: CIRCLE_RADIUS * 2,\n//     height: CIRCLE_RADIUS * 2,\n//     borderRadius: CIRCLE_RADIUS,\n//   },\n// });\n","import { Linking as RNLinking, Platform } from \"react-native\";\n\n/**\n * Fn to open url on ios, android and web,\n * with option to `open in new tab` for web\n * ---\n * @version 0.10.30\n * @author nguyenkhooi\n */\nexport const LinkURL = (url: string, newTab?: boolean) => {\n  if (Platform.OS == \"web\" && !!newTab) {\n    window.open(url, \"_blank\");\n  } else {\n    RNLinking.openURL(url); // normal Linking react-native\n  }\n};\n","import { sstyled, Txt } from \"components\";\nimport React from \"react\";\nimport { ImageStyle, ScrollView, TouchableOpacity, View } from \"react-native\";\nimport Image from \"react-native-scalable-image\";\nimport { spacing, useDimension } from \"utils\";\nimport * as Animatable from \"react-native-animatable\";\n\nexport function C_ContentCard(props: {\n  text: string;\n  imageIndex: number;\n  onImagePress?(): void;\n}) {\n  const { text, imageIndex, onImagePress } = props;\n  const { WIDTH } = useDimension();\n\n  // const imageWidth: number = height * 0.4 - 20;\n  const imageWidth: number = WIDTH < 1000 ? WIDTH * 0.8 : WIDTH * 0.3;\n\n  const imageProp = { width: imageWidth };\n  // const isContentImg = startsWith(\"https://\", text);\n  const isContentImg = text.includes(\"https\");\n  switch (isContentImg) {\n    case true:\n      return (\n        <TouchableOpacity\n          onPress={onImagePress}\n          style={{ transform: [{ scale: 0.7 }] }}\n          activeOpacity={0.9}\n        >\n          {imageIndex == 0 ? (\n            <Image\n              source={{ uri: text }}\n              {...imageProp}\n              key={imageIndex}\n              style={SS.S.IMG_CTNR}\n            />\n          ) : (\n            <SS.CtnrImg animation={\"zoomIn\"} delay={100 * imageIndex}>\n              <Image source={{ uri: text }} {...imageProp} key={imageIndex} />\n            </SS.CtnrImg>\n          )}\n        </TouchableOpacity>\n      );\n      break;\n    case false:\n      return (\n        <SS.CtnrLabel animation={\"fadeInUp\"} delay={100 * imageIndex}>\n          <SS.Label\n            chieuRong={imageWidth}\n            adjustsFontSizeToFit\n            key={imageIndex}\n          >\n            {text}\n          </SS.Label>\n        </SS.CtnrLabel>\n      );\n      break;\n  }\n}\n\nexport const SS = {\n  CtnrImg: sstyled(Animatable.View)((p) => ({\n    // margin: 10,\n    borderRadius: 10,\n    overflow: \"hidden\",\n    backgroundColor: p.C.surface,\n  })),\n  CtnrLabel: sstyled(Animatable.View)(() => ({\n    // margin: 10,\n    borderRadius: 10,\n    overflow: \"hidden\",\n    backgroundColor: \"transparent\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  })),\n\n  Label: sstyled(Txt.P2)((p) => ({ width: p.chieuRong, textAlign: \"center\" })),\n  S: {\n    IMG_CTNR: {\n      // margin: 10,\n      borderRadius: 10,\n      overflow: \"hidden\",\n    } as ImageStyle,\n  },\n};\n","//@ts-check\n// import khoi_1 from \"./khoi-1.jpg\";\n// @ts-ignore\nexport const img = {\n  x: require(\"./x-icon.png\"),\n  khoi: require(\"./khoi.jpg\"),\n  khoi3d: require(\"./khoi-3d.jpg\"),\n  khoi3dRound: require(\"./khoi-3d-round.jpg\"),\n  shades: require(\"./shades.png\"),\n  wavingHand: require(\"./waving_hand_sign_512.gif\"),\n  sparkles: require(\"./sparkles_512.gif\"),\n  nguyenkhoi: require(\"./nguyenkhoi.gif\"),\n};\n","/** \n * \n */\n\nexport { default as IconOooh } from \"./oooh-icon\";\nexport * from \"./oooh-icon.props\";\n\n","// import Octicons from \"react-native-vector-icons/Octicons\"\nimport * as R from \"ramda\";\nimport React from \"react\";\nimport { Platform, View, ViewStyle } from \"react-native\";\nimport AntDesign from \"react-native-vector-icons/AntDesign\";\nimport EntypoIcon from \"react-native-vector-icons/Entypo\";\nimport FeatherIcon from \"react-native-vector-icons/Feather\";\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\n//* rn-vector-icons imports\nimport FontAwesome5 from \"react-native-vector-icons/FontAwesome5\";\nimport Fontisto from \"react-native-vector-icons/Fontisto\";\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\nimport MaterialCommunityIcon from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport MaterialIcon from \"react-native-vector-icons/MaterialIcons\";\nimport SimpleLineIcon from \"react-native-vector-icons/SimpleLineIcons\";\nimport { scale } from \"utils\";\nimport { dIconOooh, dIconOptions, ICON_PKG } from \"./oooh-icon.props\";\n\n// const OoohMoon = createIconSetFromIcoMoon(\n//   icoMoonConfig,\n//   \"IconOooh\",\n//   \"iconcarp.ttf\"\n// );\n\n/**\n * Icon Options to use with IconOooh<>\n */\nexport const iconOptions = {\n  admin: { type: \"fa5\", icon: \"user-tie\" } as dIconOptions,\n  arrow_left: {\n    type: \"fa5\",\n    icon: Platform.OS == \"android\" ? \"arrow-left\" : \"chevron-left\",\n  } as dIconOptions,\n  arrow_right: {\n    type: \"fa5\",\n    icon: Platform.OS == \"android\" ? \"arrow-right\" : \"chevron-right\",\n  } as dIconOptions,\n  arrow_down: {\n    type: \"fa5\",\n    icon: Platform.OS == \"android\" ? \"arrow-down\" : \"chevron-down\",\n  } as dIconOptions,\n  award: { type: \"fa5\", icon: \"award\" } as dIconOptions,\n  bars: { type: \"fa5\", icon: \"bars\" } as dIconOptions,\n  ban: { type: \"fa5\", icon: \"ban\" } as dIconOptions,\n  bell: { type: \"fa5\", icon: \"bell\" } as dIconOptions,\n  flag: { type: \"fa5\", icon: \"flag\" } as dIconOptions,\n  calendar: { type: \"fa5\", icon: \"calendar\" } as dIconOptions,\n  \"calendar-alt\": { type: \"fa5\", icon: \"calendar-alt\" } as dIconOptions,\n  chat_bubble: {\n    type: \"ion\",\n    icon: \"chatbubble\",\n  } as dIconOptions,\n  chevron_right: {\n    type: \"fa5\",\n    icon: \"chevron-right\",\n  } as dIconOptions,\n  check: {\n    type: \"fa5\",\n    icon: \"check\",\n  } as dIconOptions,\n  compass: { type: \"fa5\", icon: \"compass\" } as dIconOptions,\n  content_share: { type: \"ion\", icon: \"share-social-sharp\" } as dIconOptions,\n  cog: { type: \"fa5\", icon: \"cog\" } as dIconOptions,\n  contacts: { type: \"fa5\", icon: \"address-book\" } as dIconOptions,\n  dot: { type: \"fa5\", icon: \"circle\" } as dIconOptions,\n  dots_horizontal: { type: \"fa5\", icon: \"ellipsis-h\" } as dIconOptions,\n  dots_vertical: { type: \"fa5\", icon: \"ellipsis-v\" } as dIconOptions,\n  email: { type: \"material\", icon: \"mail\" } as dIconOptions,\n  eye: { type: \"fa5\", icon: \"eye\" } as dIconOptions,\n  eye_slash: { type: \"fa5\", icon: \"eye-slash\" } as dIconOptions,\n  exclamation_circle: {\n    type: \"fa5\",\n    icon: \"exclamation-circle\",\n  } as dIconOptions,\n  folder: { type: \"fa5\", icon: \"folder\" } as dIconOptions,\n  hand_peace: { type: \"fa5\", icon: \"hand-peace\" } as dIconOptions,\n  heart: { type: \"fa5\", icon: \"heart\" } as dIconOptions,\n  home: { type: \"fa5\", icon: \"home\" } as dIconOptions,\n  image: { type: \"fa5\", icon: \"image\" } as dIconOptions,\n  install: { type: \"entypo\", icon: \"install\" } as dIconOptions,\n  linkedin: { type: \"fa5\", icon: \"linkedin-in\" } as dIconOptions,\n  list: { type: \"fa5\", icon: \"th-list\" } as dIconOptions,\n  lock: { type: \"fa5\", icon: \"lock\" } as dIconOptions,\n  medal: { type: \"fa5\", icon: \"medal\" } as dIconOptions,\n  minus: { type: \"fa5\", icon: \"minus\" } as dIconOptions,\n  notification: { type: \"entypo\", icon: \"notification\" } as dIconOptions,\n  pen: { type: \"fa5\", icon: \"pen\" } as dIconOptions,\n  plus: { type: \"fa5\", icon: \"plus\" } as dIconOptions,\n  placeholder: { type: \"fa5\", icon: \"kickstarter-k\" } as dIconOptions,\n  profile: { type: \"ion\", icon: \"ios-person-circle-sharp\" } as dIconOptions,\n  rocket: { type: \"fa5\", icon: \"rocket\" } as dIconOptions,\n  refresh: { type: \"ion\", icon: \"refresh\" } as dIconOptions,\n  share: { type: \"fa5\", icon: \"share-alt\" } as dIconOptions,\n  sms: { type: \"fa5\", icon: \"sms\" } as dIconOptions,\n  tools: { type: \"fa5\", icon: \"tools\" } as dIconOptions,\n  send: { type: \"fa\", icon: \"send\" } as dIconOptions,\n  star: { type: \"fa5\", icon: \"star\" } as dIconOptions,\n  trash: { type: \"fa5\", icon: \"trash\" } as dIconOptions,\n  tv: { type: \"fa5\", icon: \"tv\" } as dIconOptions,\n  videocam: { type: \"ion\", icon: \"videocam\" } as dIconOptions,\n  people: { type: \"ion\", icon: \"people\" } as dIconOptions,\n  unlock: { type: \"fa5\", icon: \"unlock\" } as dIconOptions,\n  x: { type: \"fa5\", icon: \"times\" } as dIconOptions,\n  /**\n   * Card Brand Icon. Have to fit Stripe's brand name\n   * @see https://stripe.com/docs/api/cards/object#card_object-brand\n   */\n  \"american express\": {\n    type: \"fontisto\",\n    icon: \"american-express\",\n    scale: 0.8,\n  } as dIconOptions,\n  \"diners club\": { type: \"fa5\", icon: \"cc-diners-club\" } as dIconOptions,\n  discover: { type: \"fa5\", icon: \"cc-discover\" } as dIconOptions,\n  jcb: { type: \"fa5\", icon: \"cc-jcb\" } as dIconOptions,\n  mastercard: { type: \"fa5\", icon: \"cc-mastercard\" } as dIconOptions,\n  visa: { type: \"fa5\", icon: \"cc-visa\" } as dIconOptions,\n};\n\n/**\n * Main and the only Icon component of the whole codebase\n *\n * @version 1.12.3\n * -  *Add disabled icon's color*\n * @example\n *  <IconOooh preset={\"safe\"} name={\"arrow_left\"} size={30} color={\"dodgerblue\"} />\n */\nexport default function IconOooh(props: dIconOooh) {\n  const {\n    preset = \"default\",\n    name = \"placeholder\",\n    size = 20,\n    color = \"dodgerblue\",\n    solid = true,\n    disabled,\n    containerStyle = {},\n    onPress,\n  } = props;\n  const _containerStyle: ViewStyle = R.mergeAll(\n    R.flatten([presets(size)[preset].containerStyle, containerStyle])\n  );\n  const _iconStyle = R.mergeAll(\n    R.flatten([\n      presets(size)[preset].icon || presets(size).default.icon,\n      {\n        size,\n        color: disabled ? \"#69696940\" : color,\n        name,\n      },\n    ])\n  );\n  if (iconOptions[name] == undefined) {\n    console.log(\"Icon err: icon \" + name + \" not existed in iconOptions!\");\n    return (\n      <View\n        style={{ ..._containerStyle, borderWidth: 1, borderColor: \"tomato\" }}\n      />\n    );\n  } else {\n    const { type, scale = 1, icon } = iconOptions[name];\n    const { size, color } = _iconStyle;\n    const BrandedIcon = getType(type);\n    return (\n      <View\n        activeOpacity={!!onPress ? 0.87 : 1}\n        disabled={true}\n        style={_containerStyle}\n        onPress={onPress}\n      >\n        <BrandedIcon\n          name={icon}\n          solid={solid}\n          size={size * scale}\n          color={color}\n          onPress={onPress}\n        />\n      </View>\n    );\n  }\n}\n\n/** Get Icon type from `react-native-vector-icons */\nconst getType = (type: ICON_PKG) => {\n  switch (type) {\n    case \"fa\":\n      return FontAwesome;\n    case \"fa5\":\n      return FontAwesome5;\n    case \"feather\":\n      return FeatherIcon;\n    case \"material\":\n      return MaterialIcon;\n    case \"material-community\":\n      return MaterialCommunityIcon;\n    case \"fontisto\":\n      return Fontisto;\n    case \"entypo\":\n      return EntypoIcon;\n    case \"simple-line-icon\":\n      return SimpleLineIcon;\n    case \"antdesign\":\n      return AntDesign;\n    case \"ion\":\n      return Ionicons;\n    default:\n      return MaterialIcon;\n  }\n};\n\nexport const presets = (size: number) => ({\n  default: {\n    containerStyle: null,\n    icon: { name: null, size: scale(11), color: \"black\" },\n  },\n  safe: {\n    containerStyle: { margin: scale(5) },\n    icon: { name: null, size: scale(11), color: \"black\" },\n  },\n  header: {\n    containerStyle: null,\n    icon: { name: null, size: scale(24), color: \"black\" },\n  },\n  circular: {\n    containerStyle: {\n      borderRadius: size * 2,\n      width: size * 1.8,\n      height: size * 1.8,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    icon: null,\n  },\n});\n","import React from \"react\";\n//@ts-check\nimport { Dimensions, Platform, StatusBar } from \"react-native\";\nimport { moderateScale, scale, verticalScale } from \"react-native-size-matters\";\n\n// export * from \"react-native-size-matters\"\n\nexport { moderateScale as scale, moderateScale, verticalScale };\n\n/**\n * Check if device is iphoneX\n */\nexport function isIphoneX() {\n  const dimen = Dimensions.get(\"window\");\n  return (\n    Platform.OS === \"ios\" &&\n    !Platform.isPad &&\n    !Platform.isTVOS &&\n    (dimen.height === 812 ||\n      dimen.width === 812 ||\n      dimen.height === 896 ||\n      dimen.width === 896)\n  );\n}\n\nexport function ifIphoneX(iphoneXStyle, regularStyle) {\n  if (isIphoneX()) {\n    return iphoneXStyle;\n  }\n  return regularStyle;\n}\n\nexport function getStatusBarHeight(safe?: string) {\n  return Platform.select({\n    ios: ifIphoneX(safe ? 44 : 30, 20),\n    android: StatusBar.currentHeight,\n    default: 0,\n  });\n}\n\n/**\n * @description Get bottom space \"safe area\" of the device. Especially useful for iphone X screen\n * @param safe - Safe padding around bottom space\n */\nexport function getBottomSpace(safe?: string) {\n  if (safe) {\n    return isIphoneX() ? 34 + scale(10) : scale(10);\n  } else {\n    return isIphoneX() ? 34 : 0;\n  }\n}\n\nexport const DEVICE_WIDTH = Dimensions.get(\"window\").width;\nexport const DEVICE_HEIGHT = Dimensions.get(\"window\").height;\n\nexport const IS_ANDROID = Platform.OS === \"android\";\nexport const IS_WEB = Platform.OS === \"web\";\n\nexport const LOCAL_STORAGE_KEY = \"mid5LocalStorage\";\n","import { useWindowDimensions } from \"react-native\";\n\n/**\n * A hook that gets dynamic dimensions,\n * and use such value to extend `react-native-size-matters`\n * ---\n * @example\n * ```\n * const { WIDTH, HEIGHT, s, vs, ms, mvs } = useDimension(\"window\")\n *\n * ```\n * ---\n * @version 0.12.15\n * -  *Use useWindowDimensions(_)*\n * @author nguyenkhooi\n */\nexport function useDimension(type: \"screen\" | \"window\" = \"window\"): dDime {\n  const WIDTH = useWindowDimensions().width;\n  const HEIGHT = useWindowDimensions().height;\n\n  // const [dimensions, setDimensions] = React.useState({ window, screen });\n  // const onChange = ({ window, screen }) => {\n  //   setDimensions({ window, screen });\n  // };\n  // React.useEffect(() => {\n  //   Dimensions.addEventListener(\"change\", onChange);\n  //   return () => {\n  //     Dimensions.removeEventListener(\"change\", onChange);\n  //   };\n  // }, []);\n\n  // const WIDTH = dimensions[type].width || Dimensions.get(\"window\").width;\n  // const HEIGHT = dimensions[type].height || Dimensions.get(\"window\").height;\n\n  /**\n   * Extensions of `react-native-size-matters`,\n   * using dynamic WIDTH and HEIGHT\n   * ---\n   *\n   * @see react-native-size-matters\n   */\n  //Default guideline sizes are based on standard ~5\" screen mobile device\n  const guidelineBaseWidth = 350;\n  const guidelineBaseHeight = 680;\n  const [shortDimension, longDimension] =\n    WIDTH < HEIGHT ? [WIDTH, HEIGHT] : [HEIGHT, WIDTH];\n\n  let s = (size: number) => (shortDimension / guidelineBaseWidth) * size;\n  let vs = (size: number) => (longDimension / guidelineBaseHeight) * size;\n  let ms = (size: number, factor = 0.5) => size + (s(size) - size) * factor;\n  let mvs = (size: number, factor = 0.5) => size + (vs(size) - size) * factor;\n  return { WIDTH, HEIGHT, s, vs, ms, mvs };\n}\n\nexport interface dDime {\n  WIDTH: number;\n  HEIGHT: number;\n  s(size: number): number;\n  vs(size: number): number;\n  ms(size: number): number;\n  mvs(size: number): number;\n}\n","/** @this SAUCE-structure-typings */\nexport * from \"./screens-typings\"\nexport * from \"./assets-typings\"\nexport * from \"./utils-typings\"\nexport * from \"./components-typings\"\n\n/** @this functional-typings */\nexport * from \"./photos-typings\"\nexport * from \"./frbs-typings\"\nexport * from \"./auth-typings\"\n\nexport * from \"./response-typings/vehicle.response\"\nexport * from \"./response-typings/mapboxSearch.response\"\n","/* eslint-disable @typescript-eslint/interface-name-prefix */\nimport { TextStyle } from \"react-native\";\nimport { colors } from \"utils\";\n\n/** TODO 📕 this */\n/**\n * @see https://stackoverflow.com/a/49286056\n */\nexport type ValueOf<T> = T[keyof T];\nexport type KeyOf<T> = keyof T;\nexport type dColors = typeof colors;\nexport type ENUM_Palette = ValueOf<dColors>;\n\nexport type dTypo = {\n  largeTitle: TextStyle;\n  headline: TextStyle;\n  title: TextStyle;\n  titleEmphasized: TextStyle;\n  subtitle: TextStyle;\n  subtitleEmphasized: TextStyle;\n  body: TextStyle;\n  bodyEmphasized: TextStyle;\n  caption: TextStyle;\n  captionEmphasized: TextStyle;\n};\n\n/**\n * fr theme\n */\nexport interface dTheme {\n  C: dColors;\n  dark?: boolean;\n}\n\n/**\n * List of theme index\n */\nexport type ENUM_Theme = \"themeLight\" | \"themeDark\"; //* Add more theme index here if wanted\n\n/**\n * List of theme index\n *\n */\nexport enum THEME {\n  NULL = \"null\",\n  LIGHT = \"themeLight\",\n  DARK = \"themeDark\",\n}\nexport interface PROPS_ThemeProvider {\n  theme: ENUM_Theme;\n  setTheme?(theme: ENUM_Theme): void;\n  children: React.ReactNode;\n}\n\nexport type ENUM_FontFamily =\n  | \"Montserrat-Bold\"\n  | \"Roboto_medium\"\n  | \"Roboto\"\n  | \"System\";\n","import { scale } from \"utils\"\n\n/** `imageInfo` (e.g. imageInfo00, imageInfo01) contains props of such image */\nexport interface IPimageInfo {\n  /** Local path of an image */\n  path: string | null\n  /** Image size */\n  size: { height: number | null; width: number | null }\n  /** Uri of an image, usually FRBS link */\n  uri?: string | null\n  /** Storage bucket of an image, usually FRBS's Storage subfolders */\n  bucket?: \"users\" | \"food\" | null\n}\n\nexport const __imageInfo: IPimageInfo = {\n  path: `https://randomuser.me/api/portraits/women/95.jpg`,\n  size: { height: scale(134), width: scale(134) },\n  uri: \"https://randomuser.me/api/portraits/women/95.jpg\",\n  bucket: null,\n}\n\n/** `photoZZ` (e.g. photo00, photo01) is the uri/path of image */\nexport type photoZZ = string\n\nexport type mediaType = \"photo\" | \"video\"\n//* REVIEW PROMISE\n\nexport interface IRuploadMedia {\n  /**\n   * Promise message\n   */\n  message: string\n  /**\n   * Upload status\n   */\n  status: null | {\n    state: \"cancelled\" | \"error\" | \"paused\" | \"running\" | \"success\"\n    progress: number\n  }\n  /**\n   * Uri link\n   */\n  uri: string\n}\n","import * as R from \"ramda\";\n\n/**\n * Generate unique IDs for use as pseudo-private/protected names.\n * @see https://gist.github.com/gordonbrander/2230317\n * @version 0.7.1\n */\nexport function ID() {\n  // Math.random should be unique because of its seeding algorithm.\n  // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n  // after the decimal.\n  return \"_\" + Math.random().toString(36).substr(2, 9);\n}\n\n/**\n * Assuming Date \"zero\" (aka ISOString == \"1970-01-01T00\") is default `null-date`.\n *\n * This function checks if given date is `\"null-date\"` or not\n * @version 0.7.1\n */\nexport function isDateZero(date: Date) {\n  return date.toISOString().includes(`1970-01-01T00`);\n}\n\n/**\n * Format Time from Date() to human readable format\n * @version 0.7.1\n */\nexport function formatTime(date: Date, showSeconds: boolean) {\n  const formattedTime = showSeconds\n    ? [date.getHours(), date.getMinutes(), date.getSeconds()]\n        .map((num) => `0${num}`.slice(-2))\n        .join(\":\")\n    : [date.getHours(), date.getMinutes()]\n        .map((num) => `0${num}`.slice(-2))\n        .join(\":\");\n\n  return formattedTime;\n}\n\n/**\n * Capitalize string\n * @version 0.7.1\n * NOTE: need tested\n */\nexport const capitalize = (string: string) =>\n  !!string && R.compose(R.join(\"\"), R.over(R.lensIndex(0), R.toUpper))(string);\n","import * as R from \"ramda\";\n\n/**\n * Filter collection based on values in array\n *\n * @example\n *  const array = [1, 2, 4];\n    const collection = [\n      { _id: 1, eyes: 'blue' },\n      { _id: 2, eyes: 'brown' },\n      { _id: 3, eyes: 'green' },\n      { _id: 4, eyes: 'blue' },\n    ];\n    const result = filterByValues('_id', array, collection);\n    //* result: \n    [  { _id: 1, eyes: 'blue' },\n      { _id: 2, eyes: 'brown' },\n      { _id: 4, eyes: 'blue' },]\n    \n      * @param filterKey - Filter Key (e.g. _id)\n      * @param filteredList - List of filtered value\n      * @param collection - Collection of raw data\n      *\n * @see https://stackoverflow.com/questions/50161078/filter-collection-based-on-values-in-array-in-ramda\n * @version 0.7.1\n */\nexport function filterByValues(\n  filterKey: string,\n  filteredList: string[] | boolean[],\n  collection: {}[]\n) {\n  const joinByType = R.innerJoin((o, type) => o[filterKey] === type);\n  return joinByType(collection, filteredList);\n}\n\n/**\n * Filter collection based on values in array\n *\n * @example\n    const collection = [\n      { _id: 1, eyes: 'blue' },\n      { _id: 2, eyes: 'brown' },\n      { _id: 3, eyes: 'green' },\n      { _id: 4, eyes: 'blue' },\n    ];\n    const result = vLookup(collection, '_id');\n    //* result: [1,2,3,4]\n    \n * @param collection - Collection of raw data\n * @param key - Filter Key (e.g. _id)\n *\n * @see https://ramdajs.com/docs/#pluck\n * @version 0.7.1\n */\nexport function vLookup(collection: any[], key: string) {\n  var getValue = R.pluck(key);\n  return getValue(collection);\n}\n\n/**\n * Filter collection based on key's value (e.g. _id)\n *\n * @example\n    const collection = [\n      { _id: 1, eyes: 'blue' },\n      { _id: 2, eyes: 'brown' },\n      { _id: 3, eyes: 'green' },\n      { _id: 4, eyes: 'blue' },\n    ];\n    const result = hLookup('_id', 4, collection);\n    //* result: [{ _id: 4, eyes: 'blue' }]\n *\n * @see https://ramdajs.com/docs/#propEq\n * @version 0.7.1\n */\nexport function hLookup(\n  lookupKey: string,\n  lookupKeyValue: string,\n  collection: any[]\n) {\n  return R.filter(R.propEq(lookupKey, lookupKeyValue), collection);\n}\n\n/**\n * Filter collection based on key's value (e.g. _id)\n *\n * @example\n    const collection = [\n      { _id: 1, eyes: 'blue' },\n      { _id: 2, eyes: 'brown' },\n      { _id: 3, eyes: 'green' },\n      { _id: 4, eyes: 'blue' },\n    ];\n    const result = xLookup('_id', 4, 'eyes', collection);\n    //* result: ['blue']\n *\n * @see https://ramdajs.com/docs/#propEq\n * @version 0.7.1\n */\nexport function xLookup(\n  lookupKey: string,\n  lookupKeyValue: string,\n  returnKey: string,\n  collection: any[]\n) {\n  const ARR = hLookup(lookupKey, lookupKeyValue, collection);\n  let RES = [];\n  ARR.forEach((item) => {\n    RES.push(item[returnKey]);\n  });\n  return RES;\n}\n","import * as R from \"ramda\";\n\n/**\n * Merging array and remove duplication\n * \n * @example\n * const collection = [\n        [{ _id: 1, eyes: \"blue\" }],\n        [{ _id: 2, eyes: \"brown\" }, { _id: 1, eyes: \"blue\" }],\n        [{ _id: 3, eyes: \"green\" }],\n        [{ _id: 4, eyes: \"blue\" }],\n    ];\n    const result = arrayMergeNoDup(\"_id\", collection);\n    //* result: \n    [ { _id: 1, eyes: 'blue' },\n      { _id: 2, eyes: 'brown' },\n      { _id: 3, eyes: \"green\" }\n      { _id: 4, eyes: 'blue' }]\n\n * @version 0.7.4\n */\nexport function arrayMergeNoDup(filterKey: string, collection: any[]) {\n  const smartMerging = R.pipe(\n    //@ts-ignore\n    R.map(R.indexBy(R.prop(filterKey))),\n    R.reduce(R.mergeWith(R.merge), {}),\n    R.values\n  );\n  //@ts-ignore\n  return smartMerging(collection);\n}\n","import * as js from \"./js-functions\";\nimport * as web from \"./web-functions\";\n\nexport const fn = { js, web };\n","export const evaDark = {\n  \"color-primary-100\": \"#FFF0DE\",\n  \"color-primary-200\": \"#FFDDBE\",\n  \"color-primary-300\": \"#FFC69D\",\n  \"color-primary-400\": \"#FFB085\",\n  \"color-primary-500\": \"#FF8B5D\",\n  \"color-primary-600\": \"#DB6443\",\n  \"color-primary-700\": \"#B7432E\",\n  \"color-primary-800\": \"#93271D\",\n  \"color-primary-900\": \"#7A1311\",\n\n  \"color-primary-transparent-100\": \"rgba(254, 78, 2, 0.08)\",\n  \"color-primary-transparent-200\": \"rgba(254, 78, 2, 0.16)\",\n  \"color-primary-transparent-300\": \"rgba(254, 78, 2, 0.24)\",\n  \"color-primary-transparent-400\": \"rgba(254, 78, 2, 0.32)\",\n  \"color-primary-transparent-500\": \"rgba(254, 78, 2, 0.4)\",\n  \"color-primary-transparent-600\": \"rgba(254, 78, 2, 0.48)\",\n\n  \"color-secondary-100\": \"#DFCCFF\",\n  \"color-secondary-200\": \"#BC99FF\",\n  \"color-secondary-300\": \"#9667FF\",\n  \"color-secondary-400\": \"#7741FF\",\n  \"color-secondary-500\": \"#4402FF\",\n  \"color-secondary-600\": \"#3401DB\",\n  \"color-secondary-700\": \"#2601B7\",\n  \"color-secondary-800\": \"#1B0093\",\n  \"color-secondary-900\": \"#13007A\",\n\n  \"color-secondary-transparent-100\": \"rgba(68, 2, 255, 0.08)\",\n  \"color-secondary-transparent-200\": \"rgba(68, 2, 255, 0.16)\",\n  \"color-secondary-transparent-300\": \"rgba(68, 2, 255, 0.24)\",\n  \"color-secondary-transparent-400\": \"rgba(68, 2, 255, 0.32)\",\n  \"color-secondary-transparent-500\": \"rgba(68, 2, 255, 0.4)\",\n  \"color-secondary-transparent-600\": \"rgba(68, 2, 255, 0.48)\",\n\n  \"color-success-100\": \"#EBFCDE\",\n  \"color-success-200\": \"#D2FABF\",\n  \"color-success-300\": \"#B0F19C\",\n  \"color-success-400\": \"#8FE37F\",\n  \"color-success-500\": \"#60D156\",\n  \"color-success-600\": \"#3EB33E\",\n  \"color-success-700\": \"#2B9634\",\n  \"color-success-800\": \"#1B792A\",\n  \"color-success-900\": \"#106425\",\n\n  \"color-success-transparent-100\": \"rgba(0, 224, 150, 0.08)\",\n  \"color-success-transparent-200\": \"rgba(0, 224, 150, 0.16)\",\n  \"color-success-transparent-300\": \"rgba(0, 224, 150, 0.24)\",\n  \"color-success-transparent-400\": \"rgba(0, 224, 150, 0.32)\",\n  \"color-success-transparent-500\": \"rgba(0, 224, 150, 0.40)\",\n  \"color-success-transparent-600\": \"rgba(0, 224, 150, 0.48)\",\n\n  \"color-info-100\": \"#CBF1FC\",\n  \"color-info-200\": \"#98DEFA\",\n  \"color-info-300\": \"#64C0F0\",\n  \"color-info-400\": \"#3DA0E1\",\n  \"color-info-500\": \"#0674ce\",\n  \"color-info-600\": \"#045AB1\",\n  \"color-info-700\": \"#034394\",\n  \"color-info-800\": \"#012F77\",\n  \"color-info-900\": \"#012162\",\n\n  \"color-info-transparent-100\": \"rgba(6, 116, 206, 0.08)\",\n  \"color-info-transparent-200\": \"rgba(6, 116, 206, 0.16)\",\n  \"color-info-transparent-300\": \"rgba(6, 116, 206, 0.24)\",\n  \"color-info-transparent-400\": \"rgba(6, 116, 206, 0.32)\",\n  \"color-info-transparent-500\": \"rgba(6, 116, 206, 0.4)\",\n  \"color-info-transparent-600\": \"rgba(6, 116, 206, 0.48)\",\n\n  \"color-warning-100\": \"#FFF5D9\",\n  \"color-warning-200\": \"#FFE8B3\",\n  \"color-warning-300\": \"#FFD88D\",\n  \"color-warning-400\": \"#FFC871\",\n  \"color-warning-500\": \"#ffae42\",\n  \"color-warning-600\": \"#DB8A30\",\n  \"color-warning-700\": \"#B76A21\",\n  \"color-warning-800\": \"#934D15\",\n  \"color-warning-900\": \"#7A380C\",\n\n  \"color-warning-transparent-100\": \"rgba(255, 174, 66, 0.08)\",\n  \"color-warning-transparent-200\": \"rgba(255, 174, 66, 0.16)\",\n  \"color-warning-transparent-300\": \"rgba(255, 174, 66, 0.24)\",\n  \"color-warning-transparent-400\": \"rgba(255, 174, 66, 0.32)\",\n  \"color-warning-transparent-500\": \"rgba(255, 174, 66, 0.4)\",\n  \"color-warning-transparent-600\": \"rgba(255, 174, 66, 0.48)\",\n\n  \"color-danger-100\": \"#FEE6D6\",\n  \"color-danger-200\": \"#FDC7AE\",\n  \"color-danger-300\": \"#FBA186\",\n  \"color-danger-400\": \"#F87D67\",\n  \"color-danger-500\": \"#f44336\",\n  \"color-danger-600\": \"#D12729\",\n  \"color-danger-700\": \"#AF1B29\",\n  \"color-danger-800\": \"#8D1127\",\n  \"color-danger-900\": \"#750A26\",\n\n  \"color-danger-transparent-100\": \"rgba(244, 67, 54, 0.08)\",\n  \"color-danger-transparent-200\": \"rgba(244, 67, 54, 0.16)\",\n  \"color-danger-transparent-300\": \"rgba(244, 67, 54, 0.24)\",\n  \"color-danger-transparent-400\": \"rgba(244, 67, 54, 0.32)\",\n  \"color-danger-transparent-500\": \"rgba(244, 67, 54, 0.4)\",\n  \"color-danger-transparent-600\": \"rgba(244, 67, 54, 0.48)\",\n\n  \"color-basic-100\": \"#FFFFFF\",\n  \"color-basic-200\": \"#F7F9FC\",\n  \"color-basic-300\": \"#EDF1F7\",\n  \"color-basic-400\": \"#E4E9F2\",\n  \"color-basic-500\": \"#C5CEE0\",\n  \"color-basic-600\": \"#8F9BB3\",\n  \"color-basic-700\": \"#2E3A59\",\n  \"color-basic-800\": \"#424242\",\n  \"color-basic-900\": \"#303030\",\n  \"color-basic-1000\": \"#212121\",\n  \"color-basic-1100\": \"#181818\",\n\n  \"color-basic-transparent-100\": \"rgba(143, 155, 179, 0.08)\",\n  \"color-basic-transparent-200\": \"rgba(143, 155, 179, 0.16)\",\n  \"color-basic-transparent-300\": \"rgba(143, 155, 179, 0.24)\",\n  \"color-basic-transparent-400\": \"rgba(143, 155, 179, 0.32)\",\n  \"color-basic-transparent-500\": \"rgba(143, 155, 179, 0.40)\",\n  \"color-basic-transparent-600\": \"rgba(143, 155, 179, 0.48)\",\n\n  \"color-basic-control-transparent-100\": \"rgba(255, 255, 255, 0.08)\",\n  \"color-basic-control-transparent-200\": \"rgba(255, 255, 255, 0.16)\",\n  \"color-basic-control-transparent-300\": \"rgba(255, 255, 255, 0.24)\",\n  \"color-basic-control-transparent-400\": \"rgba(255, 255, 255, 0.32)\",\n  \"color-basic-control-transparent-500\": \"rgba(255, 255, 255, 0.40)\",\n  \"color-basic-control-transparent-600\": \"rgba(255, 255, 255, 0.48)\",\n\n  \"color-basic-focus\": \"$color-basic-400\",\n  \"color-basic-hover\": \"$color-basic-200\",\n  \"color-basic-default\": \"$color-basic-300\",\n  \"color-basic-active\": \"$color-basic-400\",\n  \"color-basic-disabled\": \"$color-basic-transparent-300\",\n  \"color-basic-focus-border\": \"$color-basic-500\",\n  \"color-basic-hover-border\": \"$color-basic-hover\",\n  \"color-basic-default-border\": \"$color-basic-default\",\n  \"color-basic-active-border\": \"$color-basic-active\",\n  \"color-basic-disabled-border\": \"$color-basic-disabled\",\n\n  \"color-basic-transparent-focus\": \"$color-basic-transparent-300\",\n  \"color-basic-transparent-hover\": \"$color-basic-transparent-200\",\n  \"color-basic-transparent-default\": \"$color-basic-transparent-100\",\n  \"color-basic-transparent-active\": \"$color-basic-transparent-300\",\n  \"color-basic-transparent-disabled\": \"$color-basic-transparent-200\",\n  \"color-basic-transparent-focus-border\": \"$color-basic-600\",\n  \"color-basic-transparent-hover-border\": \"$color-basic-600\",\n  \"color-basic-transparent-default-border\": \"$color-basic-600\",\n  \"color-basic-transparent-active-border\": \"$color-basic-600\",\n  \"color-basic-transparent-disabled-border\": \"$color-basic-transparent-300\",\n\n  \"color-primary-focus\": \"$color-primary-600\",\n  \"color-primary-hover\": \"$color-primary-400\",\n  \"color-primary-default\": \"$color-primary-500\",\n  \"color-primary-active\": \"$color-primary-600\",\n  \"color-primary-disabled\": \"$color-basic-transparent-300\",\n  \"color-primary-focus-border\": \"$color-primary-700\",\n  \"color-primary-hover-border\": \"$color-primary-hover\",\n  \"color-primary-default-border\": \"$color-primary-default\",\n  \"color-primary-active-border\": \"$color-primary-active\",\n  \"color-primary-disabled-border\": \"$color-primary-disabled\",\n\n  \"color-primary-transparent-focus\": \"$color-primary-transparent-300\",\n  \"color-primary-transparent-hover\": \"$color-primary-transparent-200\",\n  \"color-primary-transparent-default\": \"$color-primary-transparent-100\",\n  \"color-primary-transparent-active\": \"$color-primary-transparent-300\",\n  \"color-primary-transparent-disabled\": \"$color-basic-transparent-200\",\n  \"color-primary-transparent-focus-border\": \"$color-primary-500\",\n  \"color-primary-transparent-hover-border\": \"$color-primary-500\",\n  \"color-primary-transparent-default-border\": \"$color-primary-500\",\n  \"color-primary-transparent-active-border\": \"$color-primary-500\",\n  \"color-primary-transparent-disabled-border\": \"$color-basic-transparent-300\",\n\n  \"color-success-focus\": \"$color-success-600\",\n  \"color-success-hover\": \"$color-success-400\",\n  \"color-success-default\": \"$color-success-500\",\n  \"color-success-active\": \"$color-success-600\",\n  \"color-success-disabled\": \"$color-basic-transparent-300\",\n  \"color-success-focus-border\": \"$color-success-700\",\n  \"color-success-hover-border\": \"$color-success-hover\",\n  \"color-success-default-border\": \"$color-success-default\",\n  \"color-success-active-border\": \"$color-success-active\",\n  \"color-success-disabled-border\": \"$color-success-disabled\",\n\n  \"color-success-transparent-focus\": \"$color-success-transparent-300\",\n  \"color-success-transparent-hover\": \"$color-success-transparent-200\",\n  \"color-success-transparent-default\": \"$color-success-transparent-100\",\n  \"color-success-transparent-active\": \"$color-success-transparent-300\",\n  \"color-success-transparent-disabled\": \"$color-basic-transparent-200\",\n  \"color-success-transparent-focus-border\": \"$color-success-500\",\n  \"color-success-transparent-hover-border\": \"$color-success-500\",\n  \"color-success-transparent-default-border\": \"$color-success-500\",\n  \"color-success-transparent-active-border\": \"$color-success-500\",\n  \"color-success-transparent-disabled-border\": \"$color-basic-transparent-300\",\n\n  \"color-info-focus\": \"$color-info-600\",\n  \"color-info-hover\": \"$color-info-400\",\n  \"color-info-default\": \"$color-info-500\",\n  \"color-info-active\": \"$color-info-600\",\n  \"color-info-disabled\": \"$color-basic-transparent-300\",\n  \"color-info-focus-border\": \"$color-info-700\",\n  \"color-info-hover-border\": \"$color-info-hover\",\n  \"color-info-default-border\": \"$color-info-default\",\n  \"color-info-active-border\": \"$color-info-active\",\n  \"color-info-disabled-border\": \"$color-info-disabled\",\n\n  \"color-info-transparent-focus\": \"$color-info-transparent-300\",\n  \"color-info-transparent-hover\": \"$color-info-transparent-200\",\n  \"color-info-transparent-default\": \"$color-info-transparent-100\",\n  \"color-info-transparent-active\": \"$color-info-transparent-300\",\n  \"color-info-transparent-disabled\": \"$color-basic-transparent-200\",\n  \"color-info-transparent-focus-border\": \"$color-info-500\",\n  \"color-info-transparent-hover-border\": \"$color-info-500\",\n  \"color-info-transparent-default-border\": \"$color-info-500\",\n  \"color-info-transparent-active-border\": \"$color-info-500\",\n  \"color-info-transparent-disabled-border\": \"$color-basic-transparent-300\",\n\n  \"color-warning-focus\": \"$color-warning-600\",\n  \"color-warning-hover\": \"$color-warning-400\",\n  \"color-warning-default\": \"$color-warning-500\",\n  \"color-warning-active\": \"$color-warning-600\",\n  \"color-warning-disabled\": \"$color-basic-transparent-300\",\n  \"color-warning-focus-border\": \"$color-warning-700\",\n  \"color-warning-hover-border\": \"$color-warning-hover\",\n  \"color-warning-default-border\": \"$color-warning-default\",\n  \"color-warning-active-border\": \"$color-warning-active\",\n  \"color-warning-disabled-border\": \"$color-warning-disabled\",\n\n  \"color-warning-transparent-focus\": \"$color-warning-transparent-300\",\n  \"color-warning-transparent-hover\": \"$color-warning-transparent-200\",\n  \"color-warning-transparent-default\": \"$color-warning-transparent-100\",\n  \"color-warning-transparent-active\": \"$color-warning-transparent-300\",\n  \"color-warning-transparent-disabled\": \"$color-basic-transparent-200\",\n  \"color-warning-transparent-focus-border\": \"$color-warning-500\",\n  \"color-warning-transparent-hover-border\": \"$color-warning-500\",\n  \"color-warning-transparent-default-border\": \"$color-warning-500\",\n  \"color-warning-transparent-active-border\": \"$color-warning-500\",\n  \"color-warning-transparent-disabled-border\": \"$color-basic-transparent-300\",\n\n  \"color-danger-focus\": \"$color-danger-600\",\n  \"color-danger-hover\": \"$color-danger-400\",\n  \"color-danger-default\": \"$color-danger-500\",\n  \"color-danger-active\": \"$color-danger-600\",\n  \"color-danger-disabled\": \"$color-basic-transparent-300\",\n  \"color-danger-focus-border\": \"color-danger-700\",\n  \"color-danger-hover-border\": \"$color-danger-hover\",\n  \"color-danger-default-border\": \"$color-danger-default\",\n  \"color-danger-active-border\": \"$color-danger-active\",\n  \"color-danger-disabled-border\": \"$color-danger-disabled\",\n\n  \"color-danger-transparent-focus\": \"$color-danger-transparent-300\",\n  \"color-danger-transparent-hover\": \"$color-danger-transparent-200\",\n  \"color-danger-transparent-default\": \"$color-danger-transparent-100\",\n  \"color-danger-transparent-active\": \"$color-danger-transparent-300\",\n  \"color-danger-transparent-disabled\": \"$color-basic-transparent-200\",\n  \"color-danger-transparent-focus-border\": \"$color-danger-500\",\n  \"color-danger-transparent-hover-border\": \"$color-danger-500\",\n  \"color-danger-transparent-default-border\": \"$color-danger-500\",\n  \"color-danger-transparent-active-border\": \"$color-danger-500\",\n  \"color-danger-transparent-disabled-border\": \"$color-basic-transparent-300\",\n\n  \"color-control-focus\": \"$color-basic-300\",\n  \"color-control-hover\": \"$color-basic-200\",\n  \"color-control-default\": \"$color-basic-100\",\n  \"color-control-active\": \"$color-basic-300\",\n  \"color-control-disabled\": \"$color-basic-transparent-300\",\n  \"color-control-focus-border\": \"$color-basic-500\",\n  \"color-control-hover-border\": \"$color-control-hover\",\n  \"color-control-default-border\": \"$color-control-default\",\n  \"color-control-active-border\": \"$color-control-active\",\n  \"color-control-disabled-border\": \"$color-control-disabled\",\n\n  \"color-control-transparent-focus\": \"$color-basic-control-transparent-300\",\n  \"color-control-transparent-hover\": \"$color-basic-control-transparent-200\",\n  \"color-control-transparent-default\": \"$color-basic-control-transparent-100\",\n  \"color-control-transparent-active\": \"$color-basic-control-transparent-300\",\n  \"color-control-transparent-disabled\": \"$color-basic-transparent-200\",\n  \"color-control-transparent-focus-border\": \"$color-basic-100\",\n  \"color-control-transparent-hover-border\": \"$color-basic-100\",\n  \"color-control-transparent-default-border\": \"$color-basic-100\",\n  \"color-control-transparent-active-border\": \"$color-basic-100\",\n  \"color-control-transparent-disabled-border\": \"$color-basic-transparent-300\",\n\n  \"background-basic-color-1\": \"$color-basic-800\",\n  \"background-basic-color-2\": \"$color-basic-900\",\n  \"background-basic-color-3\": \"$color-basic-1000\",\n  \"background-basic-color-4\": \"$color-basic-1100\",\n\n  \"background-alternative-color-1\": \"$color-basic-100\",\n  \"background-alternative-color-2\": \"$color-basic-200\",\n  \"background-alternative-color-3\": \"$color-basic-300\",\n  \"background-alternative-color-4\": \"$color-basic-400\",\n\n  \"border-basic-color-1\": \"$color-basic-800\",\n  \"border-basic-color-2\": \"$color-basic-900\",\n  \"border-basic-color-3\": \"$color-basic-1000\",\n  \"border-basic-color-4\": \"$color-basic-1100\",\n  \"border-basic-color-5\": \"$color-basic-1100\",\n\n  \"border-alternative-color-1\": \"$color-basic-100\",\n  \"border-alternative-color-2\": \"$color-basic-200\",\n  \"border-alternative-color-3\": \"$color-basic-300\",\n  \"border-alternative-color-4\": \"$color-basic-400\",\n  \"border-alternative-color-5\": \"$color-basic-500\",\n\n  \"border-primary-color-1\": \"$color-primary-500\",\n  \"border-primary-color-2\": \"$color-primary-600\",\n  \"border-primary-color-3\": \"$color-primary-700\",\n  \"border-primary-color-4\": \"$color-primary-800\",\n  \"border-primary-color-5\": \"$color-primary-900\",\n\n  \"border-success-color-1\": \"$color-success-500\",\n  \"border-success-color-2\": \"$color-success-600\",\n  \"border-success-color-3\": \"$color-success-700\",\n  \"border-success-color-4\": \"$color-success-800\",\n  \"border-success-color-5\": \"$color-success-900\",\n\n  \"border-info-color-1\": \"$color-info-500\",\n  \"border-info-color-2\": \"$color-info-600\",\n  \"border-info-color-3\": \"$color-info-700\",\n  \"border-info-color-4\": \"$color-info-800\",\n  \"border-info-color-5\": \"$color-info-900\",\n\n  \"border-warning-color-1\": \"$color-warning-500\",\n  \"border-warning-color-2\": \"$color-warning-600\",\n  \"border-warning-color-3\": \"$color-warning-700\",\n  \"border-warning-color-4\": \"$color-warning-800\",\n  \"border-warning-color-5\": \"$color-warning-900\",\n\n  \"border-danger-color-1\": \"$color-danger-500\",\n  \"border-danger-color-2\": \"$color-danger-600\",\n  \"border-danger-color-3\": \"$color-danger-700\",\n  \"border-danger-color-4\": \"$color-danger-800\",\n  \"border-danger-color-5\": \"$color-danger-900\",\n\n  \"text-basic-color\": \"$color-basic-100\",\n  \"text-alternate-color\": \"$color-basic-900\",\n  \"text-control-color\": \"$color-basic-100\",\n  \"text-disabled-color\": \"$color-basic-transparent-600\",\n  \"text-hint-color\": \"$color-basic-600\",\n\n  \"text-primary-color\": \"$color-primary-default\",\n  \"text-primary-focus-color\": \"$color-primary-focus\",\n  \"text-primary-hover-color\": \"$color-primary-hover\",\n  \"text-primary-active-color\": \"$color-primary-active\",\n  \"text-primary-disabled-color\": \"$color-primary-400\",\n\n  \"text-success-color\": \"$color-success-default\",\n  \"text-success-focus-color\": \"$color-success-focus\",\n  \"text-success-hover-color\": \"$color-success-hover\",\n  \"text-success-active-color\": \"$color-success-active\",\n  \"text-success-disabled-color\": \"$color-success-400\",\n\n  \"text-info-color\": \"$color-info-default\",\n  \"text-info-focus-color\": \"$color-info-focus\",\n  \"text-info-hover-color\": \"$color-info-hover\",\n  \"text-info-active-color\": \"$color-info-active\",\n  \"text-info-disabled-color\": \"$color-info-400\",\n\n  \"text-warning-color\": \"$color-warning-default\",\n  \"text-warning-focus-color\": \"$color-warning-focus\",\n  \"text-warning-hover-color\": \"$color-warning-hover\",\n  \"text-warning-active-color\": \"$color-warning-active\",\n  \"text-warning-disabled-color\": \"$color-warning-400\",\n\n  \"text-danger-color\": \"$color-danger-default\",\n  \"text-danger-focus-color\": \"$color-danger-focus\",\n  \"text-danger-hover-color\": \"$color-danger-hover\",\n  \"text-danger-active-color\": \"$color-danger-active\",\n  \"text-danger-disabled-color\": \"$color-danger-400\",\n\n  \"outline-color\": \"$color-basic-700\",\n}\n","export const evaLight = {\n  \"color-primary-100\": \"#FEE9CC\",\n  \"color-primary-200\": \"#FECC99\",\n  \"color-primary-300\": \"#FEA967\",\n  \"color-primary-400\": \"#FE8641\",\n  \"color-primary-500\": \"#FE4E02\",\n  \"color-primary-600\": \"#DA3401\",\n  \"color-primary-700\": \"#B61F01\",\n  \"color-primary-800\": \"#930F00\",\n  \"color-primary-900\": \"#790400\",\n\n  \"color-primary-transparent-100\": \"rgba(254, 78, 2, 0.08)\",\n  \"color-primary-transparent-200\": \"rgba(254, 78, 2, 0.16)\",\n  \"color-primary-transparent-300\": \"rgba(254, 78, 2, 0.24)\",\n  \"color-primary-transparent-400\": \"rgba(254, 78, 2, 0.32)\",\n  \"color-primary-transparent-500\": \"rgba(254, 78, 2, 0.4)\",\n  \"color-primary-transparent-600\": \"rgba(254, 78, 2, 0.48)\",\n\n  \"color-secondary-100\": \"#DFCCFF\",\n  \"color-secondary-200\": \"#BC99FF\",\n  \"color-secondary-300\": \"#9667FF\",\n  \"color-secondary-400\": \"#7741FF\",\n  \"color-secondary-500\": \"#4402FF\",\n  \"color-secondary-600\": \"#3401DB\",\n  \"color-secondary-700\": \"#2601B7\",\n  \"color-secondary-800\": \"#1B0093\",\n  \"color-secondary-900\": \"#13007A\",\n\n  \"color-secondary-transparent-100\": \"rgba(68, 2, 255, 0.08)\",\n  \"color-secondary-transparent-200\": \"rgba(68, 2, 255, 0.16)\",\n  \"color-secondary-transparent-300\": \"rgba(68, 2, 255, 0.24)\",\n  \"color-secondary-transparent-400\": \"rgba(68, 2, 255, 0.32)\",\n  \"color-secondary-transparent-500\": \"rgba(68, 2, 255, 0.4)\",\n  \"color-secondary-transparent-600\": \"rgba(68, 2, 255, 0.48)\",\n\n  \"color-success-100\": \"#EBFCDE\",\n  \"color-success-200\": \"#D2FABF\",\n  \"color-success-300\": \"#B0F19C\",\n  \"color-success-400\": \"#8FE37F\",\n  \"color-success-500\": \"#60D156\",\n  \"color-success-600\": \"#3EB33E\",\n  \"color-success-700\": \"#2B9634\",\n  \"color-success-800\": \"#1B792A\",\n  \"color-success-900\": \"#106425\",\n\n  \"color-success-transparent-100\": \"rgba(0, 224, 150, 0.08)\",\n  \"color-success-transparent-200\": \"rgba(0, 224, 150, 0.16)\",\n  \"color-success-transparent-300\": \"rgba(0, 224, 150, 0.24)\",\n  \"color-success-transparent-400\": \"rgba(0, 224, 150, 0.32)\",\n  \"color-success-transparent-500\": \"rgba(0, 224, 150, 0.40)\",\n  \"color-success-transparent-600\": \"rgba(0, 224, 150, 0.48)\",\n\n  \"color-info-100\": \"#CBF1FC\",\n  \"color-info-200\": \"#98DEFA\",\n  \"color-info-300\": \"#64C0F0\",\n  \"color-info-400\": \"#3DA0E1\",\n  \"color-info-500\": \"#0674ce\",\n  \"color-info-600\": \"#045AB1\",\n  \"color-info-700\": \"#034394\",\n  \"color-info-800\": \"#012F77\",\n  \"color-info-900\": \"#012162\",\n\n  \"color-info-transparent-100\": \"rgba(6, 116, 206, 0.08)\",\n  \"color-info-transparent-200\": \"rgba(6, 116, 206, 0.16)\",\n  \"color-info-transparent-300\": \"rgba(6, 116, 206, 0.24)\",\n  \"color-info-transparent-400\": \"rgba(6, 116, 206, 0.32)\",\n  \"color-info-transparent-500\": \"rgba(6, 116, 206, 0.4)\",\n  \"color-info-transparent-600\": \"rgba(6, 116, 206, 0.48)\",\n\n  \"color-warning-100\": \"#FFF5D9\",\n  \"color-warning-200\": \"#FFE8B3\",\n  \"color-warning-300\": \"#FFD88D\",\n  \"color-warning-400\": \"#FFC871\",\n  \"color-warning-500\": \"#ffae42\",\n  \"color-warning-600\": \"#DB8A30\",\n  \"color-warning-700\": \"#B76A21\",\n  \"color-warning-800\": \"#934D15\",\n  \"color-warning-900\": \"#7A380C\",\n\n  \"color-warning-transparent-100\": \"rgba(255, 174, 66, 0.08)\",\n  \"color-warning-transparent-200\": \"rgba(255, 174, 66, 0.16)\",\n  \"color-warning-transparent-300\": \"rgba(255, 174, 66, 0.24)\",\n  \"color-warning-transparent-400\": \"rgba(255, 174, 66, 0.32)\",\n  \"color-warning-transparent-500\": \"rgba(255, 174, 66, 0.4)\",\n  \"color-warning-transparent-600\": \"rgba(255, 174, 66, 0.48)\",\n\n  \"color-danger-100\": \"#FEE6D6\",\n  \"color-danger-200\": \"#FDC7AE\",\n  \"color-danger-300\": \"#FBA186\",\n  \"color-danger-400\": \"#F87D67\",\n  \"color-danger-500\": \"#f44336\",\n  \"color-danger-600\": \"#D12729\",\n  \"color-danger-700\": \"#AF1B29\",\n  \"color-danger-800\": \"#8D1127\",\n  \"color-danger-900\": \"#750A26\",\n\n  \"color-danger-transparent-100\": \"rgba(244, 67, 54, 0.08)\",\n  \"color-danger-transparent-200\": \"rgba(244, 67, 54, 0.16)\",\n  \"color-danger-transparent-300\": \"rgba(244, 67, 54, 0.24)\",\n  \"color-danger-transparent-400\": \"rgba(244, 67, 54, 0.32)\",\n  \"color-danger-transparent-500\": \"rgba(244, 67, 54, 0.4)\",\n  \"color-danger-transparent-600\": \"rgba(244, 67, 54, 0.48)\",\n\n  \"color-basic-100\": \"#FFFFFF\",\n  \"color-basic-200\": \"#F7F9FC\",\n  \"color-basic-300\": \"#EDF1F7\",\n  \"color-basic-400\": \"#E4E9F2\",\n  \"color-basic-500\": \"#C5CEE0\",\n  \"color-basic-600\": \"#8F9BB3\",\n  \"color-basic-700\": \"#2E3A59\",\n  \"color-basic-800\": \"#222B45\",\n  \"color-basic-900\": \"#1A2138\",\n  \"color-basic-1000\": \"#151A30\",\n  \"color-basic-1100\": \"#101426\",\n\n  \"color-basic-transparent-100\": \"rgba(143, 155, 179, 0.08)\",\n  \"color-basic-transparent-200\": \"rgba(143, 155, 179, 0.16)\",\n  \"color-basic-transparent-300\": \"rgba(143, 155, 179, 0.24)\",\n  \"color-basic-transparent-400\": \"rgba(143, 155, 179, 0.32)\",\n  \"color-basic-transparent-500\": \"rgba(143, 155, 179, 0.40)\",\n  \"color-basic-transparent-600\": \"rgba(143, 155, 179, 0.48)\",\n\n  \"color-basic-control-transparent-100\": \"rgba(255, 255, 255, 0.08)\",\n  \"color-basic-control-transparent-200\": \"rgba(255, 255, 255, 0.16)\",\n  \"color-basic-control-transparent-300\": \"rgba(255, 255, 255, 0.24)\",\n  \"color-basic-control-transparent-400\": \"rgba(255, 255, 255, 0.32)\",\n  \"color-basic-control-transparent-500\": \"rgba(255, 255, 255, 0.40)\",\n  \"color-basic-control-transparent-600\": \"rgba(255, 255, 255, 0.48)\",\n\n  \"color-basic-focus\": \"$color-basic-400\",\n  \"color-basic-hover\": \"$color-basic-200\",\n  \"color-basic-default\": \"$color-basic-300\",\n  \"color-basic-active\": \"$color-basic-400\",\n  \"color-basic-disabled\": \"$color-basic-transparent-300\",\n  \"color-basic-focus-border\": \"$color-basic-500\",\n  \"color-basic-hover-border\": \"$color-basic-hover\",\n  \"color-basic-default-border\": \"$color-basic-default\",\n  \"color-basic-active-border\": \"$color-basic-active\",\n  \"color-basic-disabled-border\": \"$color-basic-disabled\",\n\n  \"color-basic-transparent-focus\": \"$color-basic-transparent-300\",\n  \"color-basic-transparent-hover\": \"$color-basic-transparent-200\",\n  \"color-basic-transparent-default\": \"$color-basic-transparent-100\",\n  \"color-basic-transparent-active\": \"$color-basic-transparent-300\",\n  \"color-basic-transparent-disabled\": \"$color-basic-transparent-200\",\n  \"color-basic-transparent-focus-border\": \"$color-basic-600\",\n  \"color-basic-transparent-hover-border\": \"$color-basic-600\",\n  \"color-basic-transparent-default-border\": \"$color-basic-600\",\n  \"color-basic-transparent-active-border\": \"$color-basic-600\",\n  \"color-basic-transparent-disabled-border\": \"$color-basic-transparent-300\",\n\n  \"color-primary-focus\": \"$color-primary-600\",\n  \"color-primary-hover\": \"$color-primary-400\",\n  \"color-primary-default\": \"$color-primary-500\",\n  \"color-primary-active\": \"$color-primary-600\",\n  \"color-primary-disabled\": \"$color-basic-transparent-300\",\n  \"color-primary-focus-border\": \"$color-primary-700\",\n  \"color-primary-hover-border\": \"$color-primary-hover\",\n  \"color-primary-default-border\": \"$color-primary-default\",\n  \"color-primary-active-border\": \"$color-primary-active\",\n  \"color-primary-disabled-border\": \"$color-primary-disabled\",\n\n  \"color-primary-transparent-focus\": \"$color-primary-transparent-300\",\n  \"color-primary-transparent-hover\": \"$color-primary-transparent-200\",\n  \"color-primary-transparent-default\": \"$color-primary-transparent-100\",\n  \"color-primary-transparent-active\": \"$color-primary-transparent-300\",\n  \"color-primary-transparent-disabled\": \"$color-basic-transparent-200\",\n  \"color-primary-transparent-focus-border\": \"$color-primary-500\",\n  \"color-primary-transparent-hover-border\": \"$color-primary-500\",\n  \"color-primary-transparent-default-border\": \"$color-primary-500\",\n  \"color-primary-transparent-active-border\": \"$color-primary-500\",\n  \"color-primary-transparent-disabled-border\": \"$color-basic-transparent-300\",\n\n  \"color-success-focus\": \"$color-success-600\",\n  \"color-success-hover\": \"$color-success-400\",\n  \"color-success-default\": \"$color-success-500\",\n  \"color-success-active\": \"$color-success-600\",\n  \"color-success-disabled\": \"$color-basic-transparent-300\",\n  \"color-success-focus-border\": \"$color-success-700\",\n  \"color-success-hover-border\": \"$color-success-hover\",\n  \"color-success-default-border\": \"$color-success-default\",\n  \"color-success-active-border\": \"$color-success-active\",\n  \"color-success-disabled-border\": \"$color-success-disabled\",\n\n  \"color-success-transparent-focus\": \"$color-success-transparent-300\",\n  \"color-success-transparent-hover\": \"$color-success-transparent-200\",\n  \"color-success-transparent-default\": \"$color-success-transparent-100\",\n  \"color-success-transparent-active\": \"$color-success-transparent-300\",\n  \"color-success-transparent-disabled\": \"$color-basic-transparent-200\",\n  \"color-success-transparent-focus-border\": \"$color-success-500\",\n  \"color-success-transparent-hover-border\": \"$color-success-500\",\n  \"color-success-transparent-default-border\": \"$color-success-500\",\n  \"color-success-transparent-active-border\": \"$color-success-500\",\n  \"color-success-transparent-disabled-border\": \"$color-basic-transparent-300\",\n\n  \"color-info-focus\": \"$color-info-600\",\n  \"color-info-hover\": \"$color-info-400\",\n  \"color-info-default\": \"$color-info-500\",\n  \"color-info-active\": \"$color-info-600\",\n  \"color-info-disabled\": \"$color-basic-transparent-300\",\n  \"color-info-focus-border\": \"$color-info-700\",\n  \"color-info-hover-border\": \"$color-info-hover\",\n  \"color-info-default-border\": \"$color-info-default\",\n  \"color-info-active-border\": \"$color-info-active\",\n  \"color-info-disabled-border\": \"$color-info-disabled\",\n\n  \"color-info-transparent-focus\": \"$color-info-transparent-300\",\n  \"color-info-transparent-hover\": \"$color-info-transparent-200\",\n  \"color-info-transparent-default\": \"$color-info-transparent-100\",\n  \"color-info-transparent-active\": \"$color-info-transparent-300\",\n  \"color-info-transparent-disabled\": \"$color-basic-transparent-200\",\n  \"color-info-transparent-focus-border\": \"$color-info-500\",\n  \"color-info-transparent-hover-border\": \"$color-info-500\",\n  \"color-info-transparent-default-border\": \"$color-info-500\",\n  \"color-info-transparent-active-border\": \"$color-info-500\",\n  \"color-info-transparent-disabled-border\": \"$color-basic-transparent-300\",\n\n  \"color-warning-focus\": \"$color-warning-600\",\n  \"color-warning-hover\": \"$color-warning-400\",\n  \"color-warning-default\": \"$color-warning-500\",\n  \"color-warning-active\": \"$color-warning-600\",\n  \"color-warning-disabled\": \"$color-basic-transparent-300\",\n  \"color-warning-focus-border\": \"$color-warning-700\",\n  \"color-warning-hover-border\": \"$color-warning-hover\",\n  \"color-warning-default-border\": \"$color-warning-default\",\n  \"color-warning-active-border\": \"$color-warning-active\",\n  \"color-warning-disabled-border\": \"$color-warning-disabled\",\n\n  \"color-warning-transparent-focus\": \"$color-warning-transparent-300\",\n  \"color-warning-transparent-hover\": \"$color-warning-transparent-200\",\n  \"color-warning-transparent-default\": \"$color-warning-transparent-100\",\n  \"color-warning-transparent-active\": \"$color-warning-transparent-300\",\n  \"color-warning-transparent-disabled\": \"$color-basic-transparent-200\",\n  \"color-warning-transparent-focus-border\": \"$color-warning-500\",\n  \"color-warning-transparent-hover-border\": \"$color-warning-500\",\n  \"color-warning-transparent-default-border\": \"$color-warning-500\",\n  \"color-warning-transparent-active-border\": \"$color-warning-500\",\n  \"color-warning-transparent-disabled-border\": \"$color-basic-transparent-300\",\n\n  \"color-danger-focus\": \"$color-danger-600\",\n  \"color-danger-hover\": \"$color-danger-400\",\n  \"color-danger-default\": \"$color-danger-500\",\n  \"color-danger-active\": \"$color-danger-600\",\n  \"color-danger-disabled\": \"$color-basic-transparent-300\",\n  \"color-danger-focus-border\": \"color-danger-700\",\n  \"color-danger-hover-border\": \"$color-danger-hover\",\n  \"color-danger-default-border\": \"$color-danger-default\",\n  \"color-danger-active-border\": \"$color-danger-active\",\n  \"color-danger-disabled-border\": \"$color-danger-disabled\",\n\n  \"color-danger-transparent-focus\": \"$color-danger-transparent-300\",\n  \"color-danger-transparent-hover\": \"$color-danger-transparent-200\",\n  \"color-danger-transparent-default\": \"$color-danger-transparent-100\",\n  \"color-danger-transparent-active\": \"$color-danger-transparent-300\",\n  \"color-danger-transparent-disabled\": \"$color-basic-transparent-200\",\n  \"color-danger-transparent-focus-border\": \"$color-danger-500\",\n  \"color-danger-transparent-hover-border\": \"$color-danger-500\",\n  \"color-danger-transparent-default-border\": \"$color-danger-500\",\n  \"color-danger-transparent-active-border\": \"$color-danger-500\",\n  \"color-danger-transparent-disabled-border\": \"$color-basic-transparent-300\",\n\n  \"color-control-focus\": \"$color-basic-300\",\n  \"color-control-hover\": \"$color-basic-200\",\n  \"color-control-default\": \"$color-basic-100\",\n  \"color-control-active\": \"$color-basic-300\",\n  \"color-control-disabled\": \"$color-basic-transparent-300\",\n  \"color-control-focus-border\": \"$color-basic-500\",\n  \"color-control-hover-border\": \"$color-control-hover\",\n  \"color-control-default-border\": \"$color-control-default\",\n  \"color-control-active-border\": \"$color-control-active\",\n  \"color-control-disabled-border\": \"$color-control-disabled\",\n\n  \"color-control-transparent-focus\": \"$color-basic-control-transparent-300\",\n  \"color-control-transparent-hover\": \"$color-basic-control-transparent-200\",\n  \"color-control-transparent-default\": \"$color-basic-control-transparent-100\",\n  \"color-control-transparent-active\": \"$color-basic-control-transparent-300\",\n  \"color-control-transparent-disabled\": \"$color-basic-transparent-200\",\n  \"color-control-transparent-focus-border\": \"$color-basic-100\",\n  \"color-control-transparent-hover-border\": \"$color-basic-100\",\n  \"color-control-transparent-default-border\": \"$color-basic-100\",\n  \"color-control-transparent-active-border\": \"$color-basic-100\",\n  \"color-control-transparent-disabled-border\": \"$color-basic-transparent-300\",\n\n  \"background-basic-color-1\": \"$color-basic-100\",\n  \"background-basic-color-2\": \"$color-basic-200\",\n  \"background-basic-color-3\": \"$color-basic-300\",\n  \"background-basic-color-4\": \"$color-basic-400\",\n\n  \"background-alternative-color-1\": \"$color-basic-800\",\n  \"background-alternative-color-2\": \"$color-basic-900\",\n  \"background-alternative-color-3\": \"$color-basic-1000\",\n  \"background-alternative-color-4\": \"$color-basic-1100\",\n\n  \"border-basic-color-1\": \"$color-basic-100\",\n  \"border-basic-color-2\": \"$color-basic-200\",\n  \"border-basic-color-3\": \"$color-basic-300\",\n  \"border-basic-color-4\": \"$color-basic-400\",\n  \"border-basic-color-5\": \"$color-basic-500\",\n\n  \"border-alternative-color-1\": \"$color-basic-800\",\n  \"border-alternative-color-2\": \"$color-basic-900\",\n  \"border-alternative-color-3\": \"$color-basic-1000\",\n  \"border-alternative-color-4\": \"$color-basic-1100\",\n  \"border-alternative-color-5\": \"$color-basic-1100\",\n\n  \"border-primary-color-1\": \"$color-primary-500\",\n  \"border-primary-color-2\": \"$color-primary-600\",\n  \"border-primary-color-3\": \"$color-primary-700\",\n  \"border-primary-color-4\": \"$color-primary-800\",\n  \"border-primary-color-5\": \"$color-primary-900\",\n\n  \"border-success-color-1\": \"$color-success-500\",\n  \"border-success-color-2\": \"$color-success-600\",\n  \"border-success-color-3\": \"$color-success-700\",\n  \"border-success-color-4\": \"$color-success-800\",\n  \"border-success-color-5\": \"$color-success-900\",\n\n  \"border-info-color-1\": \"$color-info-500\",\n  \"border-info-color-2\": \"$color-info-600\",\n  \"border-info-color-3\": \"$color-info-700\",\n  \"border-info-color-4\": \"$color-info-800\",\n  \"border-info-color-5\": \"$color-info-900\",\n\n  \"border-warning-color-1\": \"$color-warning-500\",\n  \"border-warning-color-2\": \"$color-warning-600\",\n  \"border-warning-color-3\": \"$color-warning-700\",\n  \"border-warning-color-4\": \"$color-warning-800\",\n  \"border-warning-color-5\": \"$color-warning-900\",\n\n  \"border-danger-color-1\": \"$color-danger-500\",\n  \"border-danger-color-2\": \"$color-danger-600\",\n  \"border-danger-color-3\": \"$color-danger-700\",\n  \"border-danger-color-4\": \"$color-danger-800\",\n  \"border-danger-color-5\": \"$color-danger-900\",\n\n  \"text-basic-color\": \"$color-basic-800\",\n  \"text-alternate-color\": \"$color-basic-100\",\n  \"text-control-color\": \"$color-basic-100\",\n  \"text-disabled-color\": \"$color-basic-transparent-600\",\n  \"text-hint-color\": \"$color-basic-600\",\n\n  \"text-primary-color\": \"$color-primary-default\",\n  \"text-primary-focus-color\": \"$color-primary-focus\",\n  \"text-primary-hover-color\": \"$color-primary-hover\",\n  \"text-primary-active-color\": \"$color-primary-active\",\n  \"text-primary-disabled-color\": \"$color-primary-400\",\n\n  \"text-success-color\": \"$color-success-default\",\n  \"text-success-focus-color\": \"$color-success-focus\",\n  \"text-success-hover-color\": \"$color-success-hover\",\n  \"text-success-active-color\": \"$color-success-active\",\n  \"text-success-disabled-color\": \"$color-success-400\",\n\n  \"text-info-color\": \"$color-info-default\",\n  \"text-info-focus-color\": \"$color-info-focus\",\n  \"text-info-hover-color\": \"$color-info-hover\",\n  \"text-info-active-color\": \"$color-info-active\",\n  \"text-info-disabled-color\": \"$color-info-400\",\n\n  \"text-warning-color\": \"$color-warning-default\",\n  \"text-warning-focus-color\": \"$color-warning-focus\",\n  \"text-warning-hover-color\": \"$color-warning-hover\",\n  \"text-warning-active-color\": \"$color-warning-active\",\n  \"text-warning-disabled-color\": \"$color-warning-400\",\n\n  \"text-danger-color\": \"$color-danger-default\",\n  \"text-danger-focus-color\": \"$color-danger-focus\",\n  \"text-danger-hover-color\": \"$color-danger-hover\",\n  \"text-danger-active-color\": \"$color-danger-active\",\n  \"text-danger-disabled-color\": \"$color-danger-400\",\n\n  \"outline-color\": \"$color-basic-transparent-200\",\n}\n","import { evaDark } from \"./eva-dark-v1\"\nimport { evaLight } from \"./eva-light-v1\"\n\nexport const themeLight = {\n  /**\n   * The colors is available to use, but prefer using the name.\n   */\n  ...evaLight,\n  hichPurple: evaLight[\"color-secondary-500\"],\n  maturePurple: evaLight[\"color-secondary-800\"],\n  grey900: evaLight[\"color-basic-900\"],\n  grey600: evaLight[\"color-basic-600\"],\n  grey500: evaLight[\"color-basic-500\"],\n  pitchWhite: evaLight[\"color-basic-100\"],\n  /**\n   * A helper for making something see-thru. Use sparingly as many layers of transparency\n   * can cause older Android devices to slow down due to the excessive compositing required\n   * by their under-powered GPUs.\n   */\n  transparent: \"rgba(0, 0, 0, 0)\",\n  /**\n   * The main tinting colors.\n   */\n  primary: evaLight[\"color-primary-500\"],\n  /**\n   * The main tinting color, but darker.\n   */\n  primaryDarker: evaLight[\"color-primary-700\"],\n  /**\n   * The sceondary tinting colors.\n   */\n  accent: evaLight[\"color-info-500\"],\n  /**\n   * The secondary tinting colors, but darker.\n   */\n  accentDarker: evaLight[\"color-info-700\"],\n  /**\n   * The screen background.\n   */\n  background: evaLight[\"color-basic-100\"],\n  /**\n   * The `dark` screen background.\n   */\n  background01: evaLight[\"color-basic-1000\"],\n  /**\n   * The screen surface. Usually used for modal screen\n   */\n  surface: evaLight[\"color-basic-300\"],\n  /**\n   * The `dark` screen surface.\n   */\n  surface01: evaLight[\"color-basic-800\"],\n  /**\n   * A subtle color used for borders and lines.\n   */\n  line: evaLight[\"color-basic-400\"],\n  /**\n   * The default color of text in many components.\n   */\n  text: evaLight[\"color-basic-1100\"],\n  /**\n   * The '01' color of text in many dark-background components.\n   */\n  text01: evaLight[\"color-basic-300\"],\n  /**\n   * Secondary information.\n   */\n  dim: evaLight[\"color-basic-500\"],\n  /**\n   * Error messages and icons.\n   */\n  errorRed: evaDark[\"color-danger-500\"],\n  /**\n   * Warning color\n   */\n  hazardYellow: evaDark[\"color-warning-500\"],\n  /**\n   * Info color\n   */\n  infoBlue: evaDark[\"color-info-500\"],\n  /**\n   * Success color\n   */\n  awakenVolt: evaDark[\"color-success-400\"],\n\n  /**\n   * Storybook background for Text stories, or any stories where\n   * the text color is colors.text, which is white by default, and does not show\n   * in Stories against the default white background\n   */\n  storybookDarkBg: evaLight[\"color-basic-1000\"],\n\n  /**\n   * Storybook text color for stories that display Text components against the\n   * white background\n   */\n  storybookTextColor: evaLight[\"color-basic-1000\"],\n}\n\nexport const themeDark = {\n  /**\n   * The colors is available to use, but prefer using the name.\n   */\n  ...evaDark,\n  hichPurple: evaDark[\"color-secondary-400\"],\n  maturePurple: evaDark[\"color-secondary-700\"],\n  grey900: evaDark[\"color-basic-900\"],\n  grey600: evaDark[\"color-basic-600\"],\n  grey500: evaDark[\"color-basic-500\"],\n  pitchWhite: evaDark[\"color-basic-100\"],\n  /**\n   * A helper for making something see-thru. Use sparingly as many layers of transparency\n   * can cause older Android devices to slow down due to the excessive compositing required\n   * by their under-powered GPUs.\n   */\n  transparent: \"rgba(0, 0, 0, 0)\",\n  /**\n   * The main tinting colors.\n   */\n  primary: evaDark[\"color-primary-500\"],\n  /**\n   * The main tinting color, but darker.\n   */\n  primaryDarker: evaDark[\"color-primary-700\"],\n  /**\n   * The sceondary tinting colors.\n   */\n  accent: evaDark[\"color-info-500\"],\n  /**\n   * The secondary tinting colors, but darker.\n   */\n  accentDarker: evaDark[\"color-info-700\"],\n  /**\n   * The screen background.\n   */\n  background: evaDark[\"color-basic-1100\"],\n  /**\n   * The `dark` screen background.\n   */\n  background01: evaDark[\"color-basic-1100\"],\n  /**\n   * The screen surface. Usually used for modal screen\n   */\n  surface: evaDark[\"color-basic-900\"],\n  /**\n   * The `dark` screen surface.\n   */\n  surface01: evaDark[\"color-basic-900\"],\n  /**\n   * A subtle color used for borders and lines.\n   */\n  line: evaDark[\"color-basic-800\"],\n  /**\n   * The default color of text in many components.\n   */\n  text: evaDark[\"color-basic-100\"],\n  /**\n   * The '01' color of text in many dark-background components.\n   */\n  text01: evaDark[\"color-basic-100\"],\n  /**\n   * Secondary information.\n   */\n  dim: evaDark[\"color-basic-700\"],\n  /**\n   * Error messages and icons.\n   */\n  errorRed: evaDark[\"color-danger-500\"],\n  /**\n   * Warning color\n   */\n  hazardYellow: evaDark[\"color-warning-500\"],\n  /**\n   * Info color\n   */\n  infoBlue: evaDark[\"color-info-500\"],\n  /**\n   * Success color\n   */\n  awakenVolt: evaDark[\"color-success-400\"],\n  /**\n   * Storybook background for Text stories, or any stories where\n   * the text color is colors.text, which is white by default, and does not show\n   * in Stories against the default white background\n   */\n  storybookDarkBg: evaDark[\"color-basic-1000\"],\n\n  /**\n   * Storybook text color for stories that display Text components against the\n   * white background\n   */\n  storybookTextColor: evaDark[\"color-basic-1000\"],\n}\n/**\n * Roles for colors. Prefer using these over the colors.  It makes it easier\n * to change things.\n *\n * The only roles we need to place in here are the ones that span through the app.\n *\n * If you have a specific use-case, like a spinner colors.  It makes more sense to\n * put that in the <Spinner /> component.\n */\nexport const colors = themeLight\n","import { scale } from \"react-native-size-matters\"\nimport { IS_ANDROID } from \"utils/helpers\"\n\nexport const evaConfig = {\n  $schema: \"./node_modules/@eva-design/dss/schema/schema.json\",\n  version: 1.0,\n  strict: {\n    \"text-font-family\": \"System\",\n    \"montserrat-bold\": \"Montserrat-Bold\",\n\n    \"text-heading-1-font-size\": scale(36),\n    \"text-heading-1-font-weight\": \"800\",\n    \"text-heading-1-font-family\": \"$text-font-family\",\n\n    \"text-heading-2-font-size\": scale(32),\n    \"text-heading-2-font-weight\": \"800\",\n    \"text-heading-2-font-family\": \"$text-font-family\",\n\n    \"text-heading-3-font-size\": scale(30),\n    \"text-heading-3-font-weight\": \"800\",\n    \"text-heading-3-font-family\": \"$text-font-family\",\n\n    \"text-heading-4-font-size\": scale(26),\n    \"text-heading-4-font-weight\": \"800\",\n    \"text-heading-4-font-family\": \"$text-font-family\",\n\n    \"text-heading-5-font-size\": scale(22),\n    \"text-heading-5-font-weight\": \"800\",\n    \"text-heading-5-font-family\": \"$text-font-family\",\n\n    \"text-heading-6-font-size\": scale(18),\n    \"text-heading-6-font-weight\": \"800\",\n    \"text-heading-6-font-family\": \"$text-font-family\",\n\n    \"text-subtitle-1-font-size\": scale(15),\n    \"text-subtitle-1-font-weight\": \"600\",\n    \"text-subtitle-1-font-family\": \"$text-font-family\",\n\n    \"text-subtitle-2-font-size\": scale(13),\n    \"text-subtitle-2-font-weight\": \"600\",\n    \"text-subtitle-2-font-family\": \"$text-font-family\",\n\n    \"text-paragraph-1-font-size\": scale(15),\n    \"text-paragraph-1-font-weight\": \"400\",\n    \"text-paragraph-1-font-family\": \"$text-font-family\",\n\n    \"text-paragraph-2-font-size\": scale(13),\n    \"text-paragraph-2-font-weight\": \"400\",\n    \"text-paragraph-2-font-family\": \"$text-font-family\",\n\n    \"text-caption-1-font-size\": scale(12),\n    \"text-caption-1-font-weight\": \"400\",\n    \"text-caption-1-font-family\": \"$text-font-family\",\n\n    \"text-caption-2-font-size\": scale(12),\n    \"text-caption-2-font-weight\": \"600\",\n    \"text-caption-2-font-family\": \"$text-font-family\",\n\n    \"text-label-font-size\": scale(12),\n    \"text-label-font-weight\": \"800\",\n    \"text-label-font-family\": \"$text-font-family\",\n\n    \"size-tiny\": scale(24),\n    \"size-small\": scale(32),\n    \"size-medium\": scale(40),\n    \"size-large\": scale(48),\n    \"size-giant\": scale(56),\n\n    \"border-radius\": scale(4),\n    \"border-width\": scale(1),\n  },\n  components: {\n    Avatar: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          roundCoefficient: {\n            type: \"number\",\n          },\n          width: {\n            type: \"number\",\n          },\n          height: {\n            type: \"number\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n        },\n        variantGroups: {\n          shape: {\n            round: {\n              default: true,\n            },\n            rounded: {\n              default: false,\n            },\n            square: {\n              default: false,\n            },\n          },\n          size: {\n            tiny: {\n              default: false,\n            },\n            small: {\n              default: false,\n            },\n            medium: {\n              default: false,\n            },\n            large: {\n              default: true,\n            },\n            giant: {\n              default: false,\n            },\n          },\n        },\n        states: {},\n      },\n      appearances: {\n        default: {\n          mapping: {},\n          variantGroups: {\n            shape: {\n              round: {\n                roundCoefficient: 0.5,\n              },\n              rounded: {\n                roundCoefficient: 0.3,\n              },\n              square: {\n                roundCoefficient: 0.0,\n              },\n            },\n            size: {\n              tiny: {\n                width: \"size-tiny\",\n                height: \"size-tiny\",\n              },\n              small: {\n                width: \"size-small\",\n                height: \"size-small\",\n              },\n              medium: {\n                width: \"size-medium\",\n                height: \"size-medium\",\n              },\n              large: {\n                width: \"size-large\",\n                height: \"size-large\",\n              },\n              giant: {\n                width: \"size-giant\",\n                height: \"size-giant\",\n              },\n            },\n          },\n        },\n      },\n    },\n    BottomNavigationTab: {\n      meta: {\n        scope: \"mobile\",\n        parameters: {\n          paddingHorizontal: {\n            type: \"number\",\n          },\n          paddingVertical: {\n            type: \"number\",\n          },\n          iconMarginVertical: {\n            type: \"number\",\n          },\n          iconWidth: {\n            type: \"number\",\n          },\n          iconHeight: {\n            type: \"number\",\n          },\n          iconTintColor: {\n            type: \"string\",\n          },\n          textMarginVertical: {\n            type: \"number\",\n          },\n          textColor: {\n            type: \"string\",\n          },\n          textFontFamily: {\n            type: \"string\",\n          },\n          textFontSize: {\n            type: \"number\",\n          },\n          textFontWeight: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n        },\n        variantGroups: {},\n        states: {\n          selected: {\n            default: false,\n            priority: 0,\n            scope: \"mobile\",\n          },\n          hover: {\n            default: false,\n            priority: 1,\n            scope: \"mobile\",\n          },\n          focused: {\n            default: false,\n            priority: 2,\n            scope: \"mobile\",\n          },\n        },\n      },\n      appearances: {\n        default: {\n          mapping: {\n            textMarginVertical: 2,\n            textFontSize: \"text-caption-2-font-size\",\n            textFontWeight: \"text-caption-2-font-weight\",\n            textFontFamily: \"text-caption-2-font-family\",\n            textColor: \"text-hint-color\",\n            iconWidth: 24,\n            iconHeight: 24,\n            iconMarginVertical: 2,\n            iconTintColor: \"text-hint-color\",\n            state: {\n              hover: {\n                textColor: \"text-primary-hover-color\",\n                iconTintColor: \"text-primary-hover-color\",\n              },\n              selected: {\n                textColor: \"text-primary-color\",\n                iconTintColor: \"text-primary-color\",\n              },\n            },\n          },\n        },\n      },\n    },\n    BottomNavigation: {\n      meta: {\n        scope: \"mobile\",\n        parameters: {\n          minHeight: {\n            type: \"number\",\n          },\n          paddingVertical: {\n            type: \"number\",\n          },\n          backgroundColor: {\n            type: \"string\",\n          },\n          borderTopColor: {\n            type: \"string\",\n          },\n          borderTopWidth: {\n            type: \"number\",\n          },\n          indicatorHeight: {\n            type: \"number\",\n          },\n          indicatorBackgroundColor: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n          noIndicator: {\n            default: false,\n          },\n        },\n        variantGroups: {},\n        states: {},\n      },\n      appearances: {\n        default: {\n          mapping: {\n            minHeight: 56,\n            paddingVertical: 4,\n            backgroundColor: \"background-basic-color-1\",\n            indicatorHeight: 4,\n            indicatorBackgroundColor: \"color-primary-default\",\n          },\n        },\n        noIndicator: {\n          mapping: {\n            indicatorHeight: 0,\n            indicatorBackgroundColor: \"transparent\",\n          },\n        },\n      },\n    },\n    Button: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          minWidth: {\n            type: \"number\",\n          },\n          minHeight: {\n            type: \"number\",\n          },\n          paddingHorizontal: {\n            type: \"number\",\n          },\n          paddingVertical: {\n            type: \"number\",\n          },\n          borderRadius: {\n            type: \"number\",\n          },\n          borderColor: {\n            type: \"string\",\n          },\n          borderWidth: {\n            type: \"number\",\n          },\n          backgroundColor: {\n            type: \"string\",\n          },\n          textMarginHorizontal: {\n            type: \"number\",\n          },\n          textFontFamily: {\n            type: \"string\",\n          },\n          textFontSize: {\n            type: \"number\",\n          },\n          textFontWeight: {\n            type: \"string\",\n          },\n          textColor: {\n            type: \"string\",\n          },\n          iconWidth: {\n            type: \"number\",\n          },\n          iconHeight: {\n            type: \"number\",\n          },\n          iconTintColor: {\n            type: \"string\",\n          },\n          iconMarginHorizontal: {\n            type: \"number\",\n          },\n        },\n        appearances: {\n          filled: {\n            default: true,\n          },\n          outline: {\n            default: false,\n          },\n          ghost: {\n            default: false,\n          },\n        },\n        variantGroups: {\n          status: {\n            basic: {\n              default: false,\n            },\n            primary: {\n              default: true,\n            },\n            success: {\n              default: false,\n            },\n            info: {\n              default: false,\n            },\n            warning: {\n              default: false,\n            },\n            danger: {\n              default: false,\n            },\n            control: {\n              default: false,\n            },\n          },\n          size: {\n            tiny: {\n              default: false,\n            },\n            small: {\n              default: false,\n            },\n            medium: {\n              default: false,\n            },\n            large: {\n              default: true,\n            },\n            giant: {\n              default: false,\n            },\n          },\n        },\n        states: {\n          hover: {\n            default: false,\n            priority: 0,\n            scope: \"all\",\n          },\n          disabled: {\n            default: false,\n            priority: 1,\n            scope: \"all\",\n          },\n          active: {\n            default: false,\n            priority: 2,\n            scope: \"all\",\n          },\n          focused: {\n            default: false,\n            priority: 3,\n            scope: \"mobile\",\n          },\n        },\n      },\n      appearances: {\n        filled: {\n          mapping: {\n            textFontFamily: \"text-font-family\",\n            iconMarginHorizontal: 4,\n          },\n          variantGroups: {\n            status: {\n              basic: {\n                borderColor: \"color-basic-default-border\",\n                backgroundColor: \"color-basic-default\",\n                textColor: \"color-basic-800\",\n                iconTintColor: \"color-basic-800\",\n                state: {\n                  focused: {\n                    borderColor: \"color-basic-focus-border\",\n                    backgroundColor: \"color-basic-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-basic-hover-border\",\n                    backgroundColor: \"color-basic-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-basic-active-border\",\n                    backgroundColor: \"color-basic-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-basic-disabled-border\",\n                    backgroundColor: \"color-basic-disabled\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              primary: {\n                borderColor: \"color-primary-default-border\",\n                backgroundColor: \"color-primary-default\",\n                textColor: \"text-control-color\",\n                iconTintColor: \"text-control-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-primary-focus-border\",\n                    backgroundColor: \"color-primary-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-primary-hover-border\",\n                    backgroundColor: \"color-primary-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-primary-active-border\",\n                    backgroundColor: \"color-primary-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-primary-disabled-border\",\n                    backgroundColor: \"color-primary-disabled\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              success: {\n                borderColor: \"color-success-default-border\",\n                backgroundColor: \"color-success-default\",\n                textColor: \"text-control-color\",\n                iconTintColor: \"text-control-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-success-focus-border\",\n                    backgroundColor: \"color-success-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-success-hover-border\",\n                    backgroundColor: \"color-success-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-success-active-border\",\n                    backgroundColor: \"color-success-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-success-disabled-border\",\n                    backgroundColor: \"color-success-disabled\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              info: {\n                borderColor: \"color-info-default-border\",\n                backgroundColor: \"color-info-default\",\n                textColor: \"text-control-color\",\n                iconTintColor: \"text-control-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-info-focus-border\",\n                    backgroundColor: \"color-info-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-info-hover-border\",\n                    backgroundColor: \"color-info-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-info-active-border\",\n                    backgroundColor: \"color-info-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-info-disabled-border\",\n                    backgroundColor: \"color-info-disabled\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              warning: {\n                borderColor: \"color-warning-default-border\",\n                backgroundColor: \"color-warning-default\",\n                textColor: \"text-control-color\",\n                iconTintColor: \"text-control-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-warning-focus-border\",\n                    backgroundColor: \"color-warning-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-warning-hover-border\",\n                    backgroundColor: \"color-warning-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-warning-active-border\",\n                    backgroundColor: \"color-warning-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-warning-disabled-border\",\n                    backgroundColor: \"color-warning-disabled\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              danger: {\n                borderColor: \"color-danger-default-border\",\n                backgroundColor: \"color-danger-default\",\n                textColor: \"text-control-color\",\n                iconTintColor: \"text-control-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-danger-focus-border\",\n                    backgroundColor: \"color-danger-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-danger-hover-border\",\n                    backgroundColor: \"color-danger-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-danger-active-border\",\n                    backgroundColor: \"color-danger-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-danger-disabled-border\",\n                    backgroundColor: \"color-danger-disabled\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              control: {\n                borderColor: \"color-control-default-border\",\n                backgroundColor: \"color-control-default\",\n                textColor: \"color-basic-800\",\n                iconTintColor: \"color-basic-800\",\n                state: {\n                  focused: {\n                    borderColor: \"color-control-focus-border\",\n                    backgroundColor: \"color-control-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-control-hover-border\",\n                    backgroundColor: \"color-control-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-control-active-border\",\n                    backgroundColor: \"color-control-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-control-disabled-border\",\n                    backgroundColor: \"color-control-disabled\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n            },\n            size: {\n              tiny: {\n                minWidth: \"size-tiny\",\n                minHeight: \"size-tiny\",\n                borderRadius: \"border-radius\",\n                borderWidth: \"border-width\",\n                paddingHorizontal: 6,\n                paddingVertical: 6,\n                textMarginHorizontal: 6,\n                textFontSize: 10,\n                textFontWeight: \"bold\",\n                iconWidth: 12,\n                iconHeight: 12,\n                iconMarginHorizontal: 6,\n              },\n              small: {\n                minWidth: \"size-small\",\n                minHeight: \"size-small\",\n                borderRadius: \"border-radius\",\n                borderWidth: \"border-width\",\n                paddingHorizontal: 8,\n                paddingVertical: 8,\n                textMarginHorizontal: 8,\n                textFontSize: 12,\n                textFontWeight: \"bold\",\n                iconWidth: 16,\n                iconHeight: 16,\n                iconMarginHorizontal: 8,\n              },\n              medium: {\n                minWidth: \"size-medium\",\n                minHeight: \"size-medium\",\n                borderRadius: \"border-radius\",\n                borderWidth: \"border-width\",\n                paddingHorizontal: 10,\n                paddingVertical: 12,\n                textMarginHorizontal: 10,\n                textFontSize: 14,\n                textFontWeight: \"bold\",\n                iconWidth: 20,\n                iconHeight: 20,\n                iconMarginHorizontal: 10,\n              },\n              large: {\n                minWidth: \"size-large\",\n                minHeight: \"size-large\",\n                borderRadius: \"border-radius\",\n                borderWidth: \"border-width\",\n                paddingHorizontal: 10,\n                paddingVertical: 14,\n                textMarginHorizontal: 10,\n                textFontSize: 16,\n                textFontWeight: \"bold\",\n                iconWidth: 24,\n                iconHeight: 24,\n                iconMarginHorizontal: 10,\n              },\n              giant: {\n                minWidth: \"size-giant\",\n                minHeight: \"size-giant\",\n                borderRadius: \"border-radius\",\n                borderWidth: \"border-width\",\n                paddingHorizontal: 12,\n                paddingVertical: 16,\n                textMarginHorizontal: 12,\n                textFontSize: 18,\n                textFontWeight: \"bold\",\n                iconWidth: 24,\n                iconHeight: 24,\n                iconMarginHorizontal: 12,\n              },\n            },\n          },\n        },\n        outline: {\n          mapping: {},\n          variantGroups: {\n            status: {\n              basic: {\n                borderColor: \"color-basic-transparent-default-border\",\n                backgroundColor: \"color-basic-transparent-default\",\n                textColor: \"text-hint-color\",\n                iconTintColor: \"text-hint-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-basic-transparent-focus-border\",\n                    backgroundColor: \"color-basic-transparent-focus\",\n                    textColor: \"text-hint-color\",\n                    iconTintColor: \"text-hint-color\",\n                  },\n                  hover: {\n                    borderColor: \"color-basic-transparent-hover-border\",\n                    backgroundColor: \"color-basic-transparent-hover\",\n                    textColor: \"text-hint-color\",\n                    iconTintColor: \"text-hint-color\",\n                  },\n                  active: {\n                    borderColor: \"color-basic-transparent-active-border\",\n                    backgroundColor: \"color-basic-transparent-active\",\n                    textColor: \"text-hint-color\",\n                    iconTintColor: \"text-hint-color\",\n                  },\n                  disabled: {\n                    borderColor: \"color-basic-transparent-disabled-border\",\n                    backgroundColor: \"color-basic-transparent-disabled\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              primary: {\n                borderColor: \"color-primary-transparent-default-border\",\n                backgroundColor: \"color-primary-transparent-default\",\n                textColor: \"text-primary-color\",\n                iconTintColor: \"text-primary-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-primary-transparent-focus-border\",\n                    backgroundColor: \"color-primary-transparent-focus\",\n                    textColor: \"text-primary-color\",\n                    iconTintColor: \"text-primary-color\",\n                  },\n                  hover: {\n                    borderColor: \"color-primary-transparent-hover-border\",\n                    backgroundColor: \"color-primary-transparent-hover\",\n                    textColor: \"text-primary-color\",\n                    iconTintColor: \"text-primary-color\",\n                  },\n                  active: {\n                    borderColor: \"color-primary-transparent-active-border\",\n                    backgroundColor: \"color-primary-transparent-active\",\n                    textColor: \"text-primary-color\",\n                    iconTintColor: \"text-primary-color\",\n                  },\n                  disabled: {\n                    borderColor: \"color-primary-transparent-disabled-border\",\n                    backgroundColor: \"color-primary-transparent-disabled\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              success: {\n                borderColor: \"color-success-transparent-default-border\",\n                backgroundColor: \"color-success-transparent-default\",\n                textColor: \"text-success-color\",\n                iconTintColor: \"text-success-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-success-transparent-focus-border\",\n                    backgroundColor: \"color-success-transparent-focus\",\n                    textColor: \"text-success-color\",\n                    iconTintColor: \"text-success-color\",\n                  },\n                  hover: {\n                    borderColor: \"color-success-transparent-hover-border\",\n                    backgroundColor: \"color-success-transparent-hover\",\n                    textColor: \"text-success-color\",\n                    iconTintColor: \"text-success-color\",\n                  },\n                  active: {\n                    borderColor: \"color-success-transparent-active-border\",\n                    backgroundColor: \"color-success-transparent-active\",\n                    textColor: \"text-success-color\",\n                    iconTintColor: \"text-success-color\",\n                  },\n                  disabled: {\n                    borderColor: \"color-success-transparent-disabled-border\",\n                    backgroundColor: \"color-success-transparent-disabled\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              info: {\n                borderColor: \"color-info-transparent-default-border\",\n                backgroundColor: \"color-info-transparent-default\",\n                textColor: \"text-info-color\",\n                iconTintColor: \"text-info-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-info-transparent-focus-border\",\n                    backgroundColor: \"color-info-transparent-focus\",\n                    textColor: \"text-info-color\",\n                    iconTintColor: \"text-info-color\",\n                  },\n                  hover: {\n                    borderColor: \"color-info-transparent-hover-border\",\n                    backgroundColor: \"color-info-transparent-hover\",\n                    textColor: \"text-info-color\",\n                    iconTintColor: \"text-info-color\",\n                  },\n                  active: {\n                    borderColor: \"color-info-transparent-active-border\",\n                    backgroundColor: \"color-info-transparent-active\",\n                    textColor: \"text-info-color\",\n                    iconTintColor: \"text-info-color\",\n                  },\n                  disabled: {\n                    borderColor: \"color-info-transparent-disabled-border\",\n                    backgroundColor: \"color-info-transparent-disabled\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              warning: {\n                borderColor: \"color-warning-transparent-default-border\",\n                backgroundColor: \"color-warning-transparent-default\",\n                textColor: \"text-warning-color\",\n                iconTintColor: \"text-warning-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-warning-transparent-focus-border\",\n                    backgroundColor: \"color-warning-transparent-focus\",\n                    textColor: \"text-warning-color\",\n                    iconTintColor: \"text-warning-color\",\n                  },\n                  hover: {\n                    borderColor: \"color-warning-transparent-hover-border\",\n                    backgroundColor: \"color-warning-transparent-hover\",\n                    textColor: \"text-warning-color\",\n                    iconTintColor: \"text-warning-color\",\n                  },\n                  active: {\n                    borderColor: \"color-warning-transparent-active-border\",\n                    backgroundColor: \"color-warning-transparent-active\",\n                    textColor: \"text-warning-color\",\n                    iconTintColor: \"text-warning-color\",\n                  },\n                  disabled: {\n                    borderColor: \"color-warning-transparent-disabled-border\",\n                    backgroundColor: \"color-warning-transparent-disabled\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              danger: {\n                borderColor: \"color-danger-transparent-default-border\",\n                backgroundColor: \"color-danger-transparent-default\",\n                textColor: \"text-danger-color\",\n                iconTintColor: \"text-danger-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-danger-transparent-focus-border\",\n                    backgroundColor: \"color-danger-transparent-focus\",\n                    textColor: \"text-danger-color\",\n                    iconTintColor: \"text-danger-color\",\n                  },\n                  hover: {\n                    borderColor: \"color-danger-transparent-hover-border\",\n                    backgroundColor: \"color-danger-transparent-hover\",\n                    textColor: \"text-danger-color\",\n                    iconTintColor: \"text-danger-color\",\n                  },\n                  active: {\n                    borderColor: \"color-danger-transparent-active-border\",\n                    backgroundColor: \"color-danger-transparent-active\",\n                    textColor: \"text-danger-color\",\n                    iconTintColor: \"text-danger-color\",\n                  },\n                  disabled: {\n                    borderColor: \"color-danger-transparent-disabled-border\",\n                    backgroundColor: \"color-danger-transparent-disabled\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              control: {\n                borderColor: \"color-control-transparent-default-border\",\n                backgroundColor: \"color-control-transparent-default\",\n                textColor: \"text-control-color\",\n                iconTintColor: \"text-control-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-control-transparent-focus-border\",\n                    backgroundColor: \"color-control-transparent-focus\",\n                    textColor: \"text-control-color\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                  hover: {\n                    borderColor: \"color-control-transparent-hover-border\",\n                    backgroundColor: \"color-control-transparent-hover\",\n                    textColor: \"text-control-color\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                  active: {\n                    borderColor: \"color-control-transparent-active-border\",\n                    backgroundColor: \"color-control-transparent-active\",\n                    textColor: \"text-control-color\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                  disabled: {\n                    borderColor: \"color-control-transparent-disabled-border\",\n                    backgroundColor: \"color-control-transparent-disabled\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n            },\n          },\n        },\n        ghost: {\n          mapping: {},\n          variantGroups: {\n            status: {\n              basic: {\n                borderColor: \"transparent\",\n                backgroundColor: \"transparent\",\n                textColor: \"text-hint-color\",\n                iconTintColor: \"text-hint-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-basic-transparent-500\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-hint-color\",\n                    iconTintColor: \"text-hint-color\",\n                  },\n                  hover: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-100\",\n                    textColor: \"text-hint-color\",\n                    iconTintColor: \"text-hint-color\",\n                  },\n                  active: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-hint-color\",\n                    iconTintColor: \"text-hint-color\",\n                  },\n                  disabled: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              primary: {\n                borderColor: \"transparent\",\n                backgroundColor: \"transparent\",\n                textColor: \"text-primary-color\",\n                iconTintColor: \"text-primary-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-basic-transparent-500\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-primary-color\",\n                    iconTintColor: \"text-primary-color\",\n                  },\n                  hover: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-100\",\n                    textColor: \"text-primary-color\",\n                    iconTintColor: \"text-primary-color\",\n                  },\n                  active: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-primary-color\",\n                    iconTintColor: \"text-primary-color\",\n                  },\n                  disabled: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              success: {\n                borderColor: \"transparent\",\n                backgroundColor: \"transparent\",\n                textColor: \"text-success-color\",\n                iconTintColor: \"text-success-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-basic-transparent-500\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-success-color\",\n                    iconTintColor: \"text-success-color\",\n                  },\n                  hover: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-100\",\n                    textColor: \"text-success-color\",\n                    iconTintColor: \"text-success-color\",\n                  },\n                  active: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-success-color\",\n                    iconTintColor: \"text-success-color\",\n                  },\n                  disabled: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              info: {\n                borderColor: \"transparent\",\n                backgroundColor: \"transparent\",\n                textColor: \"text-info-color\",\n                iconTintColor: \"text-info-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-basic-transparent-500\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-info-color\",\n                    iconTintColor: \"text-info-color\",\n                  },\n                  hover: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-100\",\n                    textColor: \"text-info-color\",\n                    iconTintColor: \"text-info-color\",\n                  },\n                  active: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-info-color\",\n                    iconTintColor: \"text-info-color\",\n                  },\n                  disabled: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              warning: {\n                borderColor: \"transparent\",\n                backgroundColor: \"transparent\",\n                textColor: \"text-warning-color\",\n                iconTintColor: \"text-warning-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-basic-transparent-500\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-info-color\",\n                    iconTintColor: \"text-info-color\",\n                  },\n                  hover: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-100\",\n                    textColor: \"text-warning-color\",\n                    iconTintColor: \"text-warning-color\",\n                  },\n                  active: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-warning-color\",\n                    iconTintColor: \"text-warning-color\",\n                  },\n                  disabled: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              danger: {\n                borderColor: \"transparent\",\n                backgroundColor: \"transparent\",\n                textColor: \"text-danger-color\",\n                iconTintColor: \"text-danger-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-basic-transparent-500\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-danger-color\",\n                    iconTintColor: \"text-danger-color\",\n                  },\n                  hover: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-100\",\n                    textColor: \"text-danger-color\",\n                    iconTintColor: \"text-danger-color\",\n                  },\n                  active: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-danger-color\",\n                    iconTintColor: \"text-danger-color\",\n                  },\n                  disabled: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              control: {\n                borderColor: \"transparent\",\n                backgroundColor: \"transparent\",\n                textColor: \"text-control-color\",\n                iconTintColor: \"text-control-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-basic-transparent-500\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-control-color\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                  hover: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-100\",\n                    textColor: \"text-control-color\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                  active: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-control-color\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                  disabled: {\n                    borderColor: \"transparent\",\n                    backgroundColor: \"color-basic-transparent-200\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n    ButtonGroup: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          borderRadius: {\n            type: \"number\",\n          },\n          borderWidth: {\n            type: \"number\",\n          },\n          borderColor: {\n            type: \"string\",\n          },\n          dividerBackgroundColor: {\n            type: \"string\",\n          },\n          dividerWidth: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          filled: {\n            default: true,\n          },\n          outline: {\n            default: false,\n          },\n        },\n        variantGroups: {\n          status: {\n            basic: {\n              default: false,\n            },\n            primary: {\n              default: true,\n            },\n            success: {\n              default: false,\n            },\n            info: {\n              default: false,\n            },\n            warning: {\n              default: false,\n            },\n            danger: {\n              default: false,\n            },\n            control: {\n              default: false,\n            },\n          },\n          size: {\n            tiny: {\n              default: false,\n            },\n            small: {\n              default: false,\n            },\n            medium: {\n              default: false,\n            },\n            large: {\n              default: true,\n            },\n            giant: {\n              default: false,\n            },\n          },\n        },\n        states: {},\n      },\n      appearances: {\n        filled: {\n          mapping: {\n            borderColor: \"transparent\",\n            dividerWidth: 1,\n          },\n          variantGroups: {\n            size: {\n              tiny: {\n                borderRadius: \"border-radius\",\n                borderWidth: \"border-width\",\n              },\n              small: {\n                borderRadius: \"border-radius\",\n                borderWidth: \"border-width\",\n              },\n              medium: {\n                borderRadius: \"border-radius\",\n                borderWidth: \"border-width\",\n              },\n              large: {\n                borderRadius: \"border-radius\",\n                borderWidth: \"border-width\",\n              },\n              giant: {\n                borderRadius: \"border-radius\",\n                borderWidth: \"border-width\",\n              },\n            },\n            status: {\n              basic: {\n                dividerBackgroundColor: \"border-basic-color-2\",\n              },\n              primary: {\n                dividerBackgroundColor: \"border-primary-color-2\",\n              },\n              success: {\n                dividerBackgroundColor: \"border-success-color-2\",\n              },\n              info: {\n                dividerBackgroundColor: \"border-info-color-2\",\n              },\n              warning: {\n                dividerBackgroundColor: \"border-warning-color-2\",\n              },\n              danger: {\n                dividerBackgroundColor: \"border-danger-color-2\",\n              },\n              control: {\n                dividerBackgroundColor: \"color-basic-200\",\n              },\n            },\n          },\n        },\n        outline: {\n          mapping: {},\n          variantGroups: {\n            status: {\n              basic: {\n                borderColor: \"color-basic-default-border\",\n                dividerBackgroundColor: \"color-basic-default\",\n              },\n              primary: {\n                borderColor: \"color-primary-default-border\",\n                dividerBackgroundColor: \"color-primary-default\",\n              },\n              success: {\n                borderColor: \"color-success-default-border\",\n                dividerBackgroundColor: \"color-success-default\",\n              },\n              info: {\n                borderColor: \"color-info-default-border\",\n                dividerBackgroundColor: \"color-info-default\",\n              },\n              warning: {\n                borderColor: \"color-warning-default-border\",\n                dividerBackgroundColor: \"color-warning-default\",\n              },\n              danger: {\n                borderColor: \"color-danger-default-border\",\n                dividerBackgroundColor: \"color-danger-default\",\n              },\n              control: {\n                borderColor: \"color-control-default-border\",\n                dividerBackgroundColor: \"color-control-default\",\n              },\n            },\n          },\n        },\n      },\n    },\n    Card: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          backgroundColor: {\n            type: \"string\",\n          },\n          borderRadius: {\n            type: \"number\",\n          },\n          borderColor: {\n            type: \"string\",\n          },\n          borderWidth: {\n            type: \"number\",\n          },\n          bodyPaddingHorizontal: {\n            type: \"number\",\n          },\n          bodyPaddingVertical: {\n            type: \"number\",\n          },\n          headerPaddingHorizontal: {\n            type: \"number\",\n          },\n          headerPaddingVertical: {\n            type: \"number\",\n          },\n          footerPaddingHorizontal: {\n            type: \"number\",\n          },\n          footerPaddingVertical: {\n            type: \"number\",\n          },\n          accentBackgroundColor: {\n            type: \"string\",\n          },\n          accentHeight: {\n            type: \"number\",\n          },\n        },\n        appearances: {\n          filled: {\n            default: false,\n          },\n          outline: {\n            default: true,\n          },\n        },\n        variantGroups: {\n          status: {\n            basic: {\n              default: false,\n            },\n            primary: {\n              default: false,\n            },\n            success: {\n              default: false,\n            },\n            info: {\n              default: false,\n            },\n            warning: {\n              default: false,\n            },\n            danger: {\n              default: false,\n            },\n            control: {\n              default: false,\n            },\n          },\n        },\n        states: {\n          active: {\n            default: false,\n            priority: 0,\n            scope: \"all\",\n          },\n        },\n      },\n      appearances: {\n        outline: {\n          mapping: {\n            backgroundColor: \"background-basic-color-1\",\n            borderRadius: \"border-radius\",\n            borderColor: \"border-basic-color-4\",\n            borderWidth: 0,\n            accentHeight: 0,\n            bodyPaddingHorizontal: 24,\n            bodyPaddingVertical: 16,\n            headerPaddingHorizontal: 24,\n            headerPaddingVertical: 16,\n            footerPaddingHorizontal: 24,\n            footerPaddingVertical: 16,\n            state: {\n              active: {\n                backgroundColor: \"background-basic-color-2\",\n              },\n            },\n          },\n          variantGroups: {\n            status: {\n              basic: {\n                accentHeight: 4,\n                accentBackgroundColor: \"color-basic-default\",\n              },\n              primary: {\n                accentHeight: 4,\n                accentBackgroundColor: \"color-primary-default\",\n              },\n              success: {\n                accentHeight: 4,\n                accentBackgroundColor: \"color-success-default\",\n              },\n              info: {\n                accentHeight: 4,\n                accentBackgroundColor: \"color-info-default\",\n              },\n              warning: {\n                accentHeight: 4,\n                accentBackgroundColor: \"color-warning-default\",\n              },\n              danger: {\n                accentHeight: 4,\n                accentBackgroundColor: \"color-danger-default\",\n              },\n              control: {\n                accentHeight: 4,\n                accentBackgroundColor: \"color-control-default\",\n              },\n            },\n          },\n        },\n        filled: {\n          mapping: {\n            borderWidth: 0,\n            borderColor: \"transparent\",\n          },\n        },\n      },\n    },\n    Calendar: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          width: {\n            type: \"number\",\n          },\n          paddingVertical: {\n            type: \"number\",\n          },\n          borderColor: {\n            type: \"string\",\n          },\n          borderWidth: {\n            type: \"number\",\n          },\n          borderRadius: {\n            type: \"number\",\n          },\n          headerPaddingHorizontal: {\n            type: \"number\",\n          },\n          headerPaddingVertical: {\n            type: \"number\",\n          },\n          dividerMarginVertical: {\n            type: \"number\",\n          },\n          titleFontSize: {\n            type: \"number\",\n          },\n          titleFontWeight: {\n            type: \"string\",\n          },\n          titleColor: {\n            type: \"string\",\n          },\n          titleFontFamily: {\n            type: \"string\",\n          },\n          iconWidth: {\n            type: \"number\",\n          },\n          iconHeight: {\n            type: \"number\",\n          },\n          iconTintColor: {\n            type: \"string\",\n          },\n          weekdayTextFontSize: {\n            type: \"number\",\n          },\n          weekdayTextFontWeight: {\n            type: \"string\",\n          },\n          weekdayTextColor: {\n            type: \"string\",\n          },\n          weekdayTextFontFamily: {\n            type: \"string\",\n          },\n          rowMinHeight: {\n            type: \"number\",\n          },\n          rowMarginHorizontal: {\n            type: \"number\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n        },\n        variantGroups: {},\n        states: {},\n      },\n      appearances: {\n        default: {\n          mapping: {\n            width: 344,\n            borderRadius: \"border-radius\",\n            borderWidth: \"border-width\",\n            borderColor: \"border-basic-color-4\",\n            paddingVertical: 8,\n            headerPaddingHorizontal: 10,\n            headerPaddingVertical: 4,\n            titleFontSize: \"text-heading-6-font-size\",\n            titleFontWeight: \"text-heading-6-font-weight\",\n            titleFontFamily: \"text-heading-6-font-family\",\n            titleColor: \"text-basic-color\",\n            iconWidth: 24,\n            iconHeight: 24,\n            iconTintColor: \"text-basic-color\",\n            weekdayTextFontSize: \"text-subtitle-1-font-size\",\n            weekdayTextFontWeight: \"text-subtitle-1-font-weight\",\n            weekdayTextFontFamily: \"text-subtitle-1-font-family\",\n            weekdayTextColor: \"text-hint-color\",\n            dividerMarginVertical: 4,\n            rowMinHeight: 45,\n            rowMarginHorizontal: 10,\n          },\n        },\n      },\n    },\n    CalendarCell: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          paddingHorizontal: {\n            type: \"number\",\n          },\n          paddingVertical: {\n            type: \"number\",\n          },\n          backgroundColor: {\n            type: \"string\",\n          },\n          borderRadius: {\n            type: \"string\",\n          },\n          contentBorderWidth: {\n            type: \"number\",\n          },\n          contentBorderRadius: {\n            type: \"string\",\n          },\n          contentBorderColor: {\n            type: \"string\",\n          },\n          contentBackgroundColor: {\n            type: \"string\",\n          },\n          contentTextColor: {\n            type: \"string\",\n          },\n          contentTextFontSize: {\n            type: \"number\",\n          },\n          contentTextFontWeight: {\n            type: \"number\",\n          },\n          contentTextFontFamily: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n        },\n        variantGroups: {},\n        states: {\n          bounding: {\n            scope: \"all\",\n            priority: 0,\n            default: false,\n          },\n          today: {\n            scope: \"all\",\n            priority: 1,\n            default: false,\n          },\n          disabled: {\n            scope: \"all\",\n            priority: 2,\n            default: false,\n          },\n          selected: {\n            scope: \"all\",\n            priority: 3,\n            default: false,\n          },\n          range: {\n            scope: \"all\",\n            priority: 5,\n            default: false,\n          },\n        },\n      },\n      appearances: {\n        default: {\n          mapping: {\n            paddingHorizontal: 0,\n            paddingVertical: 0,\n            borderRadius: 0,\n            backgroundColor: \"transparent\",\n            contentBorderRadius: \"border-radius\",\n            contentBorderWidth: \"border-width\",\n            contentBorderColor: \"transparent\",\n            contentTextFontSize: \"text-subtitle-1-font-size\",\n            contentTextFontWeight: \"text-subtitle-1-font-weight\",\n            contentTextFontFamily: \"text-subtitle-1-font-family\",\n            contentTextColor: \"text-basic-color\",\n            state: {\n              bounding: {\n                contentTextColor: \"text-hint-color\",\n              },\n              selected: {\n                contentBorderColor: \"color-primary-default-border\",\n                contentBackgroundColor: \"color-primary-default\",\n                contentTextColor: \"text-control-color\",\n              },\n              disabled: {\n                contentTextColor: \"text-disabled-color\",\n              },\n              today: {\n                contentBorderColor: \"color-primary-transparent-default-border\",\n                contentBackgroundColor: \"color-primary-transparent-default\",\n              },\n              range: {\n                borderRadius: \"border-radius\",\n                backgroundColor: \"color-primary-default\",\n                contentTextColor: \"text-control-color\",\n              },\n              \"today.range\": {\n                contentBorderColor: \"color-control-transparent-default-border\",\n                contentBackgroundColor: \"color-control-transparent-default\",\n              },\n            },\n          },\n        },\n      },\n    },\n    CheckBox: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          width: {\n            type: \"number\",\n          },\n          height: {\n            type: \"number\",\n          },\n          borderWidth: {\n            type: \"number\",\n          },\n          borderRadius: {\n            type: \"number\",\n          },\n          borderColor: {\n            type: \"string\",\n          },\n          backgroundColor: {\n            type: \"string\",\n          },\n          textMarginHorizontal: {\n            type: \"number\",\n          },\n          textColor: {\n            type: \"string\",\n          },\n          textFontFamily: {\n            type: \"string\",\n          },\n          textFontSize: {\n            type: \"number\",\n          },\n          textFontWeight: {\n            type: \"string\",\n          },\n          iconWidth: {\n            type: \"number\",\n          },\n          iconHeight: {\n            type: \"number\",\n          },\n          iconTintColor: {\n            type: \"string\",\n          },\n          outlineWidth: {\n            type: \"number\",\n          },\n          outlineHeight: {\n            type: \"number\",\n          },\n          outlineBorderRadius: {\n            type: \"number\",\n          },\n          outlineBackgroundColor: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n        },\n        variantGroups: {\n          status: {\n            primary: {\n              default: false,\n            },\n            success: {\n              default: false,\n            },\n            warning: {\n              default: false,\n            },\n            danger: {\n              default: false,\n            },\n            info: {\n              default: false,\n            },\n            basic: {\n              default: true,\n            },\n            control: {\n              default: false,\n            },\n          },\n        },\n        states: {\n          checked: {\n            default: false,\n            priority: 0,\n            scope: \"all\",\n          },\n          hover: {\n            default: false,\n            priority: 1,\n            scope: \"all\",\n          },\n          disabled: {\n            default: false,\n            priority: 2,\n            scope: \"all\",\n          },\n          active: {\n            default: false,\n            priority: 3,\n            scope: \"all\",\n          },\n          indeterminate: {\n            default: false,\n            priority: 4,\n            scope: \"all\",\n          },\n          focused: {\n            default: false,\n            priority: 5,\n            scope: \"all\",\n          },\n        },\n      },\n      appearances: {\n        default: {\n          mapping: {\n            width: 20,\n            height: 20,\n            borderRadius: 3,\n            borderWidth: \"border-width\",\n            outlineWidth: 32,\n            outlineHeight: 32,\n            outlineBorderRadius: 6,\n            outlineBackgroundColor: \"transparent\",\n            textFontSize: \"text-subtitle-2-font-size\",\n            textFontWeight: \"text-subtitle-2-font-weight\",\n            textFontFamily: \"text-subtitle-2-font-family\",\n            textMarginHorizontal: 12,\n            iconWidth: 12,\n            iconHeight: 12,\n            iconTintColor: \"transparent\",\n          },\n          variantGroups: {\n            status: {\n              basic: {\n                borderColor: \"color-basic-transparent-default-border\",\n                backgroundColor: \"color-basic-transparent-default\",\n                textColor: \"text-basic-color\",\n                state: {\n                  checked: {\n                    borderColor: \"color-primary-default-border\",\n                    backgroundColor: \"color-primary-default\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                  indeterminate: {\n                    borderColor: \"color-primary-default-border\",\n                    backgroundColor: \"color-primary-default\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                  focused: {\n                    borderColor: \"color-primary-transparent-focus-border\",\n                    backgroundColor: \"color-primary-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-primary-focus-border\",\n                    backgroundColor: \"color-primary-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-primary-transparent-hover-border\",\n                    backgroundColor: \"color-primary-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-primary-hover-border\",\n                    backgroundColor: \"color-primary-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-primary-transparent-active-border\",\n                    backgroundColor: \"color-primary-transparent-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-primary-active-border\",\n                    backgroundColor: \"color-primary-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  disabled: {\n                    borderColor: \"color-basic-transparent-disabled-border\",\n                    backgroundColor: \"color-basic-transparent-disabled\",\n                    textColor: \"text-disabled-color\",\n                  },\n                  \"checked.disabled\": {\n                    borderColor: \"color-basic-transparent-600\",\n                    backgroundColor: \"color-basic-transparent-600\",\n                  },\n                },\n              },\n              primary: {\n                borderColor: \"color-primary-transparent-default-border\",\n                backgroundColor: \"color-primary-transparent-default\",\n                textColor: \"text-basic-color\",\n                state: {\n                  checked: {\n                    borderColor: \"color-primary-default-border\",\n                    backgroundColor: \"color-primary-default\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                  indeterminate: {\n                    borderColor: \"color-primary-default-border\",\n                    backgroundColor: \"color-primary-default\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                  focused: {\n                    borderColor: \"color-primary-transparent-focus-border\",\n                    backgroundColor: \"color-primary-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-primary-focus-border\",\n                    backgroundColor: \"color-primary-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-primary-transparent-hover-border\",\n                    backgroundColor: \"color-primary-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-primary-hover-border\",\n                    backgroundColor: \"color-primary-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-primary-transparent-active-border\",\n                    backgroundColor: \"color-primary-transparent-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-primary-active-border\",\n                    backgroundColor: \"color-primary-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-basic-transparent-disabled-border\",\n                    backgroundColor: \"color-basic-transparent-disabled\",\n                    textColor: \"text-disabled-color\",\n                  },\n                  \"checked.disabled\": {\n                    borderColor: \"color-basic-transparent-600\",\n                    backgroundColor: \"color-basic-transparent-600\",\n                  },\n                },\n              },\n              success: {\n                borderColor: \"color-success-transparent-default-border\",\n                backgroundColor: \"color-success-transparent-default\",\n                textColor: \"text-basic-color\",\n                state: {\n                  checked: {\n                    borderColor: \"color-success-default-border\",\n                    backgroundColor: \"color-success-default\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                  indeterminate: {\n                    borderColor: \"color-success-default-border\",\n                    backgroundColor: \"color-success-default\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                  focused: {\n                    borderColor: \"color-success-transparent-focus-border\",\n                    backgroundColor: \"color-success-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-success-focus-border\",\n                    backgroundColor: \"color-success-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-success-transparent-hover-border\",\n                    backgroundColor: \"color-success-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-success-hover-border\",\n                    backgroundColor: \"color-success-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-success-transparent-active-border\",\n                    backgroundColor: \"color-success-transparent-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-success-active-border\",\n                    backgroundColor: \"color-success-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-basic-transparent-disabled-border\",\n                    backgroundColor: \"color-basic-transparent-disabled\",\n                    textColor: \"text-disabled-color\",\n                  },\n                  \"checked.disabled\": {\n                    borderColor: \"color-basic-transparent-600\",\n                    backgroundColor: \"color-basic-transparent-600\",\n                  },\n                },\n              },\n              info: {\n                borderColor: \"color-info-transparent-default-border\",\n                backgroundColor: \"color-info-transparent-default\",\n                textColor: \"text-basic-color\",\n                state: {\n                  checked: {\n                    borderColor: \"color-info-default-border\",\n                    backgroundColor: \"color-info-default\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                  indeterminate: {\n                    borderColor: \"color-info-default-border\",\n                    backgroundColor: \"color-info-default\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                  focused: {\n                    borderColor: \"color-info-transparent-focus-border\",\n                    backgroundColor: \"color-info-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-info-focus-border\",\n                    backgroundColor: \"color-info-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-info-transparent-hover-border\",\n                    backgroundColor: \"color-info-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-info-hover-border\",\n                    backgroundColor: \"color-info-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-info-transparent-active-border\",\n                    backgroundColor: \"color-info-transparent-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-info-active-border\",\n                    backgroundColor: \"color-info-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-basic-transparent-disabled-border\",\n                    backgroundColor: \"color-basic-transparent-disabled\",\n                    textColor: \"text-disabled-color\",\n                  },\n                  \"checked.disabled\": {\n                    borderColor: \"color-basic-transparent-600\",\n                    backgroundColor: \"color-basic-transparent-600\",\n                  },\n                },\n              },\n              warning: {\n                borderColor: \"color-warning-transparent-default-border\",\n                backgroundColor: \"color-warning-transparent-default\",\n                textColor: \"text-basic-color\",\n                state: {\n                  checked: {\n                    borderColor: \"color-warning-default-border\",\n                    backgroundColor: \"color-warning-default\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                  indeterminate: {\n                    borderColor: \"color-warning-default-border\",\n                    backgroundColor: \"color-warning-default\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                  focused: {\n                    borderColor: \"color-warning-transparent-focus-border\",\n                    backgroundColor: \"color-warning-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-warning-focus-border\",\n                    backgroundColor: \"color-warning-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-warning-transparent-hover-border\",\n                    backgroundColor: \"color-warning-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-warning-hover-border\",\n                    backgroundColor: \"color-warning-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-warning-transparent-active-border\",\n                    backgroundColor: \"color-warning-transparent-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-warning-active-border\",\n                    backgroundColor: \"color-warning-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-basic-transparent-disabled-border\",\n                    backgroundColor: \"color-basic-transparent-disabled\",\n                    textColor: \"text-disabled-color\",\n                  },\n                  \"checked.disabled\": {\n                    borderColor: \"color-basic-transparent-600\",\n                    backgroundColor: \"color-basic-transparent-600\",\n                  },\n                },\n              },\n              danger: {\n                borderColor: \"color-danger-transparent-default-border\",\n                backgroundColor: \"color-danger-transparent-default\",\n                textColor: \"text-basic-color\",\n                state: {\n                  checked: {\n                    borderColor: \"color-danger-default-border\",\n                    backgroundColor: \"color-danger-default\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                  indeterminate: {\n                    borderColor: \"color-danger-default-border\",\n                    backgroundColor: \"color-danger-default\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                  focused: {\n                    borderColor: \"color-danger-transparent-focus-border\",\n                    backgroundColor: \"color-danger-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-danger-focus-border\",\n                    backgroundColor: \"color-danger-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-danger-transparent-hover-border\",\n                    backgroundColor: \"color-danger-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-danger-hover-border\",\n                    backgroundColor: \"color-danger-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-danger-transparent-active-border\",\n                    backgroundColor: \"color-danger-transparent-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-danger-active-border\",\n                    backgroundColor: \"color-danger-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-basic-transparent-disabled-border\",\n                    backgroundColor: \"color-basic-transparent-disabled\",\n                    textColor: \"text-disabled-color\",\n                  },\n                  \"checked.disabled\": {\n                    borderColor: \"color-basic-transparent-600\",\n                    backgroundColor: \"color-basic-transparent-600\",\n                  },\n                },\n              },\n              control: {\n                borderColor: \"color-control-transparent-default-border\",\n                backgroundColor: \"color-control-transparent-default\",\n                textColor: \"text-control-color\",\n                state: {\n                  checked: {\n                    borderColor: \"color-control-default-border\",\n                    backgroundColor: \"color-control-default\",\n                    iconTintColor: \"color-basic-800\",\n                  },\n                  indeterminate: {\n                    borderColor: \"color-control-default-border\",\n                    backgroundColor: \"color-control-default\",\n                    iconTintColor: \"color-basic-800\",\n                  },\n                  focused: {\n                    borderColor: \"color-control-transparent-focus-border\",\n                    backgroundColor: \"color-control-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-control-focus-border\",\n                    backgroundColor: \"color-control-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-control-transparent-hover-border\",\n                    backgroundColor: \"color-control-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-control-hover-border\",\n                    backgroundColor: \"color-control-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-control-transparent-active-border\",\n                    backgroundColor: \"color-control-transparent-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-control-active-border\",\n                    backgroundColor: \"color-control-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-control-transparent-disabled-border\",\n                    backgroundColor: \"color-control-transparent-disabled\",\n                    textColor: \"text-control-color\",\n                  },\n                  \"checked.disabled\": {\n                    borderColor: \"color-basic-transparent-600\",\n                    backgroundColor: \"color-basic-transparent-600\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n    Datepicker: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          minHeight: {\n            type: \"number\",\n          },\n          paddingHorizontal: {\n            type: \"number\",\n          },\n          paddingVertical: {\n            type: \"number\",\n          },\n          borderRadius: {\n            type: \"number\",\n          },\n          borderColor: {\n            type: \"string\",\n          },\n          borderWidth: {\n            type: \"number\",\n          },\n          backgroundColor: {\n            type: \"string\",\n          },\n          textMarginHorizontal: {\n            type: \"number\",\n          },\n          textFontSize: {\n            type: \"number\",\n          },\n          textFontWeight: {\n            type: \"string\",\n          },\n          textFontFamily: {\n            type: \"string\",\n          },\n          textColor: {\n            type: \"string\",\n          },\n          placeholderColor: {\n            type: \"string\",\n          },\n          iconWidth: {\n            type: \"number\",\n          },\n          iconHeight: {\n            type: \"number\",\n          },\n          iconMarginHorizontal: {\n            type: \"number\",\n          },\n          iconTintColor: {\n            type: \"string\",\n          },\n          labelColor: {\n            type: \"string\",\n          },\n          labelFontFamily: {\n            type: \"string\",\n          },\n          labelFontSize: {\n            type: \"number\",\n          },\n          labelFontWeight: {\n            type: \"string\",\n          },\n          labelMarginBottom: {\n            type: \"number\",\n          },\n          captionMarginTop: {\n            type: \"number\",\n          },\n          captionColor: {\n            type: \"string\",\n          },\n          captionFontFamily: {\n            type: \"string\",\n          },\n          captionFontSize: {\n            type: \"number\",\n          },\n          captionFontWeight: {\n            type: \"string\",\n          },\n          captionIconWidth: {\n            type: \"number\",\n          },\n          captionIconHeight: {\n            type: \"number\",\n          },\n          captionIconMarginRight: {\n            type: \"number\",\n          },\n          captionIconTintColor: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n        },\n        variantGroups: {\n          status: {\n            basic: {\n              default: true,\n            },\n            primary: {\n              default: false,\n            },\n            success: {\n              default: false,\n            },\n            info: {\n              default: false,\n            },\n            warning: {\n              default: false,\n            },\n            danger: {\n              default: false,\n            },\n            control: {\n              default: false,\n            },\n          },\n          size: {\n            small: {\n              default: false,\n            },\n            medium: {\n              default: false,\n            },\n            large: {\n              default: true,\n            },\n          },\n        },\n        states: {\n          disabled: {\n            default: false,\n            priority: 0,\n            scope: \"all\",\n          },\n          active: {\n            default: false,\n            priority: 1,\n            scope: \"all\",\n          },\n        },\n      },\n      appearances: {\n        default: {\n          mapping: {\n            paddingHorizontal: 8,\n            textMarginHorizontal: 8,\n            textFontFamily: \"text-font-family\",\n            iconWidth: 24,\n            iconHeight: 24,\n            iconMarginHorizontal: 8,\n            labelMarginBottom: 4,\n            labelFontSize: \"text-label-font-size\",\n            labelFontWeight: \"text-label-font-weight\",\n            labelFontFamily: \"text-label-font-family\",\n            captionMarginTop: 4,\n            captionFontSize: \"text-caption-1-font-size\",\n            captionFontWeight: \"text-caption-1-font-weight\",\n            captionFontFamily: \"text-caption-1-font-family\",\n            captionIconWidth: 10,\n            captionIconHeight: 10,\n            captionIconMarginRight: 8,\n          },\n          variantGroups: {\n            status: {\n              basic: {\n                borderColor: \"border-basic-color-4\",\n                backgroundColor: \"background-basic-color-2\",\n                textColor: \"text-hint-color\",\n                labelColor: \"text-hint-color\",\n                captionColor: \"text-hint-color\",\n                placeholderColor: \"text-hint-color\",\n                iconTintColor: \"text-hint-color\",\n                captionIconTintColor: \"text-hint-color\",\n                state: {\n                  active: {\n                    borderColor: \"color-primary-default\",\n                    backgroundColor: \"background-basic-color-1\",\n                    textColor: \"text-basic-color\",\n                  },\n                  disabled: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-2\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              primary: {\n                borderColor: \"color-primary-default\",\n                backgroundColor: \"background-basic-color-2\",\n                textColor: \"text-basic-color\",\n                labelColor: \"text-hint-color\",\n                captionColor: \"text-primary-color\",\n                placeholderColor: \"text-hint-color\",\n                iconTintColor: \"text-primary-color\",\n                captionIconTintColor: \"text-primary-color\",\n                state: {\n                  active: {\n                    borderColor: \"color-primary-active\",\n                    backgroundColor: \"background-basic-color-1\",\n                    textColor: \"text-basic-color\",\n                  },\n                  disabled: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-2\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              success: {\n                borderColor: \"color-success-default\",\n                backgroundColor: \"background-basic-color-2\",\n                textColor: \"text-basic-color\",\n                labelColor: \"text-hint-color\",\n                captionColor: \"text-success-color\",\n                placeholderColor: \"text-hint-color\",\n                iconTintColor: \"text-success-color\",\n                captionIconTintColor: \"text-success-color\",\n                state: {\n                  active: {\n                    borderColor: \"color-success-active\",\n                    backgroundColor: \"background-basic-color-1\",\n                    textColor: \"text-basic-color\",\n                  },\n                  disabled: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-2\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              info: {\n                borderColor: \"color-info-default\",\n                backgroundColor: \"background-basic-color-2\",\n                textColor: \"text-basic-color\",\n                labelColor: \"text-hint-color\",\n                captionColor: \"text-info-color\",\n                placeholderColor: \"text-hint-color\",\n                iconTintColor: \"text-info-color\",\n                captionIconTintColor: \"text-info-color\",\n                state: {\n                  active: {\n                    borderColor: \"color-info-active\",\n                    backgroundColor: \"background-basic-color-1\",\n                    textColor: \"text-basic-color\",\n                  },\n                  disabled: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-2\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              warning: {\n                borderColor: \"color-warning-default\",\n                backgroundColor: \"background-basic-color-2\",\n                textColor: \"text-basic-color\",\n                labelColor: \"text-hint-color\",\n                captionColor: \"text-warning-color\",\n                placeholderColor: \"text-hint-color\",\n                iconTintColor: \"text-warning-color\",\n                captionIconTintColor: \"text-warning-color\",\n                state: {\n                  active: {\n                    borderColor: \"color-warning-active\",\n                    backgroundColor: \"background-basic-color-1\",\n                    textColor: \"text-basic-color\",\n                  },\n                  disabled: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-2\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              danger: {\n                borderColor: \"color-danger-default\",\n                backgroundColor: \"background-basic-color-2\",\n                textColor: \"text-basic-color\",\n                labelColor: \"text-hint-color\",\n                captionColor: \"text-danger-color\",\n                placeholderColor: \"text-hint-color\",\n                iconTintColor: \"text-danger-color\",\n                captionIconTintColor: \"text-danger-color\",\n                state: {\n                  active: {\n                    borderColor: \"color-danger-active\",\n                    backgroundColor: \"background-basic-color-1\",\n                    textColor: \"text-basic-color\",\n                  },\n                  disabled: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-2\",\n                    textColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              control: {\n                borderColor: \"color-basic-control-transparent-500\",\n                backgroundColor: \"color-basic-control-transparent-300\",\n                textColor: \"text-control-color\",\n                labelColor: \"text-control-color\",\n                captionColor: \"text-control-color\",\n                placeholderColor: \"text-control-color\",\n                iconTintColor: \"text-control-color\",\n                captionIconTintColor: \"text-control-color\",\n                state: {\n                  active: {\n                    borderColor: \"color-control-transparent-active-border\",\n                    backgroundColor: \"background-basic-color-1\",\n                    textColor: \"text-basic-color\",\n                  },\n                  disabled: {\n                    borderColor: \"color-control-transparent-disabled-border\",\n                    backgroundColor: \"color-control-transparent-disabled\",\n                    textColor: \"text-control-color\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                },\n              },\n            },\n            size: {\n              small: {\n                minHeight: \"size-small\",\n                borderRadius: \"border-radius\",\n                borderWidth: \"border-width\",\n                paddingVertical: 3,\n                textFontSize: \"text-subtitle-2-font-size\",\n                textFontWeight: \"normal\",\n              },\n              medium: {\n                minHeight: \"size-medium\",\n                borderRadius: \"border-radius\",\n                borderWidth: \"border-width\",\n                paddingVertical: 7,\n                textFontSize: \"text-subtitle-1-font-size\",\n                textFontWeight: \"normal\",\n              },\n              large: {\n                minHeight: \"size-large\",\n                borderRadius: \"border-radius\",\n                borderWidth: \"border-width\",\n                paddingVertical: 11,\n                textFontSize: \"text-subtitle-1-font-size\",\n                textFontWeight: \"normal\",\n              },\n            },\n          },\n        },\n      },\n    },\n    Divider: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          backgroundColor: {\n            type: \"string\",\n          },\n          height: {\n            type: \"number\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n        },\n        variantGroups: {},\n        states: {},\n      },\n      appearances: {\n        default: {\n          mapping: {\n            height: 1,\n            backgroundColor: \"background-basic-color-3\",\n          },\n        },\n      },\n    },\n    Drawer: {\n      meta: {\n        scope: \"mobile\",\n        parameters: {\n          backgroundColor: {\n            type: \"string\",\n          },\n          headerPaddingHorizontal: {\n            type: \"number\",\n          },\n          headerPaddingVertical: {\n            type: \"number\",\n          },\n          footerPaddingHorizontal: {\n            type: \"number\",\n          },\n          footerPaddingVertical: {\n            type: \"number\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n          noDivider: {\n            default: false,\n          },\n        },\n        variantGroups: {},\n        states: {},\n      },\n      appearances: {\n        default: {\n          mapping: {\n            backgroundColor: \"background-basic-color-1\",\n            headerPaddingHorizontal: 24,\n            headerPaddingVertical: 16,\n            footerPaddingHorizontal: 24,\n            footerPaddingVertical: 8,\n          },\n        },\n        noDivider: {\n          mapping: {},\n        },\n      },\n    },\n    Input: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          paddingVertical: {\n            type: \"number\",\n          },\n          paddingHorizontal: {\n            type: \"number\",\n          },\n          minHeight: {\n            type: \"number\",\n          },\n          borderRadius: {\n            type: \"number\",\n          },\n          borderWidth: {\n            type: \"number\",\n          },\n          borderColor: {\n            type: \"string\",\n          },\n          backgroundColor: {\n            type: \"string\",\n          },\n          textMarginHorizontal: {\n            type: \"number\",\n          },\n          textFontFamily: {\n            type: \"string\",\n          },\n          textFontSize: {\n            type: \"number\",\n          },\n          textFontWeight: {\n            type: \"string\",\n          },\n          textColor: {\n            type: \"string\",\n          },\n          placeholderColor: {\n            type: \"string\",\n          },\n          iconWidth: {\n            type: \"number\",\n          },\n          iconHeight: {\n            type: \"number\",\n          },\n          iconMarginHorizontal: {\n            type: \"number\",\n          },\n          iconTintColor: {\n            type: \"string\",\n          },\n          labelColor: {\n            type: \"string\",\n          },\n          labelFontFamily: {\n            type: \"string\",\n          },\n          labelFontSize: {\n            type: \"number\",\n          },\n          labelFontWeight: {\n            type: \"string\",\n          },\n          labelMarginBottom: {\n            type: \"number\",\n          },\n          captionMarginTop: {\n            type: \"number\",\n          },\n          captionColor: {\n            type: \"string\",\n          },\n          captionFontFamily: {\n            type: \"string\",\n          },\n          captionFontSize: {\n            type: \"number\",\n          },\n          captionFontWeight: {\n            type: \"string\",\n          },\n          captionIconWidth: {\n            type: \"number\",\n          },\n          captionIconHeight: {\n            type: \"number\",\n          },\n          captionIconMarginRight: {\n            type: \"number\",\n          },\n          captionIconTintColor: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n        },\n        variantGroups: {\n          status: {\n            basic: {\n              default: true,\n            },\n            primary: {\n              default: false,\n            },\n            success: {\n              default: false,\n            },\n            info: {\n              default: false,\n            },\n            warning: {\n              default: false,\n            },\n            danger: {\n              default: false,\n            },\n            control: {\n              default: false,\n            },\n          },\n          size: {\n            small: {\n              default: false,\n            },\n            medium: {\n              default: false,\n            },\n            large: {\n              default: true,\n            },\n          },\n        },\n        states: {\n          hover: {\n            default: false,\n            priority: 0,\n            scope: \"all\",\n          },\n          disabled: {\n            default: false,\n            priority: 1,\n            scope: \"all\",\n          },\n          focused: {\n            default: false,\n            priority: 2,\n            scope: \"all\",\n          },\n        },\n      },\n      appearances: {\n        default: {\n          mapping: {\n            paddingHorizontal: 8,\n            textMarginHorizontal: 8,\n            textFontFamily: \"text-font-family\",\n            iconWidth: 24,\n            iconHeight: 24,\n            iconMarginHorizontal: 8,\n            labelMarginBottom: 4,\n            labelFontSize: \"text-label-font-size\",\n            labelFontWeight: \"text-label-font-weight\",\n            labelFontFamily: \"text-label-font-family\",\n            captionMarginTop: 4,\n            captionFontSize: \"text-caption-1-font-size\",\n            captionFontWeight: \"text-caption-1-font-weight\",\n            captionFontFamily: \"text-caption-1-font-family\",\n            captionIconWidth: 10,\n            captionIconHeight: 10,\n            captionIconMarginRight: 8,\n          },\n          variantGroups: {\n            status: {\n              basic: {\n                borderColor: \"border-basic-color-4\",\n                backgroundColor: \"background-basic-color-2\",\n                textColor: \"text-basic-color\",\n                labelColor: \"text-hint-color\",\n                captionColor: \"text-hint-color\",\n                placeholderColor: \"text-hint-color\",\n                iconTintColor: \"text-hint-color\",\n                captionIconTintColor: \"text-hint-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-primary-default\",\n                    backgroundColor: \"background-basic-color-1\",\n                    iconTintColor: \"text-primary-color\",\n                  },\n                  hover: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-3\",\n                  },\n                  disabled: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-2\",\n                    textColor: \"text-disabled-color\",\n                    labelColor: \"text-disabled-color\",\n                    captionColor: \"text-disabled-color\",\n                    placeholderColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                    captionIconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              primary: {\n                borderColor: \"color-primary-default\",\n                backgroundColor: \"background-basic-color-2\",\n                textColor: \"text-basic-color\",\n                labelColor: \"text-hint-color\",\n                captionColor: \"text-primary-color\",\n                placeholderColor: \"text-hint-color\",\n                iconTintColor: \"text-primary-color\",\n                captionIconTintColor: \"text-primary-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-primary-focus\",\n                    backgroundColor: \"background-basic-color-1\",\n                    iconTintColor: \"text-primary-focus-color\",\n                  },\n                  hover: {\n                    borderColor: \"color-primary-hover\",\n                    backgroundColor: \"background-basic-color-3\",\n                  },\n                  disabled: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-2\",\n                    textColor: \"text-disabled-color\",\n                    labelColor: \"text-disabled-color\",\n                    captionColor: \"text-disabled-color\",\n                    placeholderColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                    captionIconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              success: {\n                borderColor: \"color-success-default\",\n                backgroundColor: \"background-basic-color-2\",\n                textColor: \"text-basic-color\",\n                labelColor: \"text-hint-color\",\n                captionColor: \"text-success-color\",\n                placeholderColor: \"text-hint-color\",\n                iconTintColor: \"text-success-color\",\n                captionIconTintColor: \"text-success-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-success-focus\",\n                    backgroundColor: \"background-basic-color-1\",\n                    iconTintColor: \"text-success-focus-color\",\n                  },\n                  hover: {\n                    borderColor: \"color-success-hover\",\n                    backgroundColor: \"background-basic-color-3\",\n                  },\n                  disabled: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-2\",\n                    textColor: \"text-disabled-color\",\n                    labelColor: \"text-disabled-color\",\n                    captionColor: \"text-disabled-color\",\n                    placeholderColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                    captionIconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              info: {\n                borderColor: \"color-info-default\",\n                backgroundColor: \"background-basic-color-2\",\n                textColor: \"text-basic-color\",\n                labelColor: \"text-hint-color\",\n                captionColor: \"text-info-color\",\n                placeholderColor: \"text-hint-color\",\n                iconTintColor: \"text-info-color\",\n                captionIconTintColor: \"text-info-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-info-focus\",\n                    backgroundColor: \"background-basic-color-1\",\n                    iconTintColor: \"text-info-focus-color\",\n                  },\n                  hover: {\n                    borderColor: \"color-info-hover\",\n                    backgroundColor: \"background-basic-color-3\",\n                  },\n                  disabled: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-2\",\n                    textColor: \"text-disabled-color\",\n                    labelColor: \"text-disabled-color\",\n                    captionColor: \"text-disabled-color\",\n                    placeholderColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                    captionIconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              warning: {\n                borderColor: \"color-warning-default\",\n                backgroundColor: \"background-basic-color-2\",\n                textColor: \"text-basic-color\",\n                labelColor: \"text-hint-color\",\n                captionColor: \"text-warning-color\",\n                placeholderColor: \"text-hint-color\",\n                iconTintColor: \"text-warning-color\",\n                captionIconTintColor: \"text-warning-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-warning-focus\",\n                    backgroundColor: \"background-basic-color-1\",\n                    iconTintColor: \"text-warning-focus-color\",\n                  },\n                  hover: {\n                    borderColor: \"color-warning-hover\",\n                    backgroundColor: \"background-basic-color-3\",\n                  },\n                  disabled: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-2\",\n                    textColor: \"text-disabled-color\",\n                    labelColor: \"text-disabled-color\",\n                    captionColor: \"text-disabled-color\",\n                    placeholderColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                    captionIconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              danger: {\n                borderColor: \"color-danger-default\",\n                backgroundColor: \"background-basic-color-2\",\n                textColor: \"text-basic-color\",\n                labelColor: \"text-hint-color\",\n                captionColor: \"text-danger-color\",\n                placeholderColor: \"text-hint-color\",\n                iconTintColor: \"text-danger-color\",\n                captionIconTintColor: \"text-danger-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-danger-focus\",\n                    backgroundColor: \"background-basic-color-1\",\n                    iconTintColor: \"text-danger-focus-color\",\n                  },\n                  hover: {\n                    borderColor: \"color-danger-hover\",\n                    backgroundColor: \"background-basic-color-3\",\n                  },\n                  disabled: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-2\",\n                    textColor: \"text-disabled-color\",\n                    labelColor: \"text-disabled-color\",\n                    captionColor: \"text-disabled-color\",\n                    placeholderColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                    captionIconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              control: {\n                borderColor: \"color-basic-control-transparent-500\",\n                backgroundColor: \"color-basic-control-transparent-300\",\n                textColor: \"text-control-color\",\n                labelColor: \"text-control-color\",\n                captionColor: \"text-control-color\",\n                placeholderColor: \"text-control-color\",\n                iconTintColor: \"text-control-color\",\n                captionIconTintColor: \"text-control-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-control-transparent-focus-border\",\n                    backgroundColor: \"color-basic-control-transparent-500\",\n                    iconTintColor: \"text-control-color\",\n                  },\n                  hover: {\n                    borderColor: \"color-control-transparent-hover-border\",\n                    backgroundColor: \"color-basic-control-transparent-400\",\n                  },\n                  disabled: {\n                    borderColor: \"color-control-transparent-disabled-border\",\n                    backgroundColor: \"color-control-transparent-disabled\",\n                    textColor: \"text-control-color\",\n                    labelColor: \"text-control-color\",\n                    captionColor: \"text-control-color\",\n                    placeholderColor: \"text-control-color\",\n                    iconTintColor: \"text-control-color\",\n                    captionIconTintColor: \"text-control-color\",\n                  },\n                },\n              },\n            },\n            size: {\n              small: {\n                minHeight: \"size-small\",\n                borderRadius: \"border-radius\",\n                borderWidth: \"border-width\",\n                paddingVertical: 3,\n                textFontSize: \"text-subtitle-2-font-size\",\n                textFontWeight: \"normal\",\n              },\n              medium: {\n                minHeight: \"size-medium\",\n                borderRadius: \"border-radius\",\n                borderWidth: \"border-width\",\n                paddingVertical: 7,\n                textFontSize: \"text-subtitle-1-font-size\",\n                textFontWeight: \"normal\",\n              },\n              large: {\n                minHeight: \"size-large\",\n                borderRadius: \"border-radius\",\n                borderWidth: \"border-width\",\n                paddingVertical: 11,\n                textFontSize: \"text-subtitle-1-font-size\",\n                textFontWeight: \"normal\",\n              },\n            },\n          },\n        },\n      },\n    },\n    Layout: {\n      meta: {\n        scope: \"mobile\",\n        parameters: {\n          backgroundColor: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n        },\n        variantGroups: {\n          level: {\n            \"1\": {\n              default: true,\n            },\n            \"2\": {\n              default: false,\n            },\n            \"3\": {\n              default: false,\n            },\n            \"4\": {\n              default: false,\n            },\n          },\n        },\n        states: {},\n      },\n      appearances: {\n        default: {\n          mapping: {},\n          variantGroups: {\n            level: {\n              \"1\": {\n                backgroundColor: \"background-basic-color-1\",\n              },\n              \"2\": {\n                backgroundColor: \"background-basic-color-2\",\n              },\n              \"3\": {\n                backgroundColor: \"background-basic-color-3\",\n              },\n              \"4\": {\n                backgroundColor: \"background-basic-color-4\",\n              },\n            },\n          },\n        },\n      },\n    },\n    List: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          backgroundColor: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n        },\n        variantGroups: {},\n        states: {},\n      },\n      appearances: {\n        default: {\n          mapping: {\n            backgroundColor: \"background-basic-color-2\",\n          },\n        },\n      },\n    },\n    ListItem: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          paddingVertical: {\n            type: \"number\",\n          },\n          paddingHorizontal: {\n            type: \"number\",\n          },\n          backgroundColor: {\n            type: \"string\",\n          },\n          iconWidth: {\n            type: \"number\",\n          },\n          iconHeight: {\n            type: \"number\",\n          },\n          iconMarginHorizontal: {\n            type: \"number\",\n          },\n          iconTintColor: {\n            type: \"string\",\n          },\n          titleMarginHorizontal: {\n            type: \"number\",\n          },\n          titleFontFamily: {\n            type: \"string\",\n          },\n          titleFontSize: {\n            type: \"number\",\n          },\n          titleFontWeight: {\n            type: \"string\",\n          },\n          titleColor: {\n            type: \"string\",\n          },\n          descriptionColor: {\n            type: \"string\",\n          },\n          descriptionFontFamily: {\n            type: \"string\",\n          },\n          descriptionFontSize: {\n            type: \"number\",\n          },\n          descriptionFontWeight: {\n            type: \"string\",\n          },\n          descriptionMarginHorizontal: {\n            type: \"number\",\n          },\n          accessoryMarginHorizontal: {\n            type: \"number\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n        },\n        variantGroups: {},\n        states: {\n          active: {\n            default: false,\n            priority: 0,\n            scope: \"all\",\n          },\n        },\n      },\n      appearances: {\n        default: {\n          mapping: {\n            paddingHorizontal: 8,\n            paddingVertical: 12,\n            backgroundColor: \"background-basic-color-1\",\n            iconWidth: 24,\n            iconHeight: 24,\n            iconMarginHorizontal: 8,\n            iconTintColor: \"text-hint-color\",\n            titleMarginHorizontal: 8,\n            titleFontSize: \"text-subtitle-2-font-size\",\n            titleFontWeight: \"text-subtitle-2-font-weight\",\n            titleFontFamily: \"text-subtitle-2-font-family\",\n            titleColor: \"text-basic-color\",\n            descriptionMarginHorizontal: 8,\n            descriptionFontSize: \"text-caption-1-font-size\",\n            descriptionFontWeight: \"text-caption-1-font-weight\",\n            descriptionFontFamily: \"text-caption-1-font-family\",\n            descriptionColor: \"text-hint-color\",\n            accessoryMarginHorizontal: 8,\n            state: {\n              active: {\n                backgroundColor: \"color-basic-transparent-active\",\n              },\n            },\n          },\n        },\n      },\n    },\n    Menu: {\n      meta: {\n        scope: \"all\",\n        parameters: {},\n        appearances: {\n          default: {\n            default: true,\n          },\n          noDivider: {\n            default: false,\n          },\n        },\n        variantGroups: {},\n        states: {},\n      },\n      appearances: {\n        default: {\n          mapping: {},\n        },\n        noDivider: {\n          mapping: {},\n        },\n      },\n    },\n    MenuItem: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          indicatorWidth: {\n            type: \"number\",\n          },\n          indicatorBackgroundColor: {\n            type: \"string\",\n          },\n          paddingVertical: {\n            type: \"number\",\n          },\n          paddingHorizontal: {\n            type: \"number\",\n          },\n          paddingLeft: {\n            type: \"number\",\n          },\n          backgroundColor: {\n            type: \"string\",\n          },\n          iconWidth: {\n            type: \"number\",\n          },\n          iconHeight: {\n            type: \"number\",\n          },\n          iconMarginHorizontal: {\n            type: \"number\",\n          },\n          iconTintColor: {\n            type: \"string\",\n          },\n          titleMarginHorizontal: {\n            type: \"number\",\n          },\n          titleFontFamily: {\n            type: \"string\",\n          },\n          titleFontSize: {\n            type: \"number\",\n          },\n          titleFontWeight: {\n            type: \"string\",\n          },\n          titleColor: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n          grouped: {\n            default: false,\n          },\n        },\n        variantGroups: {},\n        states: {\n          hover: {\n            default: false,\n            priority: 0,\n            scope: \"all\",\n          },\n          disabled: {\n            default: false,\n            priority: 1,\n            scope: \"all\",\n          },\n          selected: {\n            default: false,\n            priority: 2,\n            scope: \"all\",\n          },\n          active: {\n            default: false,\n            priority: 3,\n            scope: \"all\",\n          },\n          focused: {\n            default: false,\n            priority: 4,\n            scope: \"all\",\n          },\n        },\n      },\n      appearances: {\n        default: {\n          mapping: {\n            paddingHorizontal: 8,\n            paddingVertical: 12,\n            backgroundColor: \"background-basic-color-1\",\n            indicatorWidth: 0,\n            indicatorBackgroundColor: \"transparent\",\n            titleMarginHorizontal: 8,\n            titleFontSize: \"text-subtitle-2-font-size\",\n            titleFontWeight: \"text-subtitle-2-font-weight\",\n            titleFontFamily: \"text-subtitle-2-font-family\",\n            titleColor: \"text-basic-color\",\n            iconWidth: 20,\n            iconHeight: 20,\n            iconMarginHorizontal: 8,\n            iconTintColor: \"text-hint-color\",\n            state: {\n              hover: {\n                titleColor: \"text-primary-hover-color\",\n                iconTintColor: \"text-primary-hover-color\",\n              },\n              active: {\n                backgroundColor: \"color-basic-transparent-active\",\n              },\n              selected: {\n                backgroundColor: \"color-primary-transparent-default\",\n                indicatorWidth: 4,\n                indicatorBackgroundColor: \"color-primary-default\",\n                titleColor: \"text-primary-color\",\n                iconTintColor: \"text-primary-color\",\n              },\n              disabled: {\n                titleColor: \"text-disabled-color\",\n                iconTintColor: \"text-disabled-color\",\n              },\n            },\n          },\n        },\n        grouped: {\n          mapping: {\n            paddingLeft: 16,\n          },\n        },\n      },\n    },\n    OverflowMenu: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          width: {\n            type: \"number\",\n          },\n          maxHeight: {\n            type: \"number\",\n          },\n          borderRadius: {\n            type: \"number\",\n          },\n          indicatorBackgroundColor: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n          noDivider: {\n            default: false,\n          },\n        },\n        states: {},\n        variantGroups: {},\n      },\n      appearances: {\n        default: {\n          mapping: {\n            maxHeight: 256,\n            borderRadius: \"border-radius\",\n            indicatorBackgroundColor: \"transparent\",\n          },\n        },\n        noDivider: {\n          mapping: {},\n        },\n      },\n    },\n    Popover: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          borderRadius: {\n            type: \"number\",\n          },\n          borderWidth: {\n            type: \"number\",\n          },\n          borderColor: {\n            type: \"number\",\n          },\n          backgroundColor: {\n            type: \"string\",\n          },\n          indicatorWidth: {\n            type: \"number\",\n          },\n          indicatorHeight: {\n            type: \"number\",\n          },\n          indicatorBackgroundColor: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n        },\n        variantGroups: {},\n        states: {},\n      },\n      appearances: {\n        default: {\n          mapping: {\n            borderRadius: \"border-radius\",\n            borderWidth: \"border-width\",\n            borderColor: \"border-basic-color-3\",\n            backgroundColor: \"background-basic-color-2\",\n            indicatorWidth: 6,\n            indicatorHeight: 6,\n            indicatorBackgroundColor: \"background-basic-color-2\",\n          },\n        },\n      },\n    },\n    Select: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          minWidth: {\n            type: \"number\",\n          },\n          minHeight: {\n            type: \"number\",\n          },\n          paddingHorizontal: {\n            type: \"number\",\n          },\n          paddingVertical: {\n            type: \"number\",\n          },\n          borderRadius: {\n            type: \"number\",\n          },\n          borderColor: {\n            type: \"string\",\n          },\n          borderWidth: {\n            type: \"number\",\n          },\n          backgroundColor: {\n            type: \"string\",\n          },\n          placeholderMarginHorizontal: {\n            type: \"number\",\n          },\n          placeholderFontFamily: {\n            type: \"string\",\n          },\n          placeholderFontSize: {\n            type: \"number\",\n          },\n          placeholderFontWeight: {\n            type: \"string\",\n          },\n          placeholderColor: {\n            type: \"string\",\n          },\n          textMarginHorizontal: {\n            type: \"number\",\n          },\n          textFontFamily: {\n            type: \"string\",\n          },\n          textFontSize: {\n            type: \"number\",\n          },\n          textFontWeight: {\n            type: \"string\",\n          },\n          textColor: {\n            type: \"string\",\n          },\n          iconWidth: {\n            type: \"number\",\n          },\n          iconHeight: {\n            type: \"number\",\n          },\n          iconTintColor: {\n            type: \"string\",\n          },\n          iconMarginHorizontal: {\n            type: \"number\",\n          },\n          popoverMaxHeight: {\n            type: \"number\",\n          },\n          popoverBorderRadius: {\n            type: \"number\",\n          },\n          popoverBorderColor: {\n            type: \"string\",\n          },\n          popoverBorderWidth: {\n            type: \"number\",\n          },\n          labelColor: {\n            type: \"string\",\n          },\n          labelFontFamily: {\n            type: \"string\",\n          },\n          labelFontSize: {\n            type: \"number\",\n          },\n          labelFontWeight: {\n            type: \"string\",\n          },\n          labelMarginBottom: {\n            type: \"number\",\n          },\n          captionMarginTop: {\n            type: \"number\",\n          },\n          captionColor: {\n            type: \"string\",\n          },\n          captionFontFamily: {\n            type: \"string\",\n          },\n          captionFontSize: {\n            type: \"number\",\n          },\n          captionFontWeight: {\n            type: \"number\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n        },\n        variantGroups: {\n          status: {\n            basic: {\n              default: true,\n            },\n            primary: {\n              default: false,\n            },\n            success: {\n              default: false,\n            },\n            info: {\n              default: false,\n            },\n            warning: {\n              default: false,\n            },\n            danger: {\n              default: false,\n            },\n            control: {\n              default: false,\n            },\n          },\n          size: {\n            small: {\n              default: false,\n            },\n            medium: {\n              default: false,\n            },\n            large: {\n              default: true,\n            },\n          },\n        },\n        states: {\n          hover: {\n            default: false,\n            priority: 0,\n            scope: \"all\",\n          },\n          disabled: {\n            default: false,\n            priority: 1,\n            scope: \"all\",\n          },\n          active: {\n            default: false,\n            priority: 2,\n            scope: \"all\",\n          },\n          focused: {\n            default: false,\n            priority: 3,\n            scope: \"all\",\n          },\n        },\n      },\n      appearances: {\n        default: {\n          mapping: {\n            paddingHorizontal: 8,\n            iconWidth: 24,\n            iconHeight: 24,\n            iconMarginHorizontal: 8,\n            placeholderMarginHorizontal: 8,\n            textMarginHorizontal: 8,\n            textFontFamily: \"text-subtitle-2-font-family\",\n            placeholderFontFamily: \"text-paragraph-1-font-family\",\n            labelMarginBottom: 4,\n            labelFontSize: \"text-label-font-size\",\n            labelFontWeight: \"text-label-font-weight\",\n            labelFontFamily: \"text-label-font-family\",\n            captionMarginTop: 4,\n            captionFontSize: \"text-caption-1-font-size\",\n            captionFontWeight: \"text-caption-1-font-weight\",\n            captionFontFamily: \"text-caption-1-font-family\",\n            popoverMaxHeight: 220,\n            popoverBorderRadius: \"border-radius\",\n            popoverBorderWidth: \"border-width\",\n            popoverBorderColor: \"border-basic-color-4\",\n          },\n          variantGroups: {\n            status: {\n              basic: {\n                borderColor: \"border-basic-color-4\",\n                backgroundColor: \"background-basic-color-2\",\n                textColor: \"text-basic-color\",\n                labelColor: \"text-hint-color\",\n                captionColor: \"text-hint-color\",\n                placeholderColor: \"text-hint-color\",\n                iconTintColor: \"text-hint-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-primary-default\",\n                    backgroundColor: \"background-basic-color-1\",\n                  },\n                  hover: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-3\",\n                  },\n                  active: {\n                    borderColor: \"color-primary-default\",\n                    backgroundColor: \"background-basic-color-1\",\n                  },\n                  disabled: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-2\",\n                    textColor: \"text-disabled-color\",\n                    labelColor: \"text-disabled-color\",\n                    captionColor: \"text-disabled-color\",\n                    placeholderColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                    captionIconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              primary: {\n                borderColor: \"color-primary-default\",\n                backgroundColor: \"background-basic-color-2\",\n                textColor: \"text-basic-color\",\n                labelColor: \"text-hint-color\",\n                captionColor: \"text-primary-color\",\n                placeholderColor: \"text-hint-color\",\n                iconTintColor: \"text-hint-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-primary-focus\",\n                    backgroundColor: \"background-basic-color-1\",\n                  },\n                  hover: {\n                    borderColor: \"color-primary-hover\",\n                    backgroundColor: \"background-basic-color-3\",\n                  },\n                  active: {\n                    borderColor: \"color-primary-active\",\n                    backgroundColor: \"background-basic-color-1\",\n                    iconTintColor: \"text-basic-color\",\n                  },\n                  disabled: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-2\",\n                    textColor: \"text-disabled-color\",\n                    labelColor: \"text-disabled-color\",\n                    captionColor: \"text-disabled-color\",\n                    placeholderColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                    captionIconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              success: {\n                borderColor: \"color-success-default\",\n                backgroundColor: \"background-basic-color-2\",\n                textColor: \"text-basic-color\",\n                labelColor: \"text-hint-color\",\n                captionColor: \"text-success-color\",\n                placeholderColor: \"text-hint-color\",\n                iconTintColor: \"text-hint-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-success-focus\",\n                    backgroundColor: \"background-basic-color-1\",\n                  },\n                  hover: {\n                    borderColor: \"color-success-hover\",\n                    backgroundColor: \"background-basic-color-3\",\n                  },\n                  active: {\n                    borderColor: \"color-success-active\",\n                    backgroundColor: \"background-basic-color-1\",\n                    iconTintColor: \"text-basic-color\",\n                  },\n                  disabled: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-2\",\n                    textColor: \"text-disabled-color\",\n                    labelColor: \"text-disabled-color\",\n                    captionColor: \"text-disabled-color\",\n                    placeholderColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                    captionIconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              info: {\n                borderColor: \"color-info-default\",\n                backgroundColor: \"background-basic-color-2\",\n                textColor: \"text-basic-color\",\n                labelColor: \"text-hint-color\",\n                captionColor: \"text-info-color\",\n                placeholderColor: \"text-hint-color\",\n                iconTintColor: \"text-hint-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-info-focus\",\n                    backgroundColor: \"background-basic-color-1\",\n                  },\n                  hover: {\n                    borderColor: \"color-info-hover\",\n                    backgroundColor: \"background-basic-color-3\",\n                  },\n                  active: {\n                    borderColor: \"color-info-active\",\n                    backgroundColor: \"background-basic-color-1\",\n                    iconTintColor: \"text-basic-color\",\n                  },\n                  disabled: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-2\",\n                    textColor: \"text-disabled-color\",\n                    labelColor: \"text-disabled-color\",\n                    captionColor: \"text-disabled-color\",\n                    placeholderColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                    captionIconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              warning: {\n                borderColor: \"color-warning-default\",\n                backgroundColor: \"background-basic-color-2\",\n                textColor: \"text-basic-color\",\n                labelColor: \"text-hint-color\",\n                captionColor: \"text-warning-color\",\n                placeholderColor: \"text-hint-color\",\n                iconTintColor: \"text-hint-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-warning-focus\",\n                    backgroundColor: \"background-basic-color-1\",\n                  },\n                  hover: {\n                    borderColor: \"color-warning-hover\",\n                    backgroundColor: \"background-basic-color-3\",\n                  },\n                  active: {\n                    borderColor: \"color-warning-active\",\n                    backgroundColor: \"background-basic-color-1\",\n                    iconTintColor: \"text-basic-color\",\n                  },\n                  disabled: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-2\",\n                    textColor: \"text-disabled-color\",\n                    labelColor: \"text-disabled-color\",\n                    captionColor: \"text-disabled-color\",\n                    placeholderColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                    captionIconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              danger: {\n                borderColor: \"color-danger-default\",\n                backgroundColor: \"background-basic-color-2\",\n                textColor: \"text-basic-color\",\n                labelColor: \"text-hint-color\",\n                captionColor: \"text-danger-color\",\n                placeholderColor: \"text-hint-color\",\n                iconTintColor: \"text-hint-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-danger-focus\",\n                    backgroundColor: \"background-basic-color-1\",\n                  },\n                  hover: {\n                    borderColor: \"color-danger-hover\",\n                    backgroundColor: \"background-basic-color-3\",\n                  },\n                  active: {\n                    borderColor: \"color-danger-active\",\n                    backgroundColor: \"background-basic-color-1\",\n                    iconTintColor: \"text-basic-color\",\n                  },\n                  disabled: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-2\",\n                    textColor: \"text-disabled-color\",\n                    labelColor: \"text-disabled-color\",\n                    captionColor: \"text-disabled-color\",\n                    placeholderColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                    captionIconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n              control: {\n                borderColor: \"color-basic-control-transparent-500\",\n                backgroundColor: \"color-basic-control-transparent-300\",\n                textColor: \"text-control-color\",\n                labelColor: \"text-control-color\",\n                captionColor: \"text-control-color\",\n                placeholderColor: \"text-control-color\",\n                iconTintColor: \"text-control-color\",\n                state: {\n                  focused: {\n                    borderColor: \"color-control-transparent-focus-border\",\n                    backgroundColor: \"color-basic-control-transparent-500\",\n                  },\n                  hover: {\n                    borderColor: \"color-control-transparent-hover-border\",\n                    backgroundColor: \"color-basic-control-transparent-400\",\n                  },\n                  active: {\n                    borderColor: \"color-control-transparent-active-border\",\n                    backgroundColor: \"background-basic-color-1\",\n                    iconTintColor: \"text-basic-color\",\n                  },\n                  disabled: {\n                    borderColor: \"border-basic-color-4\",\n                    backgroundColor: \"background-basic-color-2\",\n                    textColor: \"text-disabled-color\",\n                    labelColor: \"text-disabled-color\",\n                    captionColor: \"text-disabled-color\",\n                    placeholderColor: \"text-disabled-color\",\n                    iconTintColor: \"text-disabled-color\",\n                    captionIconTintColor: \"text-disabled-color\",\n                  },\n                },\n              },\n            },\n            size: {\n              small: {\n                borderRadius: \"border-radius\",\n                borderWidth: \"border-width\",\n                minHeight: \"size-small\",\n                paddingVertical: 3,\n                textFontSize: \"text-subtitle-2-font-size\",\n                textFontWeight: \"text-subtitle-2-font-weight\",\n                placeholderFontSize: \"text-paragraph-1-font-size\",\n                placeholderFontWeight: \"text-paragraph-1-font-weight\",\n              },\n              medium: {\n                borderRadius: \"border-radius\",\n                borderWidth: \"border-width\",\n                minHeight: \"size-medium\",\n                paddingVertical: 7,\n                textFontSize: \"text-subtitle-1-font-size\",\n                textFontWeight: \"text-subtitle-1-font-weight\",\n                placeholderFontSize: \"text-paragraph-1-font-size\",\n                placeholderFontWeight: \"text-paragraph-1-font-weight\",\n              },\n              large: {\n                borderRadius: \"border-radius\",\n                borderWidth: \"border-width\",\n                minHeight: \"size-large\",\n                paddingVertical: 11,\n                textFontSize: \"text-subtitle-1-font-size\",\n                textFontWeight: \"text-subtitle-1-font-weight\",\n                placeholderFontSize: \"text-paragraph-1-font-size\",\n                placeholderFontWeight: \"text-paragraph-1-font-weight\",\n              },\n            },\n          },\n        },\n      },\n    },\n    SelectOption: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          paddingHorizontal: {\n            type: \"number\",\n          },\n          paddingVertical: {\n            type: \"number\",\n          },\n          paddingLeft: {\n            type: \"number\",\n          },\n          backgroundColor: {\n            type: \"string\",\n          },\n          iconWidth: {\n            type: \"number\",\n          },\n          iconHeight: {\n            type: \"number\",\n          },\n          iconMarginHorizontal: {\n            type: \"number\",\n          },\n          iconTintColor: {\n            type: \"string\",\n          },\n          textMarginHorizontal: {\n            type: \"number\",\n          },\n          textFontFamily: {\n            type: \"string\",\n          },\n          textFontSize: {\n            type: \"number\",\n          },\n          textFontWeight: {\n            type: \"string\",\n          },\n          textColor: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n          grouped: {\n            default: false,\n          },\n        },\n        variantGroups: {},\n        states: {\n          hover: {\n            default: false,\n            priority: 0,\n            scope: \"all\",\n          },\n          disabled: {\n            default: false,\n            priority: 1,\n            scope: \"all\",\n          },\n          selected: {\n            default: false,\n            priority: 2,\n            scope: \"all\",\n          },\n          active: {\n            default: false,\n            priority: 3,\n            scope: \"all\",\n          },\n          focused: {\n            default: false,\n            priority: 4,\n            scope: \"all\",\n          },\n        },\n      },\n      appearances: {\n        default: {\n          mapping: {\n            paddingHorizontal: 8,\n            paddingVertical: 12,\n            backgroundColor: \"background-basic-color-1\",\n            textMarginHorizontal: 8,\n            textFontSize: \"text-subtitle-1-font-size\",\n            textFontWeight: \"text-subtitle-1-font-weight\",\n            textFontFamily: \"text-subtitle-1-font-family\",\n            textColor: \"text-basic-color\",\n            iconWidth: 20,\n            iconHeight: 20,\n            iconMarginHorizontal: 8,\n            iconTintColor: \"text-hint-color\",\n            state: {\n              hover: {\n                iconTintColor: \"text-primary-hover-color\",\n                backgroundColor: \"color-basic-transparent-hover\",\n              },\n              active: {\n                backgroundColor: \"color-basic-transparent-active\",\n              },\n              selected: {\n                backgroundColor: \"color-primary-transparent-default\",\n                textColor: \"text-basic-color\",\n                iconTintColor: \"text-primary-color\",\n              },\n              \"selected.hover\": {\n                \"background-color\": \"color-primary-transparent-100\",\n                textColor: \"text-basic-color\",\n              },\n              disabled: {\n                backgroundColor: \"background-basic-color-1\",\n                textColor: \"text-disabled-color\",\n                iconTintColor: \"text-disabled-color\",\n              },\n            },\n          },\n        },\n        grouped: {\n          mapping: {\n            paddingLeft: 16,\n          },\n        },\n      },\n    },\n    Radio: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          width: {\n            type: \"number\",\n          },\n          height: {\n            type: \"number\",\n          },\n          borderRadius: {\n            type: \"number\",\n          },\n          borderWidth: {\n            type: \"number\",\n          },\n          borderColor: {\n            type: \"string\",\n          },\n          backgroundColor: {\n            type: \"string\",\n          },\n          textColor: {\n            type: \"string\",\n          },\n          textFontFamily: {\n            type: \"string\",\n          },\n          textMarginHorizontal: {\n            type: \"number\",\n          },\n          textFontSize: {\n            type: \"number\",\n          },\n          textFontWeight: {\n            type: \"string\",\n          },\n          iconWidth: {\n            type: \"number\",\n          },\n          iconHeight: {\n            type: \"number\",\n          },\n          iconBorderRadius: {\n            type: \"number\",\n          },\n          iconTintColor: {\n            type: \"string\",\n          },\n          outlineWidth: {\n            type: \"number\",\n          },\n          outlineHeight: {\n            type: \"number\",\n          },\n          outlineBorderRadius: {\n            type: \"number\",\n          },\n          outlineBackgroundColor: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n        },\n        variantGroups: {\n          status: {\n            basic: {\n              default: true,\n            },\n            primary: {\n              default: false,\n            },\n            success: {\n              default: false,\n            },\n            info: {\n              default: false,\n            },\n            warning: {\n              default: false,\n            },\n            danger: {\n              default: false,\n            },\n            control: {\n              default: false,\n            },\n          },\n        },\n        states: {\n          checked: {\n            default: false,\n            priority: 0,\n            scope: \"all\",\n          },\n          hover: {\n            default: false,\n            priority: 1,\n            scope: \"all\",\n          },\n          disabled: {\n            default: false,\n            priority: 2,\n            scope: \"all\",\n          },\n          active: {\n            default: false,\n            priority: 3,\n            scope: \"all\",\n          },\n          focused: {\n            default: false,\n            priority: 4,\n            scope: \"all\",\n          },\n        },\n      },\n      appearances: {\n        default: {\n          mapping: {\n            width: 20,\n            height: 20,\n            borderRadius: 10,\n            borderWidth: \"border-width\",\n            iconWidth: 12,\n            iconHeight: 12,\n            iconBorderRadius: 6,\n            iconTintColor: \"transparent\",\n            outlineWidth: 32,\n            outlineHeight: 32,\n            outlineBorderRadius: 16,\n            outlineBackgroundColor: \"transparent\",\n            textMarginHorizontal: 12,\n            textFontSize: \"text-subtitle-2-font-size\",\n            textFontWeight: \"text-subtitle-2-font-weight\",\n            textFontFamily: \"text-subtitle-2-font-family\",\n          },\n          variantGroups: {\n            status: {\n              basic: {\n                borderColor: \"color-basic-transparent-default-border\",\n                backgroundColor: \"color-basic-transparent-default\",\n                textColor: \"text-basic-color\",\n                state: {\n                  checked: {\n                    borderColor: \"color-primary-default-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-primary-default\",\n                  },\n                  focused: {\n                    borderColor: \"color-primary-transparent-focus-border\",\n                    backgroundColor: \"color-primary-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-primary-focus-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-primary-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-primary-transparent-hover-border\",\n                    backgroundColor: \"color-primary-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-primary-hover-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-primary-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-primary-transparent-active-border\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-primary-active-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-primary-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-basic-transparent-disabled-border\",\n                    backgroundColor: \"color-basic-transparent-disabled\",\n                    textColor: \"text-disabled-color\",\n                  },\n                  \"checked.disabled\": {\n                    borderColor: \"color-basic-transparent-600\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-basic-transparent-600\",\n                  },\n                },\n              },\n              primary: {\n                borderColor: \"color-primary-transparent-default-border\",\n                backgroundColor: \"color-primary-transparent-default\",\n                textColor: \"text-basic-color\",\n                state: {\n                  checked: {\n                    borderColor: \"color-primary-default-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-primary-default\",\n                  },\n                  focused: {\n                    borderColor: \"color-primary-transparent-focus-border\",\n                    backgroundColor: \"color-primary-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-primary-focus-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-primary-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-primary-transparent-hover-border\",\n                    backgroundColor: \"color-primary-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-primary-hover-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-primary-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-primary-transparent-active-border\",\n                    backgroundColor: \"color-primary-transparent-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-primary-active-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-primary-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-basic-transparent-disabled-border\",\n                    backgroundColor: \"color-basic-transparent-disabled\",\n                    textColor: \"text-disabled-color\",\n                  },\n                  \"checked.disabled\": {\n                    borderColor: \"color-basic-transparent-600\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-basic-transparent-600\",\n                  },\n                },\n              },\n              success: {\n                borderColor: \"color-success-transparent-default-border\",\n                backgroundColor: \"color-success-transparent-default\",\n                textColor: \"text-basic-color\",\n                state: {\n                  checked: {\n                    borderColor: \"color-success-default-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-success-default\",\n                  },\n                  focused: {\n                    borderColor: \"color-success-transparent-focus-border\",\n                    backgroundColor: \"color-success-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-success-focus-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-success-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-success-transparent-hover-border\",\n                    backgroundColor: \"color-success-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-success-default-hover\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-success-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-success-transparent-active-border\",\n                    backgroundColor: \"color-success-transparent-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-success-active-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-success-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-basic-transparent-disabled-border\",\n                    backgroundColor: \"color-basic-transparent-disabled\",\n                    textColor: \"text-disabled-color\",\n                  },\n                  \"checked.disabled\": {\n                    borderColor: \"color-basic-transparent-600\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-basic-transparent-600\",\n                  },\n                },\n              },\n              info: {\n                borderColor: \"color-info-transparent-default-border\",\n                backgroundColor: \"color-info-transparent-default\",\n                textColor: \"text-basic-color\",\n                state: {\n                  checked: {\n                    borderColor: \"color-info-default-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-info-default\",\n                  },\n                  focused: {\n                    borderColor: \"color-info-transparent-focus-border\",\n                    backgroundColor: \"color-info-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-info-focus-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-info-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-info-transparent-hover-border\",\n                    backgroundColor: \"color-info-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-info-default-hover\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-info-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-info-transparent-active-border\",\n                    backgroundColor: \"color-info-transparent-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-info-active-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-info-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-basic-transparent-disabled-border\",\n                    backgroundColor: \"color-basic-transparent-disabled\",\n                    textColor: \"text-disabled-color\",\n                  },\n                  \"checked.disabled\": {\n                    borderColor: \"color-basic-transparent-600\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-basic-transparent-600\",\n                  },\n                },\n              },\n              warning: {\n                borderColor: \"color-warning-transparent-default-border\",\n                backgroundColor: \"color-warning-transparent-default\",\n                textColor: \"text-basic-color\",\n                state: {\n                  checked: {\n                    borderColor: \"color-warning-default-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-warning-default\",\n                  },\n                  focused: {\n                    borderColor: \"color-warning-transparent-focus-border\",\n                    backgroundColor: \"color-warning-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-warning-focus-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-warning-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-warning-transparent-hover-border\",\n                    backgroundColor: \"color-warning-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-warning-default-hover\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-warning-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-warning-transparent-active-border\",\n                    backgroundColor: \"color-warning-transparent-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-warning-active-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-warning-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-basic-transparent-disabled-border\",\n                    backgroundColor: \"color-basic-transparent-disabled\",\n                    textColor: \"text-disabled-color\",\n                  },\n                  \"checked.disabled\": {\n                    borderColor: \"color-basic-transparent-600\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-basic-transparent-600\",\n                  },\n                },\n              },\n              danger: {\n                borderColor: \"color-danger-transparent-default-border\",\n                backgroundColor: \"color-danger-transparent-default\",\n                textColor: \"text-basic-color\",\n                state: {\n                  checked: {\n                    borderColor: \"color-danger-default-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-danger-default\",\n                  },\n                  focused: {\n                    borderColor: \"color-danger-transparent-focus-border\",\n                    backgroundColor: \"color-danger-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-danger-focus-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-danger-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-danger-transparent-hover-border\",\n                    backgroundColor: \"color-danger-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-danger-default-hover\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-danger-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-danger-transparent-active-border\",\n                    backgroundColor: \"color-danger-transparent-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-danger-active-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-danger-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-basic-transparent-disabled-border\",\n                    backgroundColor: \"color-basic-transparent-disabled\",\n                    textColor: \"text-disabled-color\",\n                  },\n                  \"checked.disabled\": {\n                    borderColor: \"color-basic-transparent-600\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-basic-transparent-600\",\n                  },\n                },\n              },\n              control: {\n                borderColor: \"color-control-transparent-default-border\",\n                backgroundColor: \"color-control-transparent-default\",\n                textColor: \"text-control-color\",\n                state: {\n                  checked: {\n                    borderColor: \"color-control-default-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-control-default\",\n                  },\n                  focused: {\n                    borderColor: \"color-control-transparent-focus-border\",\n                    backgroundColor: \"color-control-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-control-focus-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-control-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-control-transparent-hover-border\",\n                    backgroundColor: \"color-control-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-control-hover-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-control-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-control-transparent-active-border\",\n                    backgroundColor: \"color-control-transparent-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-control-active-border\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-control-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-control-transparent-disabled-border\",\n                    backgroundColor: \"color-control-transparent-disabled\",\n                    textColor: \"text-control-color\",\n                  },\n                  \"checked.disabled\": {\n                    borderColor: \"color-basic-transparent-600\",\n                    backgroundColor: \"transparent\",\n                    iconTintColor: \"color-basic-transparent-600\",\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n    RadioGroup: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          itemMarginVertical: {\n            type: \"number\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n        },\n        variantGroups: {},\n        states: {},\n      },\n      appearances: {\n        default: {\n          mapping: {\n            itemMarginVertical: 8,\n          },\n        },\n      },\n    },\n    Spinner: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          width: {\n            type: \"number\",\n          },\n          height: {\n            type: \"number\",\n          },\n          borderWidth: {\n            type: \"number\",\n          },\n          borderRadius: {\n            type: \"number\",\n          },\n          borderColor: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n        },\n        variantGroups: {\n          status: {\n            basic: {\n              default: false,\n            },\n            primary: {\n              default: true,\n            },\n            success: {\n              default: false,\n            },\n            info: {\n              default: false,\n            },\n            warning: {\n              default: false,\n            },\n            danger: {\n              default: false,\n            },\n            control: {\n              default: false,\n            },\n          },\n          size: {\n            tiny: {\n              default: false,\n            },\n            small: {\n              default: false,\n            },\n            medium: {\n              default: false,\n            },\n            large: {\n              default: true,\n            },\n            giant: {\n              default: false,\n            },\n          },\n        },\n        states: {},\n      },\n      appearances: {\n        default: {\n          mapping: {},\n          variantGroups: {\n            status: {\n              basic: {\n                borderColor: \"color-basic-default\",\n              },\n              primary: {\n                borderColor: \"color-primary-default\",\n              },\n              success: {\n                borderColor: \"color-success-default\",\n              },\n              info: {\n                borderColor: \"color-info-default\",\n              },\n              warning: {\n                borderColor: \"color-warning-default\",\n              },\n              danger: {\n                borderColor: \"color-danger-default\",\n              },\n              control: {\n                borderColor: \"color-control-default\",\n              },\n            },\n            size: {\n              tiny: {\n                width: 16,\n                height: 16,\n                borderRadius: 8,\n                borderWidth: 2.3,\n              },\n              small: {\n                width: 20,\n                height: 20,\n                borderRadius: 10,\n                borderWidth: 2.8,\n              },\n              medium: {\n                width: 24,\n                height: 24,\n                borderRadius: 12,\n                borderWidth: 3.4,\n              },\n              large: {\n                width: 28,\n                height: 28,\n                borderRadius: 14,\n                borderWidth: 3.9,\n              },\n              giant: {\n                width: 32,\n                height: 32,\n                borderRadius: 16,\n                borderWidth: 4.5,\n              },\n            },\n          },\n        },\n      },\n    },\n    Tab: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          textFontFamily: {\n            type: \"string\",\n          },\n          textFontSize: {\n            type: \"number\",\n          },\n          textFontWeight: {\n            type: \"number\",\n          },\n          textMarginVertical: {\n            type: \"number\",\n          },\n          textColor: {\n            type: \"string\",\n          },\n          iconWidth: {\n            type: \"number\",\n          },\n          iconHeight: {\n            type: \"number\",\n          },\n          iconMarginVertical: {\n            type: \"number\",\n          },\n          iconTintColor: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n        },\n        variantGroups: {},\n        states: {\n          selected: {\n            default: false,\n            priority: 0,\n            scope: \"all\",\n          },\n          hover: {\n            default: false,\n            priority: 1,\n            scope: \"all\",\n          },\n          focused: {\n            default: false,\n            priority: 2,\n            scope: \"all\",\n          },\n        },\n      },\n      appearances: {\n        default: {\n          mapping: {\n            textMarginVertical: 2,\n            textFontSize: 14,\n            textFontWeight: \"bold\",\n            textFontFamily: \"text-font-family\",\n            textColor: \"text-hint-color\",\n            iconWidth: 24,\n            iconHeight: 24,\n            iconMarginVertical: 2,\n            iconTintColor: \"text-hint-color\",\n            state: {\n              hover: {\n                textColor: \"text-primary-hover-color\",\n                iconTintColor: \"text-primary-hover-color\",\n              },\n              selected: {\n                textColor: \"text-primary-color\",\n                iconTintColor: \"text-primary-color\",\n              },\n            },\n          },\n        },\n      },\n    },\n    TabBar: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          paddingVertical: {\n            type: \"number\",\n          },\n          backgroundColor: {\n            type: \"string\",\n          },\n          indicatorHeight: {\n            type: \"number\",\n          },\n          indicatorBorderRadius: {\n            type: \"number\",\n          },\n          indicatorBackgroundColor: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n        },\n        variantGroups: {},\n        states: {},\n      },\n      appearances: {\n        default: {\n          mapping: {\n            paddingVertical: 4,\n            backgroundColor: \"background-basic-color-1\",\n            indicatorHeight: 4,\n            indicatorBorderRadius: 2,\n            indicatorBackgroundColor: \"color-primary-default\",\n          },\n        },\n      },\n    },\n    Text: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          fontFamily: {\n            type: \"string\",\n          },\n          fontSize: {\n            type: \"number\",\n          },\n          fontWeight: {\n            type: \"string\",\n          },\n          color: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n          alternative: {\n            default: false,\n          },\n          hint: {\n            default: false,\n          },\n        },\n        variantGroups: {\n          category: {\n            h1: {\n              default: false,\n            },\n            h2: {\n              default: false,\n            },\n            h3: {\n              default: false,\n            },\n            h4: {\n              default: false,\n            },\n            h5: {\n              default: false,\n            },\n            h6: {\n              default: false,\n            },\n            s1: {\n              default: false,\n            },\n            s2: {\n              default: false,\n            },\n            p1: {\n              default: true,\n            },\n            p2: {\n              default: false,\n            },\n            c1: {\n              default: false,\n            },\n            c2: {\n              default: false,\n            },\n            label: {\n              default: false,\n            },\n          },\n          status: {\n            basic: {\n              default: false,\n            },\n            primary: {\n              default: false,\n            },\n            success: {\n              default: false,\n            },\n            info: {\n              default: false,\n            },\n            warning: {\n              default: false,\n            },\n            danger: {\n              default: false,\n            },\n            control: {\n              default: false,\n            },\n          },\n        },\n        states: {},\n      },\n      appearances: {\n        default: {\n          mapping: {\n            color: \"text-basic-color\",\n          },\n          variantGroups: {\n            category: {\n              h1: {\n                fontSize: \"text-heading-1-font-size\",\n                fontWeight: \"text-heading-1-font-weight\",\n                fontFamily: \"text-heading-1-font-family\",\n              },\n              h2: {\n                fontSize: \"text-heading-2-font-size\",\n                fontWeight: \"text-heading-2-font-weight\",\n                fontFamily: \"text-heading-2-font-family\",\n              },\n              h3: {\n                fontSize: \"text-heading-3-font-size\",\n                fontWeight: \"text-heading-3-font-weight\",\n                fontFamily: \"text-heading-3-font-family\",\n              },\n              h4: {\n                fontSize: \"text-heading-4-font-size\",\n                fontWeight: \"text-heading-4-font-weight\",\n                fontFamily: \"text-heading-4-font-family\",\n              },\n              h5: {\n                fontSize: \"text-heading-5-font-size\",\n                fontWeight: \"text-heading-5-font-weight\",\n                fontFamily: \"text-heading-5-font-family\",\n              },\n              h6: {\n                fontSize: \"text-heading-6-font-size\",\n                fontWeight: \"text-heading-6-font-weight\",\n                fontFamily: \"text-heading-6-font-family\",\n              },\n              s1: {\n                fontSize: \"text-subtitle-1-font-size\",\n                fontWeight: \"text-subtitle-1-font-weight\",\n                fontFamily: \"text-subtitle-1-font-family\",\n              },\n              s2: {\n                fontSize: \"text-subtitle-2-font-size\",\n                fontWeight: \"text-subtitle-2-font-weight\",\n                fontFamily: \"text-subtitle-2-font-family\",\n              },\n              p1: {\n                fontSize: \"text-paragraph-1-font-size\",\n                fontWeight: \"text-paragraph-1-font-weight\",\n                fontFamily: \"text-paragraph-1-font-family\",\n              },\n              p2: {\n                fontSize: \"text-paragraph-2-font-size\",\n                fontWeight: \"text-paragraph-2-font-weight\",\n                fontFamily: \"text-paragraph-2-font-family\",\n              },\n              c1: {\n                fontSize: \"text-caption-1-font-size\",\n                fontWeight: \"text-caption-1-font-weight\",\n                fontFamily: \"text-caption-1-font-family\",\n              },\n              c2: {\n                fontSize: \"text-caption-2-font-size\",\n                fontWeight: \"text-caption-2-font-weight\",\n                fontFamily: \"text-caption-2-font-family\",\n              },\n              label: {\n                fontSize: \"text-label-font-size\",\n                fontWeight: \"text-label-font-weight\",\n                fontFamily: \"text-label-font-family\",\n              },\n            },\n            status: {\n              basic: {\n                color: \"text-basic-color\",\n              },\n              primary: {\n                color: \"text-primary-color\",\n              },\n              success: {\n                color: \"text-success-color\",\n              },\n              info: {\n                color: \"text-info-color\",\n              },\n              warning: {\n                color: \"text-warning-color\",\n              },\n              danger: {\n                color: \"text-danger-color\",\n              },\n              control: {\n                color: \"text-control-color\",\n              },\n            },\n          },\n        },\n        alternative: {\n          mapping: {\n            color: \"text-alternate-color\",\n          },\n        },\n        hint: {\n          mapping: {\n            color: \"text-hint-color\",\n          },\n        },\n      },\n    },\n    Toggle: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          width: {\n            type: \"number\",\n          },\n          height: {\n            type: \"number\",\n          },\n          borderRadius: {\n            type: \"number\",\n          },\n          borderWidth: {\n            type: \"number\",\n          },\n          borderColor: {\n            type: \"string\",\n          },\n          backgroundColor: {\n            type: \"string\",\n          },\n          thumbWidth: {\n            type: \"number\",\n          },\n          thumbHeight: {\n            type: \"number\",\n          },\n          thumbBorderRadius: {\n            type: \"number\",\n          },\n          thumbBackgroundColor: {\n            type: \"string\",\n          },\n          textMarginHorizontal: {\n            type: \"number\",\n          },\n          textFontFamily: {\n            type: \"string\",\n          },\n          textFontSize: {\n            type: \"number\",\n          },\n          textFontWeight: {\n            type: \"string\",\n          },\n          textColor: {\n            type: \"string\",\n          },\n          iconWidth: {\n            type: \"number\",\n          },\n          iconHeight: {\n            type: \"number\",\n          },\n          iconTintColor: {\n            type: \"string\",\n          },\n          outlineWidth: {\n            type: \"number\",\n          },\n          outlineHeight: {\n            type: \"number\",\n          },\n          outlineBorderRadius: {\n            type: \"number\",\n          },\n          outlineBackgroundColor: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n        },\n        variantGroups: {\n          status: {\n            basic: {\n              default: true,\n            },\n            primary: {\n              default: false,\n            },\n            success: {\n              default: false,\n            },\n            info: {\n              default: false,\n            },\n            warning: {\n              default: false,\n            },\n            danger: {\n              default: false,\n            },\n            control: {\n              default: false,\n            },\n          },\n        },\n        states: {\n          checked: {\n            default: false,\n            priority: 0,\n            scope: \"all\",\n          },\n          hover: {\n            default: false,\n            priority: 1,\n            scope: \"all\",\n          },\n          disabled: {\n            default: false,\n            priority: 2,\n            scope: \"all\",\n          },\n          active: {\n            default: false,\n            priority: 3,\n            scope: \"all\",\n          },\n          focused: {\n            default: false,\n            priority: 4,\n            scope: \"all\",\n          },\n        },\n      },\n      appearances: {\n        default: {\n          mapping: {\n            width: 52,\n            height: 32,\n            borderRadius: 16,\n            borderWidth: \"border-width\",\n            thumbWidth: 28,\n            thumbHeight: 28,\n            thumbBorderRadius: 14,\n            outlineWidth: 64,\n            outlineHeight: 42,\n            outlineBorderRadius: 21,\n            textMarginHorizontal: 12,\n            textFontSize: \"text-subtitle-2-font-size\",\n            textFontWeight: \"text-subtitle-2-font-weight\",\n            textFontFamily: \"text-subtitle-2-font-family\",\n            iconWidth: 12,\n            iconHeight: 12,\n          },\n          variantGroups: {\n            status: {\n              basic: {\n                borderColor: \"color-basic-transparent-default-border\",\n                backgroundColor: \"color-basic-transparent-default\",\n                thumbBackgroundColor: \"background-basic-color-1\",\n                outlineBackgroundColor: \"transparent\",\n                textColor: \"text-basic-color\",\n                iconTintColor: \"transparent\",\n                state: {\n                  checked: {\n                    borderColor: \"color-primary-default-border\",\n                    backgroundColor: \"color-primary-default\",\n                    iconTintColor: \"text-primary-color\",\n                  },\n                  focused: {\n                    borderColor: \"color-primary-transparent-focus-border\",\n                    backgroundColor: \"color-primary-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-primary-focus-border\",\n                    backgroundColor: \"color-primary-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-primary-transparent-hover-border\",\n                    backgroundColor: \"color-primary-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-primary-hover-border\",\n                    backgroundColor: \"color-primary-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-primary-transparent-active-border\",\n                    backgroundColor: \"color-primary-transparent-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-primary-active-border\",\n                    backgroundColor: \"color-primary-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-basic-transparent-disabled-border\",\n                    backgroundColor: \"color-basic-transparent-disabled\",\n                    thumbBackgroundColor: \"color-basic-disabled\",\n                    textColor: \"text-disabled-color\",\n                  },\n                  \"checked.disabled\": {\n                    iconTintColor: \"text-control-color\",\n                  },\n                },\n              },\n              primary: {\n                borderColor: \"color-primary-transparent-default-border\",\n                backgroundColor: \"color-primary-transparent-default\",\n                thumbBackgroundColor: \"background-basic-color-1\",\n                outlineBackgroundColor: \"transparent\",\n                textColor: \"text-basic-color\",\n                iconTintColor: \"transparent\",\n                state: {\n                  checked: {\n                    borderColor: \"color-primary-default-border\",\n                    backgroundColor: \"color-primary-default\",\n                    iconTintColor: \"text-primary-color\",\n                  },\n                  focused: {\n                    borderColor: \"color-primary-transparent-focus-border\",\n                    backgroundColor: \"color-primary-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-primary-focus-border\",\n                    backgroundColor: \"color-primary-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-primary-transparent-hover-border\",\n                    backgroundColor: \"color-primary-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-primary-hover-border\",\n                    backgroundColor: \"color-primary-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-primary-transparent-active-border\",\n                    backgroundColor: \"color-primary-transparent-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-primary-active-border\",\n                    backgroundColor: \"color-primary-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-basic-transparent-disabled-border\",\n                    backgroundColor: \"color-basic-transparent-disabled\",\n                    thumbBackgroundColor: \"color-basic-disabled\",\n                    textColor: \"text-disabled-color\",\n                  },\n                  \"checked.disabled\": {\n                    iconTintColor: \"text-control-color\",\n                  },\n                },\n              },\n              success: {\n                borderColor: \"color-success-transparent-default-border\",\n                backgroundColor: \"color-success-transparent-default\",\n                thumbBackgroundColor: \"background-basic-color-1\",\n                outlineBackgroundColor: \"transparent\",\n                textColor: \"text-basic-color\",\n                iconTintColor: \"transparent\",\n                state: {\n                  checked: {\n                    borderColor: \"color-success-default-border\",\n                    backgroundColor: \"color-success-default\",\n                    iconTintColor: \"text-success-color\",\n                  },\n                  focused: {\n                    borderColor: \"color-success-transparent-focus-border\",\n                    backgroundColor: \"color-success-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-success-focus-border\",\n                    backgroundColor: \"color-success-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-success-transparent-hover-border\",\n                    backgroundColor: \"color-success-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-success-hover-border\",\n                    backgroundColor: \"color-success-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-success-transparent-active-border\",\n                    backgroundColor: \"color-success-transparent-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-success-active-border\",\n                    backgroundColor: \"color-success-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-basic-transparent-disabled-border\",\n                    backgroundColor: \"color-basic-transparent-disabled\",\n                    thumbBackgroundColor: \"color-basic-disabled\",\n                    textColor: \"text-disabled-color\",\n                  },\n                  \"checked.disabled\": {\n                    iconTintColor: \"text-control-color\",\n                  },\n                },\n              },\n              info: {\n                borderColor: \"color-info-transparent-default-border\",\n                backgroundColor: \"color-info-transparent-default\",\n                thumbBackgroundColor: \"background-basic-color-1\",\n                outlineBackgroundColor: \"transparent\",\n                textColor: \"text-basic-color\",\n                iconTintColor: \"transparent\",\n                state: {\n                  checked: {\n                    borderColor: \"color-info-default-border\",\n                    backgroundColor: \"color-info-default\",\n                    iconTintColor: \"text-info-color\",\n                  },\n                  focused: {\n                    borderColor: \"color-info-transparent-focus-border\",\n                    backgroundColor: \"color-info-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-info-focus-border\",\n                    backgroundColor: \"color-info-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-info-transparent-hover-border\",\n                    backgroundColor: \"color-info-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-info-hover-border\",\n                    backgroundColor: \"color-info-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-info-transparent-active-border\",\n                    backgroundColor: \"color-info-transparent-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-info-active-border\",\n                    backgroundColor: \"color-info-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-basic-transparent-disabled-border\",\n                    backgroundColor: \"color-basic-transparent-disabled\",\n                    thumbBackgroundColor: \"color-basic-disabled\",\n                    textColor: \"text-disabled-color\",\n                  },\n                  \"checked.disabled\": {\n                    iconTintColor: \"text-control-color\",\n                  },\n                },\n              },\n              warning: {\n                borderColor: \"color-warning-transparent-default-border\",\n                backgroundColor: \"color-warning-transparent-default\",\n                thumbBackgroundColor: \"background-basic-color-1\",\n                outlineBackgroundColor: \"transparent\",\n                textColor: \"text-basic-color\",\n                iconTintColor: \"transparent\",\n                state: {\n                  checked: {\n                    borderColor: \"color-warning-default-border\",\n                    backgroundColor: \"color-warning-default\",\n                    iconTintColor: \"text-warning-color\",\n                  },\n                  focused: {\n                    borderColor: \"color-warning-transparent-focus-border\",\n                    backgroundColor: \"color-warning-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-warning-focus-border\",\n                    backgroundColor: \"color-warning-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-warning-transparent-hover-border\",\n                    backgroundColor: \"color-warning-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-warning-hover-border\",\n                    backgroundColor: \"color-warning-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-warning-transparent-active-border\",\n                    backgroundColor: \"color-warning-transparent-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-warning-active-border\",\n                    backgroundColor: \"color-warning-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-basic-transparent-disabled-border\",\n                    backgroundColor: \"color-basic-transparent-disabled\",\n                    thumbBackgroundColor: \"color-basic-disabled\",\n                    textColor: \"text-disabled-color\",\n                  },\n                  \"checked.disabled\": {\n                    iconTintColor: \"text-control-color\",\n                  },\n                },\n              },\n              danger: {\n                borderColor: \"color-danger-transparent-default-border\",\n                backgroundColor: \"color-danger-transparent-default\",\n                thumbBackgroundColor: \"background-basic-color-1\",\n                outlineBackgroundColor: \"transparent\",\n                textColor: \"text-basic-color\",\n                iconTintColor: \"transparent\",\n                state: {\n                  checked: {\n                    borderColor: \"color-danger-default-border\",\n                    backgroundColor: \"color-danger-default\",\n                    iconTintColor: \"text-danger-color\",\n                  },\n                  focused: {\n                    borderColor: \"color-danger-transparent-focus-border\",\n                    backgroundColor: \"color-danger-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-danger-focus-border\",\n                    backgroundColor: \"color-danger-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-danger-transparent-hover-border\",\n                    backgroundColor: \"color-danger-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-danger-hover-border\",\n                    backgroundColor: \"color-danger-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-danger-transparent-active-border\",\n                    backgroundColor: \"color-danger-transparent-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-danger-active-border\",\n                    backgroundColor: \"color-danger-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-basic-transparent-disabled-border\",\n                    backgroundColor: \"color-basic-transparent-disabled\",\n                    thumbBackgroundColor: \"color-basic-disabled\",\n                    textColor: \"text-disabled-color\",\n                  },\n                  \"checked.disabled\": {\n                    iconTintColor: \"text-control-color\",\n                  },\n                },\n              },\n              control: {\n                borderColor: \"color-control-transparent-default-border\",\n                backgroundColor: \"color-control-transparent-default\",\n                thumbBackgroundColor: \"color-control-default\",\n                outlineBackgroundColor: \"transparent\",\n                textColor: \"text-control-color\",\n                iconTintColor: \"transparent\",\n                state: {\n                  checked: {\n                    borderColor: \"color-control-transparent-default-border\",\n                    backgroundColor: \"color-control-transparent-default\",\n                    iconTintColor: \"color-basic-800\",\n                  },\n                  focused: {\n                    borderColor: \"color-control-transparent-focus-border\",\n                    backgroundColor: \"color-control-transparent-focus\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.focused\": {\n                    borderColor: \"color-control-transparent-focus-border\",\n                    backgroundColor: \"color-control-transparent-focus\",\n                  },\n                  hover: {\n                    borderColor: \"color-control-transparent-hover-border\",\n                    backgroundColor: \"color-control-transparent-hover\",\n                  },\n                  \"checked.hover\": {\n                    borderColor: \"color-control-transparent-hover-border\",\n                    backgroundColor: \"color-control-transparent-hover\",\n                  },\n                  active: {\n                    borderColor: \"color-control-transparent-active-border\",\n                    backgroundColor: \"color-control-transparent-active\",\n                    outlineBackgroundColor: \"outline-color\",\n                  },\n                  \"checked.active\": {\n                    borderColor: \"color-control-transparent-active-border\",\n                    backgroundColor: \"color-control-transparent-active\",\n                  },\n                  disabled: {\n                    borderColor: \"color-control-transparent-disabled-border\",\n                    backgroundColor: \"color-control-transparent-disabled\",\n                    thumbBackgroundColor: \"color-basic-transparent-600\",\n                    textColor: \"text-control-color\",\n                  },\n                  \"checked.disabled\": {\n                    iconTintColor: \"text-control-color\",\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n    Tooltip: {\n      meta: {\n        scope: \"all\",\n        parameters: {\n          paddingHorizontal: {\n            type: \"number\",\n          },\n          paddingVertical: {\n            type: \"number\",\n          },\n          borderWidth: {\n            type: \"number\",\n          },\n          borderRadius: {\n            type: \"number\",\n          },\n          borderColor: {\n            type: \"string\",\n          },\n          backgroundColor: {\n            type: \"string\",\n          },\n          indicatorBackgroundColor: {\n            type: \"string\",\n          },\n          iconWidth: {\n            type: \"number\",\n          },\n          iconHeight: {\n            type: \"number\",\n          },\n          iconMarginHorizontal: {\n            type: \"number\",\n          },\n          iconTintColor: {\n            type: \"string\",\n          },\n          textMarginHorizontal: {\n            type: \"number\",\n          },\n          textFontFamily: {\n            type: \"string\",\n          },\n          textFontSize: {\n            type: \"number\",\n          },\n          textFontWeight: {\n            type: \"number\",\n          },\n          textColor: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n        },\n        variantGroups: {},\n        states: {},\n      },\n      appearances: {\n        default: {\n          mapping: {\n            borderRadius: \"border-radius\",\n            borderColor: \"background-alternative-color-3\",\n            backgroundColor: \"background-alternative-color-3\",\n            paddingHorizontal: 16,\n            paddingVertical: 8,\n            indicatorBackgroundColor: \"background-alternative-color-3\",\n            textMarginHorizontal: 4,\n            textFontSize: \"text-caption-1-font-size\",\n            textFontWeight: \"text-caption-1-font-weight\",\n            textFontFamily: \"text-caption-1-font-family\",\n            textColor: \"text-alternate-color\",\n            iconWidth: 14,\n            iconHeight: 14,\n            iconMarginHorizontal: 4,\n            iconTintColor: \"text-alternate-color\",\n          },\n        },\n      },\n    },\n    TopNavigation: {\n      meta: {\n        scope: \"mobile\",\n        parameters: {\n          minHeight: {\n            type: \"number\",\n          },\n          paddingVertical: {\n            type: \"number\",\n          },\n          paddingHorizontal: {\n            type: \"number\",\n          },\n          backgroundColor: {\n            type: \"string\",\n          },\n          titleTextAlign: {\n            type: \"string\",\n          },\n          titleFontFamily: {\n            type: \"string\",\n          },\n          titleFontSize: {\n            type: \"number\",\n          },\n          titleFontWeight: {\n            type: \"string\",\n          },\n          titleColor: {\n            type: \"string\",\n          },\n          subtitleTextAlign: {\n            type: \"string\",\n          },\n          subtitleFontFamily: {\n            type: \"string\",\n          },\n          subtitleFontSize: {\n            type: \"number\",\n          },\n          subtitleFontWeight: {\n            type: \"string\",\n          },\n          subtitleColor: {\n            type: \"string\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n          control: {\n            default: false,\n          },\n        },\n        variantGroups: {\n          alignment: {\n            start: {\n              default: true,\n            },\n            center: {\n              default: false,\n            },\n          },\n        },\n        states: {},\n      },\n      appearances: {\n        default: {\n          mapping: {\n            minHeight: 56,\n            paddingVertical: 8,\n            paddingHorizontal: 8,\n            backgroundColor: \"background-basic-color-1\",\n            titleFontSize: \"text-subtitle-1-font-size\",\n            titleFontWeight: \"text-subtitle-1-font-weight\",\n            titleFontFamily: \"text-subtitle-1-font-family\",\n            titleColor: \"text-basic-color\",\n            subtitleFontSize: \"text-caption-1-font-size\",\n            subtitleFontWeight: \"text-caption-1-font-weight\",\n            subtitleFontFamily: \"text-caption-1-font-family\",\n            subtitleColor: \"text-hint-color\",\n          },\n          variantGroups: {\n            alignment: {\n              start: {\n                titleTextAlign: \"left\",\n                subtitleTextAlign: \"left\",\n              },\n              center: {\n                titleTextAlign: \"center\",\n                subtitleTextAlign: \"center\",\n              },\n            },\n          },\n        },\n        control: {\n          mapping: {\n            backgroundColor: \"transparent\",\n          },\n        },\n      },\n    },\n    TopNavigationAction: {\n      meta: {\n        scope: \"mobile\",\n        parameters: {\n          iconWidth: {\n            type: \"number\",\n          },\n          iconHeight: {\n            type: \"number\",\n          },\n          iconTintColor: {\n            type: \"string\",\n          },\n          iconMarginHorizontal: {\n            type: \"number\",\n          },\n        },\n        appearances: {\n          default: {\n            default: true,\n          },\n          control: {\n            default: false,\n          },\n        },\n        variantGroups: {},\n        states: {\n          hover: {\n            default: false,\n            priority: 0,\n            scope: \"all\",\n          },\n          active: {\n            default: false,\n            priority: 1,\n            scope: \"all\",\n          },\n          focused: {\n            default: false,\n            priority: 2,\n            scope: \"all\",\n          },\n        },\n      },\n      appearances: {\n        default: {\n          mapping: {\n            iconWidth: 24,\n            iconHeight: 24,\n            iconMarginHorizontal: 8,\n            iconTintColor: \"text-basic-color\",\n            state: {\n              hover: {\n                iconTintColor: \"text-hint-color\",\n              },\n              focused: {\n                iconTintColor: \"text-hint-color\",\n              },\n              active: {\n                iconTintColor: \"text-hint-color\",\n              },\n            },\n          },\n        },\n        control: {\n          mapping: {\n            iconTintColor: \"color-control-default\",\n            state: {\n              hover: {\n                iconTintColor: \"color-control-hover\",\n              },\n              focused: {\n                iconTintColor: \"color-control-focus\",\n              },\n              active: {\n                iconTintColor: \"color-control-active\",\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n}\n","import { Dimensions } from \"react-native\";\n\n/**\n * NOTE TO DEVS:\n *\n * Spacing should consistent and whitespace thought of as a first class technique up\n * there with color and typefaces.\n *\n * Which type of scale you use is based on the design.\n *\n * If you've got simpler app, you may only need 6 items.  Or maybe you want a spacing scale\n * to be named:\n *\n * export const spacing = {\n *   tiny: 4,\n *   small: 8,\n *   medium: 12,\n *   large: 24,\n *   huge: 64\n * }\n *\n * Whatever you choose, try to stick with these, and not freestyle it everywhere.\n *\n * Feel free to delete this block.\n */\n\n/**\n * The available spacing.\n *\n * Here's the rough guideline.  Customize this for you usage.  It's ok to put exceptions\n * within the components themselves if they are truly exceptions.\n *\n * 0 = none    - nothing. only here to bust out of a zero-based array.\n *\n * 1 = tiny    - elements contextually close to each other\n *\n * 2 = smaller - for groups of closely related items or perhaps borders\n *\n * 3 = small   - ?\n *\n * 4 = medium  - ?\n *\n * 5 = medium+ - ?\n *\n * 6 = large   - between groups of content that aren't related?\n *\n * 7 = huge    - ?\n *\n * 8 = massive - an uncomfortable amount of whitespace\n */\n\nexport const spacing = (\n  rate: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9,\n  direction: \"h\" | \"v\" = \"h\",\n  width?: number,\n  height?: number\n) => {\n  const _height = height || Dimensions.get(\"screen\").height;\n  const _width = width || Dimensions.get(\"screen\").width;\n  return Math.pow(direction == \"h\" ? _height : _width, rate / 10);\n};\n// export const spacing = [\n//   IS_WEB ? scale(0) : scale(0),\n//   IS_WEB ? scale(104) : scale(4),\n//   IS_WEB ? scale(108) : scale(8),\n//   IS_WEB ? scale(112) : scale(12),\n//   IS_WEB ? scale(116) : scale(16),\n//   IS_WEB ? scale(124) : scale(24),\n//   IS_WEB ? scale(132) : scale(32),\n//   IS_WEB ? scale(148) : scale(48),\n//   IS_WEB ? scale(164) : scale(64),\n// ];\n","// import * as RNLocalize from \"react-native-localize\";\nimport i18n from \"i18n-js\";\n// import en from \"./en.json\";\n// import vi from \"./vi.json\";\nimport { useSheets } from \"engines\";\nimport * as R from \"ramda\";\nimport Tabletop from \"tabletop\";\ntype i18nResolve = { code: \"I18N_DONE\"; lang: { en: object; vi: object } };\n\n/**\n * Fetch i18n tr() from sheets\n *\n * ---\n * @version 0.10.19\n * @author nguyenkhooi\n */\nexport async function fetchi18n() {\n  // const { data } = useSheets(0, \"i18n\");\n  const sheetData = await Tabletop.init({\n    key: \"1QkECelCYiVVxopwsZD2UsLYZdmd1vFzFc0-pLb71rX8\",\n    /** set `wanted` with specific `sheetName` to get data only from that sheet */\n    wanted: [\"i18n\"],\n    simpleSheet: true,\n  });\n  return new Promise<i18nResolve>((resolve, reject) => {\n    try {\n      if (!!sheetData) {\n        const i18nCodes = R.pluck(\"code\")(sheetData);\n        const i18nEns = R.pluck(\"en\")(sheetData);\n        const i18nVis = R.pluck(\"vi\")(sheetData);\n        let en = R.zipObj(i18nCodes, i18nEns);\n        let vi = R.zipObj(i18nCodes, i18nVis);\n        i18n.translations = { en, vi };\n        resolve({ code: \"I18N_DONE\", lang: { en, vi } });\n      }\n    } catch (error) {\n      console.warn(\"err useSheets: \", error);\n      return null;\n    }\n  });\n}\n\ni18n.fallbacks = true;\n//* In case such keyword is not in the list yet, return the keyword itself\ni18n.missingTranslation = function (keyword) {\n  return keyword;\n};\n\n// const fallback = { languageTag: \"en\", isRTL: false };\n// const { languageTag } =\n//   RNLocalize.findBestAvailableLanguage(Object.keys(i18n.translations)) ||\n//   fallback;\n// i18n.locale = languageTag;\n// i18n.locale = \"vi\";\n","import { useAppContext } from \"engines\";\nimport i18n from \"i18n-js\";\n\n/**\n * Translates text based on keyword (== \"en\")\n * If no translation found yet, it'll return the keyword\n * ---\n * @example\n * ```js\n * <Text>{tr(\"Hello\")}</Text>\n * ```\n * ---\n * @version 0.10.19\n * - *(add enumKey)*\n * - *(reduce function name for cleaner code)*\n * @author nguyenkhooi\n */\nexport function use18(key: enumKey | string, options?: i18n.TranslateOptions) {\n  const { lang, setLang } = useAppContext();\n  return lang[key] ? lang[key] : key;\n}\n\ntype enumKey = \"tba\";\n\nexport enum LANG {\n  EN = \"en\",\n  VI = \"vi\",\n}\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  ActivityIndicator,\r\n  Animated,\r\n  StyleProp,\r\n  StyleSheet,\r\n  Text,\r\n  TextStyle,\r\n  TouchableWithoutFeedback,\r\n  View,\r\n  ViewStyle\r\n} from \"react-native\";\r\n\r\nexport interface ToastOptions {\r\n  icon?: JSX.Element;\r\n  type?: \"normal\" | \"success\" | \"danger\" | \"warning\" | \"loading\";\r\n  duration?: number;\r\n  style?: StyleProp<ViewStyle>;\r\n  textStyle?: StyleProp<TextStyle>;\r\n\r\n  successIcon?: JSX.Element;\r\n  dangerIcon?: JSX.Element;\r\n  warningIcon?: JSX.Element;\r\n  loadingIcon?: JSX.Element;\r\n\r\n  successColor?: string;\r\n  dangerColor?: string;\r\n  warningColor?: string;\r\n\r\n  onPress?(id: string): void;\r\n}\r\n\r\nexport interface ToastProps extends ToastOptions {\r\n  id: string;\r\n  onClose(): void;\r\n  message: string | JSX.Element;\r\n  placement?: \"top\" | \"bottom\";\r\n}\r\n\r\nexport function Toast(props: ToastProps) {\r\n  const {\r\n    id,\r\n    onClose,\r\n    icon,\r\n    type = \"normal\",\r\n    message,\r\n    duration = 3000,\r\n    style,\r\n    textStyle,\r\n\r\n    successIcon,\r\n    dangerIcon,\r\n    warningIcon,\r\n    loadingIcon = <ActivityIndicator size=\"small\" color=\"white\" />,\r\n\r\n    successColor,\r\n    dangerColor,\r\n    warningColor,\r\n\r\n    placement,\r\n\r\n    onPress,\r\n  } = props;\r\n  const refCtnr = useRef<View>(null);\r\n  const [animation] = useState(new Animated.Value(0));\r\n\r\n  let _icon: JSX.Element;\r\n\r\n  useEffect(() => {\r\n    Animated.timing(animation, {\r\n      toValue: 1,\r\n      useNativeDriver: true,\r\n      duration: 250,\r\n    }).start();\r\n\r\n    let closeTimeout: NodeJS.Timeout | null = null;\r\n\r\n    if (duration !== 0 && typeof duration === \"number\") {\r\n      closeTimeout = global.setTimeout(() => {\r\n        Animated.timing(animation, {\r\n          toValue: 0,\r\n          useNativeDriver: true,\r\n          duration: 250,\r\n        }).start(() => onClose());\r\n      }, duration);\r\n    }\r\n\r\n    return () => {\r\n      closeTimeout && global.clearTimeout(closeTimeout);\r\n    };\r\n  }, []);\r\n\r\n  if (icon === undefined) {\r\n    switch (type) {\r\n      case \"success\": {\r\n        !!successIcon && (_icon = successIcon);\r\n        break;\r\n      }\r\n\r\n      case \"danger\": {\r\n        !!dangerIcon && (_icon = dangerIcon);\r\n        break;\r\n      }\r\n      case \"warning\": {\r\n        !!warningIcon && (_icon = warningIcon);\r\n        break;\r\n      }\r\n      case \"loading\": {\r\n        !!loadingIcon && (_icon = loadingIcon);\r\n      }\r\n    }\r\n  } else _icon = icon;\r\n\r\n  const animationStyle = {\r\n    opacity: animation,\r\n    transform: [\r\n      {\r\n        translateY: animation.interpolate({\r\n          inputRange: [0, 1],\r\n          outputRange: placement === \"bottom\" ? [20, 0] : [0, 20], // 0 : 150, 0.5 : 75, 1 : 0\r\n        }),\r\n      },\r\n    ],\r\n  };\r\n\r\n  let backgroundColor = \"#333\";\r\n  switch (type) {\r\n    case \"success\":\r\n      backgroundColor = successColor || \"#00C851\";\r\n      break;\r\n    case \"danger\":\r\n      backgroundColor = dangerColor || \"#ff4444\";\r\n      break;\r\n    case \"warning\":\r\n      backgroundColor = warningColor || \"#ffbb33\";\r\n    default:\r\n      backgroundColor = \"#333\";\r\n  }\r\n\r\n  const renderToast = () => (\r\n    <Animated.View\r\n      ref={refCtnr}\r\n      style={[styles.container, animationStyle, { backgroundColor }, style]}\r\n    >\r\n      {_icon ? <View style={styles.iconContainer}>{_icon}</View> : null}\r\n      {React.isValidElement(message) ? (\r\n        message\r\n      ) : (\r\n        <Text style={[styles.message, textStyle]}>{message}</Text>\r\n      )}\r\n    </Animated.View>\r\n  );\r\n\r\n  return onPress ? (\r\n    <TouchableWithoutFeedback onPress={() => onPress(id)}>\r\n      {renderToast()}\r\n    </TouchableWithoutFeedback>\r\n  ) : (\r\n    renderToast()\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 12,\r\n    borderRadius: 5,\r\n    marginVertical: 5,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  message: {\r\n    color: \"#fff\",\r\n    fontWeight: \"500\",\r\n  },\r\n  iconContainer: {\r\n    marginRight: 5,\r\n  },\r\n});\r\n\r\n// export default Toast;\r\n","import { sstyled, Txt } from \"components\";\nimport { useAppContext } from \"engines\";\nimport * as R from \"ramda\";\nimport React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  FlatList,\n  ImageStyle,\n  ScrollView,\n  View,\n} from \"react-native\";\nimport * as Animatable from \"react-native-animatable\";\n// import { ScrollView } from \"react-native-gesture-handler\";\nimport RNMasonryScroll from \"react-native-masonry-scrollview\";\nimport { Navigation } from \"screens\";\nimport { spacing, useDimension } from \"utils\";\nimport { S_SockdartHi } from \"./s-sockdart-hi-3d\";\nimport { C_ContentCard } from \"./c-content-card\";\nimport { S_Koiwave } from \"./s-koiwave-3d\";\nimport { S_RingadingDeck } from \"./s-ringading-deck\";\nimport { S_LuccMain } from \"./s-lucc-concept-3d\";\nimport { S_LuccJacket } from \"./s-lucc-jacket-3d\";\n\nfunction ProjectScreen(props) {\n  const { route } = props;\n  const { WIDTH } = useDimension();\n  const [screenShown, showScreen] = useState(false);\n\n  const {\n    project: { color: projectColor, headline },\n  } = route.params;\n  const [_contents, setContents] = React.useState([\"\"]);\n  const [_bodyContents, setBodyContents] = React.useState([\"\"]);\n  const [_imgContents, setImgContents] = React.useState([\"\"]);\n\n  React.useEffect(function sortContents() {\n    const dbContents = [\n      route.params.project.image00,\n\n      route.params.project.image01,\n\n      route.params.project.image02,\n\n      route.params.project.image03,\n\n      route.params.project.image04,\n\n      route.params.project.image05,\n\n      route.params.project.image06,\n\n      route.params.project.image07,\n\n      route.params.project.image08,\n\n      route.params.project.image09,\n    ];\n    const dbBodyContents = [\n      route.params.project.body00,\n      route.params.project.body01,\n      route.params.project.body02,\n      route.params.project.body03,\n      route.params.project.body04,\n      route.params.project.body05,\n      route.params.project.body06,\n      route.params.project.body07,\n      route.params.project.body08,\n      route.params.project.body09,\n    ];\n\n    const newContents = R.reject(\n      (content) => !content || content == \"\",\n      dbContents\n    );\n    const newBodyContents = R.reject(\n      (content) => !content || content == \"\",\n      dbBodyContents\n    );\n    const imgContents = R.filter(\n      (content: string) => content.includes(\"http\"),\n      newContents\n    ).reduce((a, c) => [...a, { url: c }], []);\n    setContents(newContents);\n    setBodyContents(newBodyContents);\n    setImgContents(imgContents);\n    global.setTimeout(() => {\n      showScreen(true);\n    }, 1000);\n  }, []);\n\n  return screenShown ? (\n    <SS.Sctnr\n    // contentContainerStyle={{ justifyContent: \"center\", alignItems: \"center\" }}\n    >\n      <SS.Headline {...props}>{headline}</SS.Headline>\n      <View\n        style={{\n          justifyContent: \"center\",\n          alignItems: \"flex-start\",\n          paddingHorizontal: WIDTH > 996 ? spacing(7) : spacing(5),\n        }}\n      >\n        {_bodyContents.map((body) => (\n          <Txt style={{ marginVertical: spacing(3), textAlign: \"justify\" }}>\n            {body}\n          </Txt>\n        ))}\n      </View>\n      <View\n        style={{\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n        }}\n      >\n        {WIDTH > 996 ? (\n          <RNMasonryScroll\n            showsHorizontalScrollIndicator={false}\n            showsVerticalScrollIndicator={false}\n            removeClippedSubviews={true}\n            columns={4}\n            evenColumnStyle={{}}\n            oddColumnStyle={{ marginTop: 60 }}\n            horizontal={false}\n          >\n            {_contents.map((image, imageIndex) => {\n              return (\n                <C_ContentCard\n                  key={imageIndex}\n                  text={image}\n                  imageIndex={imageIndex}\n                  onImagePress={() => {\n                    let imgIndex = R.findIndex(R.propEq(\"url\", image))(\n                      _imgContents\n                    );\n                    // console.log(\"img index: \", imgIndex);\n                    Navigation.navigate(\"Gallery\", {\n                      images: _imgContents,\n                      imgIndex,\n                    });\n                  }}\n                />\n              );\n            })}\n          </RNMasonryScroll>\n        ) : (\n          <FlatList\n            data={_contents}\n            renderItem={({ item: image, index: imageIndex }) => {\n              return (\n                <C_ContentCard\n                  key={imageIndex}\n                  text={image}\n                  imageIndex={imageIndex}\n                  onImagePress={() => {\n                    let imgIndex = R.findIndex(R.propEq(\"url\", image))(\n                      _imgContents\n                    );\n                    // console.log(\"img index: \", imgIndex);\n                    Navigation.navigate(\"Gallery\", {\n                      images: _imgContents,\n                      imgIndex,\n                    });\n                  }}\n                />\n              );\n            }}\n          />\n        )}\n      </View>\n      <$_RingadingDeck\n        {...props}\n        visible={route.params[\"project\"][\"title\"] == \"Ringading\"}\n      />\n      <$_LuccMain\n        {...props}\n        visible={route.params[\"project\"][\"title\"].includes(\"LUCC Kit\")}\n      />\n      <$_LuccJacket\n        {...props}\n        visible={route.params[\"project\"][\"title\"].includes(\n          \"LUCC Winter Jacket\"\n        )}\n      />\n      <$_Koiwave\n        {...props}\n        visible={route.params[\"project\"][\"title\"] == \"Koiwave\"}\n      />\n      <$_Sockdart\n        {...props}\n        visible={\n          route.params[\"project\"][\"title\"] == \"Koi x Nike Sock Dart High\"\n        }\n      />\n    </SS.Sctnr>\n  ) : (\n    <SS.CtnrLoading>\n      <ActivityIndicator size=\"large\" color={projectColor} />\n    </SS.CtnrLoading>\n  );\n}\n\nexport default ProjectScreen;\n\nconst $_LuccMain = S_LuccMain;\nconst $_LuccJacket = S_LuccJacket;\nconst $_Koiwave = S_Koiwave;\nconst $_Sockdart = S_SockdartHi;\nconst $_RingadingDeck = S_RingadingDeck;\n\nexport const SS = {\n  Sctnr: sstyled(ScrollView)((p) => ({\n    backgroundColor: p.C.background,\n    paddingTop: spacing(5),\n  })),\n  CtnrImg: sstyled(Animatable.View)((p) => ({\n    margin: 10,\n    borderRadius: 10,\n    overflow: \"hidden\",\n    backgroundColor: p.C.surface,\n  })),\n  CtnrLabel: sstyled(Animatable.View)(() => ({\n    margin: 10,\n    borderRadius: 10,\n    overflow: \"hidden\",\n    backgroundColor: \"transparent\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  })),\n  CtnrLoading: sstyled(View)((p) => ({\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flex: 1,\n    backgroundColor: p.C.background,\n  })),\n  //*----Txt-SECTION ----------\n  Headline: sstyled(Txt.H6)((p) => ({\n    // fontSize: 26,\n    color: p.C.text,\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    marginBottom: spacing(2),\n    paddingHorizontal: spacing(6),\n  })),\n  Label: sstyled(Txt.P2)((p) => ({ width: p.chieuRong, textAlign: \"center\" })),\n  S: {\n    IMG_CTNR: {\n      margin: 10,\n      borderRadius: 10,\n      overflow: \"hidden\",\n    } as ImageStyle,\n  },\n};\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport { useDimension } from \"utils\";\n\nexport function S_SockdartHi(props: dKoiwave) {\n  const { visible } = props;\n  const { WIDTH } = useDimension();\n  return (\n    visible && (\n      <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n        <div>\n          <iframe\n            title=\"A 3D model\"\n            width={WIDTH}\n            height=\"480\"\n            src=\"https://sketchfab.com/models/a24b84781d3947798ae14385b34c82ca/embed?autospin=0.6&amp;autostart=0&amp;ui_controls=1&amp;ui_infos=1&amp;ui_inspector=1&amp;ui_stop=1&amp;ui_watermark=1&amp;ui_watermark_link=1\"\n            //@ts-ignore\n            frameborder=\"0\"\n            allow=\"autoplay; fullscreen; vr\"\n            mozallowfullscreen=\"true\"\n            webkitallowfullscreen=\"true\"\n          ></iframe>\n        </div>\n      </View>\n    )\n  );\n}\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport { useDimension } from \"utils\";\n\nexport function S_Koiwave(props: dKoiwave) {\n  const { visible } = props;\n  const { WIDTH } = useDimension();\n  return (\n    visible && (\n      <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n        <div>\n          <iframe\n            title=\"A 3D model\"\n            width={WIDTH}\n            height=\"640\"\n            src=\"https://sketchfab.com/models/f0c987ac5c9b4fb0a40576a6ae46b92e/embed?autospin=0.6&amp;autostart=0&amp;ui_controls=1&amp;ui_infos=1&amp;ui_inspector=1&amp;ui_stop=1&amp;ui_watermark=1&amp;ui_watermark_link=1\"\n            //@ts-ignore\n            frameborder=\"0\"\n            allow=\"autoplay; fullscreen; vr\"\n            mozallowfullscreen=\"true\"\n            webkitallowfullscreen=\"true\"\n          ></iframe>\n        </div>\n      </View>\n    )\n  );\n}\n","import { SwipeDeck, Txt } from \"components\";\nimport { useSheets } from \"engines\";\nimport React from \"react\";\nimport {\n  Linking,\n\n  View\n} from \"react-native\";\nimport * as Animatable from \"react-native-animatable\";\nimport { spacing, useDimension } from \"utils\";\n\nexport function S_RingadingDeck(props) {\n  const { visible } = props;\n  const { data } = useSheets(0, \"Ringading_Exp\");\n  const { WIDTH } = useDimension();\n  React.useEffect(\n    function fetchData() {\n      setDeckData(data);\n    },\n    [data]\n  );\n  const [deckData, setDeckData] = React.useState(data);\n  return (\n    visible &&\n    !!deckData[0] && (\n      <Animatable.View\n        animation=\"fadeInUp\"\n        delay={1000}\n        style={{\n          // padding: spacing(5),\n          flexDirection: WIDTH < 1000 ? \"column\" : \"row\",\n          alignItems: \"center\",\n          alignContent: \"center\",\n        }}\n      >\n        <View\n          style={{\n            // flex: 1,\n            justifyContent: \"flex-start\",\n            width: spacing(8),\n\n            alignItems: \"center\",\n          }}\n        >\n          <Txt.H6\n            category=\"h1\"\n            style={{ color: \"white\", textAlign: \"center\" }}\n            onPress={() => Linking.openURL(\n              \"https://snack.expo.io/@nguyenkhooi/swipedeck-mods\"\n            )}\n          >\n            Try it!\n          </Txt.H6>\n          <Txt.P1\n            category=\"p1\"\n            style={{ color: \"white\", fontSize: 28, textAlign: \"center\" }}\n          >\n            Try to swipe the deck, yup who you like and nah who you don't\n          </Txt.P1>\n          <Txt.P1\n            category=\"h6\"\n            appearance=\"info\"\n            style={{ textAlign: \"center\" }}\n            onPress={() => setDeckData(data)}\n          >\n            Reset Deck\n          </Txt.P1>\n        </View>\n        <SwipeDeck\n          {...props}\n          containerStyle={{\n            width: WIDTH < 1000 ? WIDTH * 0.8 : WIDTH * 0.4,\n            height: WIDTH < 1000 ? WIDTH * 0.8 : WIDTH * 0.4,\n          }}\n          cardStyle={{\n            width: WIDTH < 1000 ? WIDTH * 0.6 : WIDTH * 0.2,\n            height: WIDTH < 1000 ? WIDTH * 0.8 : WIDTH * 0.4,\n          }}\n          data={deckData} />\n      </Animatable.View>\n    )\n  );\n}\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport { useDimension } from \"utils\";\n\nexport function S_LuccMain(props: dLuccMain) {\n  const { visible } = props;\n  const { WIDTH } = useDimension();\n  return (\n    visible && (\n      <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n        <div>\n          <iframe\n            title=\"A 3D model\"\n            width={WIDTH}\n            height=\"640\"\n            src=\"https://sketchfab.com/models/9bc977137c0f4ec5af858a0c45eaf4d2/embed?autospin=0.2&amp;autostart=0&amp;ui_controls=1&amp;ui_infos=1&amp;ui_inspector=1&amp;ui_stop=1&amp;ui_theme=dark&amp;ui_watermark=1&amp;ui_watermark_link=1\"\n            //@ts-ignore\n            frameborder=\"0\"\n            allow=\"autoplay; fullscreen; vr\"\n            mozallowfullscreen=\"true\"\n            webkitallowfullscreen=\"true\"\n          ></iframe>\n        </div>\n      </View>\n    )\n  );\n}\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport { useDimension } from \"utils\";\n\nexport function S_LuccJacket(props: dLuccJacket) {\n  const { visible } = props;\n  const { WIDTH } = useDimension();\n  return (\n    visible && (\n      <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n        <div>\n          <iframe\n            title=\"A 3D model\"\n            width={WIDTH}\n            height=\"640\"\n            src=\"https://sketchfab.com/models/1002c84db1ca45dc9d77c9e8e12a6437/embed?autospin=0.2&amp;autostart=0&amp;ui_controls=1&amp;ui_infos=1&amp;ui_inspector=1&amp;ui_stop=1&amp;ui_watermark=1&amp;ui_watermark_link=1\"\n            //@ts-ignore\n            frameborder=\"0\"\n            allow=\"autoplay; fullscreen; vr\"\n            mozallowfullscreen=\"true\"\n            webkitallowfullscreen=\"true\"\n          ></iframe>\n        </div>\n      </View>\n    )\n  );\n}\n","import { sstyled, Txt } from \"components\";\nimport { useAppContext, useSheets } from \"engines\";\nimport * as R from \"ramda\";\nimport React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  ImageStyle,\n  ScrollView,\n  View,\n  TouchableOpacity,\n} from \"react-native\";\nimport * as Animatable from \"react-native-animatable\";\n// import { ScrollView } from \"react-native-gesture-handler\";\nimport RNMasonryScroll from \"react-native-masonry-scrollview\";\nimport Image from \"react-native-scalable-image\";\nimport { spacing, use18, useDimension } from \"utils\";\nimport ImageViewer from \"react-native-image-zoom-viewer\";\nimport { Navigation } from \"screens/_navigation\";\n\nexport default function AboutScreen(props) {\n  const { C } = useAppContext();\n  const { WIDTH } = useDimension();\n  const [screenShown, showScreen] = useState(false);\n  const { data } = useSheets(0, \"About\");\n  const headline = data[0]?.headline;\n  const [_contents, setContents] = React.useState([\"\"]);\n  const [_imgContents, setImgContents] = React.useState([\"\"]);\n\n  React.useEffect(\n    function sortContents() {\n      const dbContents = [\n        data[0]?.body00,\n        data[0]?.image00,\n        data[0]?.body01,\n        data[0]?.image01,\n        data[0]?.body02,\n        data[0]?.image02,\n        data[0]?.body03,\n        data[0]?.image03,\n        data[0]?.body04,\n        data[0]?.image04,\n        data[0]?.body05,\n        data[0]?.image05,\n        data[0]?.body06,\n        data[0]?.image06,\n        data[0]?.body07,\n        data[0]?.image07,\n        data[0]?.body08,\n        data[0]?.image08,\n        data[0]?.body09,\n        data[0]?.image09,\n        data[0]?.body10,\n        data[0]?.image10,\n      ];\n      const newContents = R.reject(\n        (content) => !content || content == \"\",\n        dbContents\n      );\n      const imgContents = R.filter(\n        (content: string) => content.includes(\"http\"),\n        newContents\n      ).reduce((a, c) => [...a, { url: c }], []);\n      setContents(newContents);\n      setImgContents(imgContents);\n      global.setTimeout(() => {\n        showScreen(true);\n        // console.log(\"data: \", imgContents);\n      }, 1000);\n    },\n    [data]\n  );\n\n  return screenShown ? (\n    <SS.Sctnr\n      horizontal\n      contentContainerStyle={{ justifyContent: \"center\", alignItems: \"center\" }}\n    >\n      <Animatable.View\n        animation=\"fadeIn\"\n        style={{ width: WIDTH * 0.95, alignItems: \"center\" }}\n      >\n        <SS.Headline\n          onPress={() =>\n            Navigation.navigate(\"Gallery\", {\n              images: _imgContents,\n              imgIndex: 3,\n            })\n          }\n          {...props}\n        >\n          {use18(headline)}\n        </SS.Headline>\n        <Animatable.Text\n          style={{ color: C.grey600 }}\n          animation=\"pulse\"\n          iterationCount=\"infinite\"\n        >\n          {use18(\"Let's scroll\") + \" ⟶\"}\n        </Animatable.Text>\n      </Animatable.View>\n      <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n        <RNMasonryScroll\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          removeClippedSubviews={true}\n          columns={WIDTH < 1000 ? 1 : 3}\n          evenColumnStyle={{}}\n          oddColumnStyle={{ marginLeft: 60 }}\n          horizontal={true}\n        >\n          {_contents.map((image, imageIndex) => {\n            return (\n              <C_ContentCard\n                key={imageIndex}\n                text={image}\n                imageIndex={imageIndex}\n                onImagePress={() => {\n                  let imgIndex = R.findIndex(R.propEq(\"url\", image))(\n                    _imgContents\n                  );\n                  // console.log(\"img index: \", imgIndex);\n                  Navigation.navigate(\"Gallery\", {\n                    images: _imgContents,\n                    imgIndex,\n                  });\n                }}\n              />\n            );\n          })}\n        </RNMasonryScroll>\n      </View>\n    </SS.Sctnr>\n  ) : (\n    <SS.CtnrLoading>\n      <ActivityIndicator size=\"large\" color={C.primary} />\n    </SS.CtnrLoading>\n  );\n}\n\nconst C_ContentCard = (props: {\n  text: string;\n  imageIndex: number;\n  onImagePress?(): void;\n}) => {\n  const { text, imageIndex, onImagePress } = props;\n  const { WIDTH } = useDimension();\n\n  // const imageWidth: number = height * 0.4 - 20;\n  const imageWidth: number = WIDTH < 1000 ? WIDTH * 0.8 : WIDTH * 0.3;\n\n  const imageProp = { height: imageWidth };\n  // const isContentImg = startsWith(\"https://\", text);\n  const isContentImg = text.includes(\"https\");\n  switch (isContentImg) {\n    case true:\n      return (\n        <TouchableOpacity onPress={onImagePress}>\n          {imageIndex == 0 ? (\n            <Image\n              source={{ uri: text }}\n              {...imageProp}\n              key={imageIndex}\n              style={SS.S.IMG_CTNR}\n            />\n          ) : (\n            <SS.CtnrImg animation={\"fadeIn\"} delay={100 * imageIndex}>\n              <Image source={{ uri: text }} {...imageProp} key={imageIndex} />\n            </SS.CtnrImg>\n          )}\n        </TouchableOpacity>\n      );\n      break;\n    case false:\n      return (\n        <SS.CtnrLabel animation={\"fadeIn\"} delay={100 * imageIndex}>\n          <SS.Label\n            chieuRong={imageWidth}\n            adjustsFontSizeToFit\n            key={imageIndex}\n            // numberOfLines={20}\n            // ellipsizeMode={\"head\"}\n          >\n            {use18(text)}\n          </SS.Label>\n        </SS.CtnrLabel>\n      );\n      break;\n  }\n};\n\nconst SS = {\n  Sctnr: sstyled(ScrollView)((p) => ({\n    backgroundColor: p.C.background,\n    paddingTop: spacing(5),\n  })),\n  CtnrImg: sstyled(Animatable.View)((p) => ({\n    margin: 10,\n    borderRadius: 10,\n    overflow: \"hidden\",\n    backgroundColor: p.C.surface,\n  })),\n  CtnrLabel: sstyled(Animatable.View)(() => ({\n    margin: 10,\n    borderRadius: 10,\n    overflow: \"hidden\",\n    backgroundColor: \"transparent\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  })),\n  CtnrLoading: sstyled(View)((p) => ({\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flex: 1,\n    backgroundColor: p.C.background,\n  })),\n  //*----Txt-SECTION ----------\n  Headline: sstyled(Txt.H4)((p) => ({\n    // fontSize: 26,\n    color: p.C.text,\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    marginBottom: spacing(2),\n    paddingHorizontal: spacing(6),\n  })),\n  Label: sstyled(Txt.H6)((p) => ({ width: p.chieuRong, textAlign: \"left\" })),\n  S: {\n    IMG_CTNR: {\n      margin: 10,\n      borderRadius: 10,\n      overflow: \"hidden\",\n    } as ImageStyle,\n  },\n};\n","module.exports = __webpack_public_path__ + \"static/media/x-icon.e89ccce9.png\";","module.exports = __webpack_public_path__ + \"static/media/khoi.944db799.jpg\";","module.exports = __webpack_public_path__ + \"static/media/khoi-3d.c49be764.jpg\";","module.exports = __webpack_public_path__ + \"static/media/khoi-3d-round.40d46969.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shades.ea0ed223.png\";","module.exports = __webpack_public_path__ + \"static/media/waving_hand_sign_512.9b891f92.gif\";","module.exports = __webpack_public_path__ + \"static/media/sparkles_512.5ca6a294.gif\";","module.exports = __webpack_public_path__ + \"static/media/nguyenkhoi.914473fc.gif\";","// import * as storage from \"./storage\"\n// export { storage }\nexport * from \"./styles\"\nexport * from \"./helpers\"\nexport * from \"./i18n\"\nexport * from \"./errors\"\nexport * from \"./typings\"\n","//@ts-check\nexport * from \"./_navigation\";\nexport { default as HomeScreen } from \"./home-screen/HomeScreen\";\nexport * from \"./gallery-screen/GalleryScreen\";\n","import { NavigationContainerRef } from \"@react-navigation/native\";\nimport { Toasty } from \"components\";\nimport { AppProvider } from \"engines/providers/app-provider\";\nimport * as React from \"react\";\nimport {\n  AppNavigator,\n  canExit,\n  setRootNavigation,\n  useBackButtonHandler,\n  useNavigationPersistence,\n} from \"screens\";\n\nfunction App() {\n  //* ----RNAV-SECTION -------------------------------\n  const navigationRef = React.useRef<NavigationContainerRef>(null);\n  setRootNavigation(navigationRef);\n  useBackButtonHandler(navigationRef, canExit);\n  const {\n    initialNavigationState,\n    onNavigationStateChange,\n  } = useNavigationPersistence();\n\n  return (\n    <AppProvider>\n      <AppNavigator\n        ref={navigationRef}\n        initialState={initialNavigationState}\n        onStateChange={onNavigationStateChange}\n      />\n      <Toasty ref={(ref) => Toasty.setRef(ref)} />\n    </AppProvider>\n  );\n}\n\nexport default App;\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","//@ts-check\nexport * from \"./images\";\nexport * from \"./icons\";\n","import * as eva from \"@eva-design/eva\";\nimport { ApplicationProvider } from \"@ui-kitten/components\";\nimport React, { useContext, useState } from \"react\";\nimport {\n  colors,\n  dColors,\n  fetchi18n,\n  LANG,\n  THEME,\n  themeDark,\n  themeLight,\n} from \"utils\";\nimport I18n from \"i18n-js\";\n\n/** \n * App Provider,\n * providing `theme`, frbs `userDoc(_)`, and `Kitten's provider`\n * @version 0.11.29\n * - *Add roles: string[_]*\n * @author nguyenkhooi\n * ---\n * @example\n *  In `app.tsx`\n *    import {AppProvider} from `engines`\n *    ...\n *    const [_theme,setTheme] = React.useState<eTheme>(`themeLight`)\n *    ...\n *    return (\n        <RootStoreProvider value={rootStore}>\n          <AppProvider theme={_theme} setTheme={setTheme}> <--- here\n            <...>\n          </AppProvider> <--- and here\n        </RootStoreProvider>\n      )\n    `To setup theme switcher`\n      import {useAppContext} from \"engines\"\n      ...\n      const ThemeSwitcherButton = (props) => {\n        const {C, dark, setTheme} = useAppContext()\n        return (\n          <Button onPress={()=> setTheme(dark? `themeLight` : `themeDark`)} >\n            {dark? `Switch to Light Theme` : `Switch to Dark Theme`}\n          </Button>\n        )\n      }\n */\nexport function AppProvider({ children }) {\n  const [_isReady, shouldReady] = React.useState(false);\n\n  //*----THEME-SECTION --------------------\n  const [_theme, setTheme] = useState<THEME>(THEME.LIGHT);\n  const [_colors, setColors] = React.useState(\n    _theme == THEME.DARK ? themeDark : themeLight\n  );\n  const [_dark, setDark] = React.useState(_theme === THEME.DARK ? true : false);\n\n  React.useEffect(\n    function setupTheme() {\n      switch (_theme) {\n        case THEME.LIGHT:\n          setColors(themeLight);\n          setDark(false);\n          // setTheme(THEME.LIGHT);\n          // storage.save(\"@app_preferences\", { theme: \"themeLight\" });\n          // AsyncStorage.setItem(\"@preferences\", JSON.stringify({ theme: \"themeLight\" }))\n          break;\n        case THEME.DARK:\n          setColors(themeDark);\n          setDark(true);\n          // setTheme(THEME.DARK);\n          // AsyncStorage.setItem(\"@preferences\", JSON.stringify({ theme: \"themeDark\" }))\n          break;\n        default:\n          setColors(themeLight);\n          setDark(false);\n          // setTheme(THEME.LIGHT);\n          // AsyncStorage.setItem(\"@preferences\", JSON.stringify({ theme: \"themeLight\" }))\n          break;\n      }\n      console.log(\"💋 Current theme: \", _theme.toString());\n\n      // setTimeout(() => {\n      //   //* Base theme value to frbs\n      //   userDocState?.path &&\n      //     _theme !== userDocState?.doc?.theme &&\n      //     db.doc(userDocState.path).update({\n      //       theme: _theme,\n      //     });\n      // }, 1000);\n    },\n    [_theme]\n  );\n\n  //*---- I18N-SECTION ---------------\n  const [i18n, setI18N] = React.useState<LANG>(LANG.EN);\n  const [lang, setLang] = React.useState({});\n  const vi = React.useRef({});\n  const en = React.useRef({});\n  React.useEffect(function ini18() {\n    fetchi18n().then((r) => {\n      if (r.code == \"I18N_DONE\") {\n        const _vi = r.lang.vi;\n        const _en = r.lang.en;\n        vi.current = _vi;\n        en.current = _en;\n        setLang(_en);\n        shouldReady(true);\n      }\n    });\n  }, []);\n  React.useEffect(\n    function toggleI18N() {\n      I18n.locale = i18n;\n      setLang(i18n === LANG.EN ? en.current : vi.current);\n    },\n    [i18n]\n  );\n\n  return (\n    <AppContext.Provider\n      value={{\n        C: _colors,\n        dark: _dark,\n        setTheme: setTheme,\n        i18n,\n        setI18N,\n        lang,\n        setLang,\n        isReady: _isReady,\n      }}\n    >\n      <ApplicationProvider\n        {...eva}\n        theme={_theme == THEME.LIGHT ? themeLight : themeDark}\n      >\n        {children}\n      </ApplicationProvider>\n    </AppContext.Provider>\n  );\n}\n\nexport const AppContext = React.createContext<dAppContext>({\n  C: colors,\n  dark: false,\n  setTheme: () => {},\n});\n\n/**\n * App context hook\n *\n * ---\n * @example\n * ```\n * const { C, dark, setTheme } = useAppContext()\n * ```\n *\n * @version 0.11.29\n * - *Add roles: string[_] to userDoc*\n * @author nguyenkhooi\n */\nexport const useAppContext = () => useContext(AppContext);\n\ninterface dAppContext {\n  C: dColors;\n  dark: boolean;\n  setTheme(name: THEME): void;\n  i18n: LANG;\n  setI18N(locale: LANG): void;\n  lang: object;\n  setLang(lang: object): void;\n  isReady: boolean;\n}\n","import {\n  DefaultNavigatorOptions,\n  LinkingOptions,\n  NavigationContainerRef,\n  NavigationState,\n  PartialState,\n  RouteProp\n} from \"@react-navigation/native\";\nimport { StackNavigationOptions } from \"@react-navigation/stack\";\nimport { TransitionSpec } from \"@react-navigation/stack/lib/typescript/src/types\";\nimport { Linking } from \"expo\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { BackHandler } from \"react-native\";\n// import { enum_HomeStack } from \"./home-navigator\";\nimport { enum_PrimaryStack } from \"./primary.navigator\";\nimport { enum_RootStack } from \"./root.navigator\";\n\ntype navigationRoute = enum_PrimaryStack | enum_RootStack;\n\n/**\n * Type of stacked screen item\n */\nexport type dStackedScreenItem = {\n  component: (props) => JSX.Element;\n  // options: StackNavigationOptions;\n  options?: DefaultNavigatorOptions<StackNavigationOptions>[\"screenOptions\"];\n};\n\nconst prefix = Linking.makeUrl(\"/\");\nexport const linking: LinkingOptions = {\n  prefixes: [prefix],\n  config: {\n    screens: {\n      Primary: \"0\",\n      Home: \"home\",\n      About: \"about\",\n      Project: {\n        path: \"project/:title/\",\n      },\n    },\n  },\n};\n\n// ScreenOptions | ((props: {\n//   route: RouteProp<ParamListBase, string>;\n//   navigation: any;\n// }) => ScreenOptions)\n\n/**\n * Setup navigation-service\n * \n * @example\n * import {\n    AppNavigator,\n    canExit,\n    setRootNavigation,\n    useBackButtonHandler,\n    useNavigationPersistence\n  } from \"screens\";\n  \n  function App() {\n    [...]\n    const navigationRef = React.useRef<NavigationContainerRef>();\n\n    setRootNavigation(navigationRef);\n    useBackButtonHandler(navigationRef, canExit);\n    const {\n      initialNavigationState,\n      onNavigationStateChange,\n    } = useNavigationPersistence();\n    [...]\n  }\n */\nexport const Navigation = {\n  navigate(name: navigationRoute, param?: any) {\n    name; // eslint-disable-line no-unused-expressions\n  },\n  goBack() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n  resetRoot(state?: PartialState<NavigationState> | NavigationState) {}, // eslint-disable-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n  getRootState(): NavigationState {\n    return {} as any;\n  },\n};\n\nexport const setRootNavigation = (\n  ref: React.RefObject<NavigationContainerRef>\n) => {\n  for (const method in Navigation) {\n    Navigation[method] = (...args: any) => {\n      if (ref.current) {\n        return ref.current[method](...args);\n      }\n    };\n  }\n};\n\n/**\n * Gets the current screen from any navigation state.\n */\nexport function getActiveRouteName(\n  state: NavigationState | PartialState<NavigationState>\n) {\n  const route = state.routes[state.index];\n\n  // Found the active route -- return the name\n  if (!route.state) return route.name;\n\n  // Recursive call to deal with nested routers\n  return getActiveRouteName(route.state);\n}\n\n/**\n * Hook that handles Android back button presses and forwards those on to\n * the navigation or allows exiting the app.\n */\nexport function useBackButtonHandler(\n  ref: React.RefObject<NavigationContainerRef>,\n  canExit: (routeName: string) => boolean\n) {\n  const canExitRef = useRef(canExit);\n\n  useEffect(() => {\n    canExitRef.current = canExit;\n  }, [canExit]);\n\n  useEffect(() => {\n    // We'll fire this when the back button is pressed on Android.\n    const onBackPress = () => {\n      const navigation = ref.current;\n\n      if (navigation == null) {\n        return false;\n      }\n\n      // grab the current route\n      const routeName = getActiveRouteName(navigation.getRootState());\n\n      // are we allowed to exit?\n      if (canExitRef.current(routeName)) {\n        // let the system know we've not handled this event\n        return false;\n      }\n\n      // we can't exit, so let's turn this into a back action\n      if (navigation.canGoBack()) {\n        navigation.goBack();\n\n        return true;\n      }\n\n      return false;\n    };\n\n    // Subscribe when we come to life\n    BackHandler.addEventListener(\"hardwareBackPress\", onBackPress);\n\n    // Unsubscribe when we're done\n    return () =>\n      BackHandler.removeEventListener(\"hardwareBackPress\", onBackPress);\n  }, [ref]);\n}\n\n/**\n * Custom hook for persisting navigation state.\n */\nexport function useNavigationPersistence(\n  storage?: any,\n  persistenceKey?: string\n) {\n  const [initialNavigationState, setInitialNavigationState] = useState();\n  const [isRestoringNavigationState, setIsRestoringNavigationState] = useState(\n    true\n  );\n\n  const routeNameRef = useRef();\n  const onNavigationStateChange = (state) => {\n    const previousRouteName = routeNameRef.current;\n    const currentRouteName = getActiveRouteName(state);\n\n    if (previousRouteName !== currentRouteName) {\n      // track screens.\n      __DEV__ && console.info(\"🗺️ Current route: \", currentRouteName);\n    }\n\n    // Save the current route name for later comparision\n    routeNameRef.current = currentRouteName;\n\n    // Persist state to storage\n    // storage.save(persistenceKey, state);\n  };\n\n  const restoreState = async () => {\n    try {\n      // const state = await storage.load(persistenceKey);\n      // if (state) setInitialNavigationState(state);\n    } finally {\n      setIsRestoringNavigationState(false);\n    }\n  };\n\n  useEffect(() => {\n    if (isRestoringNavigationState) restoreState();\n  }, [isRestoringNavigationState]);\n\n  return { onNavigationStateChange, restoreState, initialNavigationState };\n}\n\n/**\n * A list of routes from which we're allowed to leave the app when\n * the user presses the back button on Android.\n *\n * Anything not on this list will be a standard `back` action in\n * react-navigation.\n *\n * `canExit` is used in ./app/app.tsx in the `useBackButtonHandler` hook.\n */\nconst exitRoutes: navigationRoute[] = [\"About\"];\nexport const canExit = (routeName: navigationRoute) =>\n  exitRoutes.includes(routeName);\n\n/**\n * Preset Navigation Config\n *\n * ---\n * @version 0.12.18\n *  - *correct type `durationSpec`*\n */\nexport const presetNavConfig = {\n  durationSpec: {\n    config: { duration: 1000 },\n    animation: \"timing\",\n  } as TransitionSpec,\n  noHeader: { headerShown: false },\n  headerTitle: ({\n    route,\n    param,\n    key,\n  }: {\n    route: RouteProp<any, any>;\n    param: string;\n    key?: string | number;\n  }) => ({\n    title: !!key ? route.params[param][key] : route.params[param],\n  }),\n  // backButtonAsX:\n  noTitle: {\n    headerTitleStyle: {\n      fontSize: 0,\n    },\n  },\n};\n","import {\n  createStackNavigator,\n  StackNavigationOptions,\n  TransitionPresets,\n} from \"@react-navigation/stack\";\nimport { IconOooh, img } from \"assets\";\nimport Color from \"color\";\nimport { useAppContext } from \"engines/providers/app-provider\";\nimport * as R from \"ramda\";\nimport React from \"react\";\nimport { Image, TextStyle, View } from \"react-native\";\nimport { GalleryScreen } from \"screens/gallery-screen/GalleryScreen\";\nimport ProjectScreen from \"screens/project-screen/ProjectScreen\";\nimport { IPSCR, KeyOf, spacing } from \"utils\";\nimport AboutScreen from \"../about-screen/AboutScreen\";\nimport HomeScreen from \"../home-screen/HomeScreen\";\nimport { Navigation, presetNavConfig } from \"./navigation-utils\";\nconst screenProps: {\n  [name: string]: { component: any; options: StackNavigationOptions };\n} = {\n  // const screenProps = {\n  Home: {\n    component: HomeScreen,\n    options: { ...presetNavConfig.noHeader, title: \"Khoi Tran\" },\n  },\n  About: {\n    component: AboutScreen,\n    options: {\n      title: \"About\",\n      headerTransparent: true,\n    },\n  },\n  Project: {\n    component: ProjectScreen,\n    options: ({ route }) =>\n      presetNavConfig.headerTitle({ route, param: \"project\", key: \"title\" }),\n  },\n  Gallery: {\n    component: GalleryScreen,\n    options: { headerTitle: \"\", headerTransparent: true },\n  },\n};\n\nconst __PRIMARY = R.keys(screenProps);\nexport type enum_PrimaryStack = KeyOf<typeof screenProps>;\n\nexport const PrimaryStack = (props: IPSCR) => {\n  const { C } = useAppContext();\n  const Stack = createStackNavigator<typeof screenProps>();\n\n  const config: StackNavigationOptions = {\n    ...TransitionPresets.ModalPresentationIOS,\n    gestureEnabled: true,\n    cardOverlayEnabled: true,\n    animationEnabled: true,\n    headerStyle: {\n      elevation: 0,\n      backgroundColor: C.background,\n      borderBottomWidth: 0,\n    },\n    headerTitleStyle: {\n      color: C.text,\n    } as TextStyle,\n    headerBackImage: (props) => (\n      <IconOooh\n        name=\"x\"\n        color={C.hazardYellow}\n        containerStyle={{ marginLeft: spacing(4) }}\n      />\n    ),\n  };\n\n  return (\n    <Stack.Navigator\n      initialRouteName=\"Home\"\n      headerMode=\"float\"\n      mode=\"modal\"\n      screenOptions={config}\n    >\n      {__PRIMARY.map((screen) => (\n        <Stack.Screen\n          name={screen}\n          {...screenProps[screen]}\n          key={screen}\n          // options={screen == \"Home\" ? screenOptions : screen.options}\n        />\n      ))}\n    </Stack.Navigator>\n  );\n};\n","import {\n  NavigationContainer,\n  NavigationContainerRef,\n} from \"@react-navigation/native\";\nimport {\n  createStackNavigator,\n  TransitionPresets,\n} from \"@react-navigation/stack\";\nimport { StackNavigationOptions } from \"@react-navigation/stack/lib/typescript/src/types\";\nimport { Text, Toggle } from \"@ui-kitten/components\";\nimport { useAppContext } from \"engines\";\nimport * as R from \"ramda\";\nimport * as React from \"react\";\nimport { View } from \"react-native\";\nimport { KeyOf, spacing, THEME } from \"utils\";\n// import { HomeScreen } from \"../home-screen/HomeScreen\";\nimport { linking, presetNavConfig } from \"./navigation-utils\";\n// import { PrimaryStack } from \"./primary-navigator\";\nimport { PrimaryStack } from \"./primary.navigator\";\n\nconst screenProps = {\n  Primary: { component: PrimaryStack },\n};\nconst __ROOT = R.keys(screenProps);\nconst Stack = createStackNavigator<typeof screenProps>();\nexport type enum_RootStack = KeyOf<typeof screenProps>;\n\nexport const RootStack = (props) => {\n  const { C, dark, setTheme } = useAppContext();\n  const screenOptions: StackNavigationOptions = {\n    ...TransitionPresets.FadeFromBottomAndroid,\n    transitionSpec: {\n      open: presetNavConfig.durationSpec,\n      close: presetNavConfig.durationSpec,\n    },\n    headerStyle: {\n      elevation: 0,\n      backgroundColor: C.background,\n      borderBottomWidth: 0,\n    },\n    headerTitleStyle: {\n      //   fontFamily: CIRCULAR_BOLD,\n      fontSize: 0,\n    },\n\n    headerTitleAlign: \"center\",\n  };\n\n  return (\n    <Stack.Navigator\n      initialRouteName=\"Primary\"\n      headerMode=\"none\"\n      screenOptions={screenOptions}\n    >\n      {__ROOT.map((screen) => (\n        <Stack.Screen name={screen} {...screenProps[screen]} key={screen} />\n      ))}\n    </Stack.Navigator>\n  );\n};\n\n/**\n * The root navigator is used to switch between major navigation flows of your app.\n * Generally speaking, it will contain an auth flow (registration, login, forgot password)\n * and a \"main\" flow (which is contained in your PrimaryNavigator) which the user\n * will use once logged in.\n */\nexport const AppNavigator = React.forwardRef<\n  NavigationContainerRef,\n  Partial<React.ComponentProps<typeof NavigationContainer>>\n>((props, ref) => {\n  const { isReady } = useAppContext();\n  return (\n    isReady && (\n      <NavigationContainer {...props} ref={ref} linking={linking}>\n        <RootStack />\n      </NavigationContainer>\n    )\n  );\n});\n\nAppNavigator.displayName = \"AppNavigator\";\n"],"sourceRoot":""}